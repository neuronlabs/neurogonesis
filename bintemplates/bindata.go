// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/00_imports.tmpl
// templates/01_initialize_collections.tmpl
// templates/02_collection.tmpl
// templates/03_collection-structure.tmpl
// templates/04_collection-builder.tmpl
// templates/05_model.tmpl
// templates/06_primary.tmpl
// templates/07_fielder.tmpl
// templates/08_single-relationer.tmpl
// templates/09_multi-relationer.tmpl
// templates/10_model-definition.tmpl
// templates/11_single-file-models.tmpl
// templates/12_single-file-collections.tmpl
// templates/13_collection-definition.tmpl
// templates/14_collection-initializer.tmpl
// templates/15_collection-initializer-function.tmpl
// templates/16_jsonapi_handler.tmpl

package bintemplates


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataTemplates00importstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\xca\xcc\x2d\xc8\x2f\x2a\x29\x56\x52\xd0\xad\xad\xe5\xaa\xae\xd6\x55\xc8\x4c\x53\xd0\xf3\x84\x08\x82\xc5\x20\x0a\x14\x34\xb8\xaa\xab\x8b\x12\xf3\xd2\x53\x15\x54\xa0\x22\x56\xb6\x08\x85\xb5\xb5\x0a\x0a\x0a\x0a\x4a\xd5\xd5\x50\xc9\xda\x5a\x25\xae\xea\xea\xd4\xbc\x14\x90\x11\x9a\x60\x73\xa1\x1c\x18\xbb\xb6\x16\x10\x00\x00\xff\xff\x08\x20\xfd\xe4\x84\x00\x00\x00")

func bindataTemplates00importstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates00importstmpl,
		"templates/00_imports.tmpl",
	)
}



func bindataTemplates00importstmpl() (*asset, error) {
	bytes, err := bindataTemplates00importstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/00_imports.tmpl",
		size: 132,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates01initializecollectionstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xb1\x6e\xc3\x30\x0c\x44\x77\x7f\xc5\xc1\xbb\x95\xbd\x6b\xd3\x21\x4b\xd2\xc1\x7b\xc1\x5a\x74\x4a\x54\xa2\x0c\x89\x41\xd1\x0a\xfa\xf7\xc2\x76\x81\x14\xd9\x88\x77\x7c\xc0\x5d\xad\x9e\x67\x51\x46\x2f\x2a\x26\x14\xe4\x87\xdf\xa6\x14\x02\x4f\x26\x49\x4b\x8f\xa1\xb5\xee\x70\xc0\x73\xf2\x8c\x2b\x2b\x67\x32\xf6\x78\xff\x86\xf2\x2d\x27\x1d\xfe\x58\xca\x0e\xc7\x0b\xce\x97\x11\x2f\xc7\xd3\xe8\x56\x67\xfc\x90\x82\x59\x02\xe3\x8b\xca\x3f\x99\xec\x69\x8d\x6b\x85\x49\xe4\x62\x14\x17\xb4\xd6\x75\x0b\x4d\x9f\x74\x65\xd4\xea\x5e\xf7\xf3\x4c\x91\x5b\xeb\x6a\x95\x19\xee\x14\x97\x94\xad\x60\x03\xc6\x71\x09\x64\x6b\xf1\x1d\xf7\x70\x7b\xc2\xea\x1f\x3e\xee\x7b\x86\xfb\xca\x3c\xcc\x37\xdd\x60\x0f\xb7\x09\x60\xf5\x68\xed\x37\x00\x00\xff\xff\x89\xb2\x81\x5f\x13\x01\x00\x00")

func bindataTemplates01initializecollectionstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates01initializecollectionstmpl,
		"templates/01_initialize_collections.tmpl",
	)
}



func bindataTemplates01initializecollectionstmpl() (*asset, error) {
	bytes, err := bindataTemplates01initializecollectionstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/01_initialize_collections.tmpl",
		size: 275,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates02collectiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\x3d\x4e\x04\x31\x0c\x46\xfb\x39\xc5\xa7\xf4\xc9\xf6\xb4\x2c\x05\xcd\x2e\xc5\x5c\xc0\x4c\xbc\x43\x44\xfe\x94\x18\x21\x64\xe5\xee\x28\x0c\x12\x68\x3b\xcb\xcf\x4f\xf2\x53\xf5\x7c\x0b\x99\x61\xb6\x12\x23\x6f\x12\x4a\x36\xb0\x63\x2c\xa7\x13\x1e\x8b\x67\xec\x9c\xb9\x91\xb0\xc7\xeb\x17\x32\x7f\xb4\x92\xed\xef\xae\x34\x87\xf3\x15\x97\xeb\x8a\xa7\xf3\xf3\xea\xa6\xb3\xbe\x85\x8e\x5b\x88\x8c\x4f\xea\xff\x64\x92\x87\x89\x55\x21\x21\x71\x17\x4a\x15\x63\x2c\x4b\xa5\xed\x9d\x76\x86\xaa\x7b\x39\xc6\x0b\x25\x9e\x44\x55\x38\xd5\x48\xc2\x30\x21\xd5\xd2\xa4\x1b\xb8\x7b\xf2\xf7\xb6\xfd\x29\x09\x47\xc1\xbc\x53\xb5\xe0\xec\xc7\xf8\x0e\x00\x00\xff\xff\xfc\x82\x68\x40\xe5\x00\x00\x00")

func bindataTemplates02collectiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates02collectiontmpl,
		"templates/02_collection.tmpl",
	)
}



func bindataTemplates02collectiontmpl() (*asset, error) {
	bytes, err := bindataTemplates02collectiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/02_collection.tmpl",
		size: 229,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1595457055, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates03collectionstructuretmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5b\x6f\xdb\xbe\x15\x7f\xf7\xa7\x38\x35\xda\xda\x0a\x14\xa5\x0f\xc3\x1e\x0c\x78\x40\x93\xa0\x9d\x31\x34\xdb\x92\xae\x0f\x0b\x82\x42\xb6\x8e\x63\x22\x32\xe9\x92\x74\x12\x57\xd0\x77\x1f\x78\x91\xa8\x7b\x1c\xdb\x4b\xfe\xf8\xb7\x7d\x88\x6b\x89\x3c\x97\xdf\xf9\xf1\x5c\xe8\x24\x89\x70\x4e\x28\x42\x7f\xc6\xe2\x18\x67\x92\x30\x7a\x2c\x24\x5f\xcf\xe4\x9a\x63\x1f\x8e\xd3\xb4\xd7\x3b\x39\x81\x24\x09\xce\xf2\x05\xc1\xb7\x90\x93\x70\x1a\xe3\x45\xb8\xc4\x34\x05\x22\x40\x2e\x10\x9c\x04\x58\x0b\x8c\x40\x32\xf8\xb1\x46\xbe\x51\x9b\xbf\xb0\x08\xe3\xc0\xae\x5f\xea\x2f\xbd\xfb\x90\x77\xcb\x1d\xc3\xfb\xf2\x7b\xf3\x3c\x49\x7b\x3d\xb9\x59\x21\x34\xbd\x04\x63\x3c\x24\x3d\x00\x00\xad\x16\x8e\x96\xe1\x6a\x45\xe8\xad\xb1\xe2\x4a\x2f\xe8\x19\xbf\x26\x94\x48\x12\xc6\xe4\x27\x3a\x49\x40\x96\xab\x18\x97\x48\xa5\x80\x28\x94\xe1\x34\x14\x18\x14\x5f\x53\x89\x7c\x1e\xce\x30\xe8\xcd\xd7\x74\x06\xc3\xb2\x1d\x97\x38\x43\x72\x8f\x3c\x4d\xe1\xa8\xc9\x42\xaf\x51\xe9\xf0\xfb\x4c\xf2\x18\x8e\x66\x8c\x4a\xae\x9e\xf2\xe0\x2c\xff\xaf\x07\xc8\x39\xe3\xd6\xa9\xa5\xf1\xc0\x57\x0f\x61\x34\x06\xbd\xb3\xe8\xdb\xf0\x7d\x05\xf1\x24\xf5\xf4\x4e\x32\xd7\x7b\xde\x8c\x81\x92\xd8\x4a\x53\xff\x38\xca\x35\xa7\xea\x9d\x7e\x94\xea\xbf\x49\x02\x6d\xb1\x81\x8e\xe0\x68\xbd\xa3\xcc\x48\x23\xca\xca\xa7\x24\xb6\xb0\xff\x5b\xf3\x62\xc6\x31\x94\x68\xc8\x63\x98\x32\x67\x5c\x7f\xab\xd8\xbf\x2b\xd0\x5a\xcd\x30\x9a\xba\x30\x9e\x9f\xfa\x86\x7e\x02\x82\x20\x38\xaa\xe8\xf1\xaa\x82\xb4\x80\xd3\x35\x89\x23\xad\xc6\x20\xa6\x78\xab\xcd\xfd\x62\x04\x5d\xdf\x94\xf8\x95\x21\x1d\x23\x1d\x1a\x55\x1e\xfc\x0d\x3e\x14\xe0\x2e\x6e\x1e\xc3\x32\xbc\xc3\x61\x45\x86\x5f\xdc\xed\xe5\x1b\x15\x3c\xc4\x3a\xa0\x22\xcf\x43\x7a\x8b\x99\x3f\x4e\x7e\x45\xc7\x35\xb9\x51\x6a\x72\xdb\x5c\x88\xcd\xdf\xa9\xf1\x4f\x09\x8c\xa6\xc6\xe5\x56\xa4\x33\xf3\x8a\x2e\x04\x41\xe0\x15\xc3\xfc\xbe\x0b\xc3\xc4\x6a\x1b\x65\x6a\xd3\x22\x25\xce\xe4\xe3\xf6\xac\x80\x07\x22\x17\xb0\xe2\xec\x9e\x44\x18\xc1\x60\x26\x1f\x07\xa0\xce\x0f\x3e\xca\xbd\x18\x73\x26\x1f\x87\x33\x65\x89\x95\x75\x66\x3e\x7d\xf8\xcd\xa4\x67\x33\xc9\x62\xe9\xc3\xcb\x33\x6a\x42\x05\x72\x09\x44\x7f\x88\x1a\x7b\x08\x95\xcc\x85\x73\xe7\x54\xae\x84\xef\xcf\x96\x62\x7e\xaf\x44\x7c\x3c\x2e\x85\xdc\xe5\x6a\xc6\x45\x70\x81\x0f\x43\x8d\x5c\x70\x16\x87\x42\x5c\x30\x83\xa0\x0f\x7d\xca\xe4\x82\xd0\x5b\x55\x85\x0d\x02\x7d\xaf\x10\xa9\x22\xda\xa3\xad\x99\xb3\x25\x6b\x3a\x18\x53\xaa\x07\xd1\x34\x70\xf8\x3d\x8b\x21\x9a\x20\x26\xca\xff\x59\x45\xa1\x44\x58\xeb\x8f\x7a\x94\xad\x71\x07\x09\xb6\x51\xb5\x7f\xb0\x87\x84\xca\xbf\xfe\xc5\x37\x31\xf4\x9e\x13\xf5\x0f\xfe\x9f\x25\xf0\x0e\xcb\x5d\x03\x7f\x8e\x31\x4a\x84\x48\x7f\x74\x04\x7e\xef\xb0\x1b\x45\x07\x0b\xfb\xaf\x1c\x75\x07\xe5\xae\x51\xbf\xc4\x39\x47\xb1\x78\xdd\x2e\xc1\x1a\x71\xd8\xb4\xbf\x43\x33\xb0\x7f\x69\xe0\xc6\x93\x56\xb2\xbc\x22\x57\x0a\x20\xef\x44\x96\x5e\x92\xbc\x65\x6b\xa9\x8c\x09\xf4\x1c\x9b\x24\xc6\xa8\xb7\x1c\xe3\x50\x4f\x72\xea\x95\x09\xc8\xa5\x7d\x24\xcc\xc4\x9b\x24\x64\xee\xd6\x05\x13\x71\x15\x93\x19\xea\x77\x27\x27\xf0\x31\x8a\x92\xc4\xbd\xb5\x3c\x0b\xa3\xc8\xd0\x71\x50\x7f\x39\x80\xec\x81\x58\x90\x95\x06\x2b\x67\x24\xa1\xab\xb5\x84\x81\x81\x6a\xe0\x28\xa9\x8c\x6f\xa7\x65\xf5\x6d\xc6\xa8\x46\xdb\x9e\x41\xd4\x5c\x76\x91\xa8\xbe\x33\xdf\xf2\xd8\x69\x38\x0d\x05\x7e\xdd\xac\x9a\xba\x18\x23\x70\xdc\x3e\x6d\x76\xd3\x34\x47\x48\x6d\xd7\xb2\x4a\x34\xb5\x67\x21\xb7\x6c\x8f\xe3\x90\xbb\x97\x11\x36\x53\x5d\x52\x98\x2d\xfa\x44\x30\x8e\xf2\xe9\xbb\x2b\x50\x15\x72\x9d\x6e\x26\x34\xc2\xc7\x61\x11\x3e\xfd\x24\xdd\x65\x3e\xcf\x44\x6c\x93\xd6\x1d\x48\x85\xd3\xea\x8e\xa9\x8b\x6e\x51\x67\x51\xbc\x39\xac\xf9\xba\x6b\x72\x53\x4c\x18\x4a\x92\xc1\xf6\x02\x1f\xae\x66\x6c\x85\x9d\xfc\xcd\x2c\xd3\x60\x7b\x25\x67\x3e\x46\x11\x72\x1f\xd8\x9d\x9d\x21\x86\x39\x43\x75\xd3\x7f\x59\x5c\x96\x63\xf6\x86\xdd\x75\x85\xfd\x1c\xe5\xbc\x18\xfa\x09\x95\xc8\x69\x18\xfb\xd0\x3f\x3f\x85\x88\xa1\xa0\x03\xe9\x2e\x7d\xa0\xae\xc9\x5d\xf9\xc0\x31\xbc\xfb\xda\x57\x67\xc7\xab\x27\xad\x92\x13\xc6\xe0\x8f\x51\x94\xa7\x16\x93\xc9\x7e\xf8\x55\x22\x95\x91\xb6\xe9\x2b\x49\x90\x46\xf9\xf5\xdb\x59\x8c\x21\xaf\x9f\xeb\x4c\x34\xcc\xd4\xfb\x9d\xb2\x8f\x21\x7c\x00\x9f\x18\x2f\xad\x12\xc0\xe6\x20\x37\x2b\x1c\x29\xfd\xa7\x18\x33\x7a\x2b\xbe\x32\x1f\xfe\x1e\x8a\x7f\x52\xd4\x9f\x5f\x42\xba\x51\xf8\xcf\x19\x47\x72\x4b\xe1\x0e\x37\x40\x04\x50\x26\x81\xae\xe3\x38\x9c\xc6\x08\x72\x11\x52\x6d\x97\x4a\x6b\xda\xd6\x07\xb6\x8e\xa3\x0c\xb2\xd0\x06\x6a\xdf\xb4\xf7\x04\x40\x3b\x54\xea\x5a\x12\x6c\xe9\xdb\x33\x8d\xaf\x91\x10\x4c\x63\x58\x20\xa2\xf6\x60\x92\x91\xf5\xd9\xbd\x5e\x47\xe1\xae\x48\x2e\x14\xef\x4a\x32\x10\xfb\x24\x03\xa7\xa0\x70\x05\x60\x80\xd1\x11\xde\x26\x37\xd8\x85\xdd\xd9\xa1\xd4\x52\xbf\x78\x82\xb0\x26\xda\x1b\x12\xf5\xa5\x92\x24\x84\xcb\x0a\xa6\x97\x39\x39\x81\xcf\x28\x1b\xba\x8e\x5b\x94\x7b\x77\x1d\x7b\x37\x1d\x8d\xa6\x1d\xae\xe9\xd0\x79\x52\xa0\x54\x27\x53\x48\x4e\xe8\xad\xa7\x6c\x6d\x6b\xd1\xae\x6f\x92\xe4\x18\x6c\xfa\x6c\xe9\x55\xea\xc3\x77\x77\xb3\x42\x49\xbc\xc5\x10\xf6\x44\xc7\xa2\x12\xf9\x02\x67\x77\x4a\xdd\x8a\x93\x65\xc8\x37\x3a\x67\x2e\x42\x01\x3f\x91\x33\xb8\x0f\xe3\x35\x06\x25\x8b\x82\x89\xf8\x97\x59\xfa\x0f\xdc\xfc\x17\x39\x1b\x7a\x4f\x5b\x97\x1d\x76\x6d\x9f\x46\xef\x9b\x92\xec\x43\xdf\xc4\x5b\x8c\x34\x5d\xaa\x88\x0f\x4a\x56\x69\x63\x2a\xb6\xfd\xb1\xfa\xa1\xcc\x6d\x6b\x53\x3e\x45\xcd\x35\x5f\xe0\xfa\x26\xff\xe1\xc7\xfc\x18\xa1\x0d\xad\xf7\x4e\x3a\xeb\x15\x7d\x71\xd3\xc0\x82\xac\x86\x9e\xf9\x8a\x51\xf1\x17\x16\xaf\xa9\x05\xcd\x78\x5a\xeb\x44\xad\x41\xe3\xb2\xde\xc0\xac\xb7\xb2\x52\xc0\x58\x60\x71\x13\xe3\xf0\xdd\x37\x7b\xeb\xad\x5a\x7e\x26\xca\x97\xb5\xc2\x06\xc3\x24\xc9\x06\x75\xa7\x1b\x15\xeb\xa1\x96\xea\x95\xb6\xd6\x52\x65\x37\xc9\xe6\x65\x96\x4d\xe8\x7d\x18\x13\x83\x91\xb5\x41\x35\xd6\x5a\xcf\x08\x06\xef\xc4\x00\xe6\x6c\x4d\xa3\x7c\x4c\xd7\x4c\x1c\x95\xd3\x96\x3b\x9f\x83\xbe\xf5\xbc\x6c\x63\x5a\xfa\x96\xc3\x1a\xae\x56\x48\x23\xe3\x94\xf0\x2d\x08\x5e\xed\x8a\xba\x14\x7a\x91\x33\x36\x9a\x06\x9f\x51\x56\x32\xf0\x36\x25\xab\x52\x55\x13\xed\x52\x35\x6f\x59\x3f\x5c\x41\x7b\x1e\xa9\x1b\x68\x56\x9f\x74\x3a\xc6\xd5\x8a\xf4\xeb\x9b\x96\x84\x98\xa4\xbe\xfe\x7d\xce\x89\x3c\x36\x84\x6c\x10\xa2\x4d\xac\x2d\xa6\x51\x9a\x96\x7e\x3e\xec\xb4\x89\xa3\x58\xc7\xb2\xd0\xa0\xb4\x26\xea\xd6\xf9\xc5\x01\xfd\xd4\x24\xa3\x54\x95\x27\x98\x60\xd8\x36\xc4\x36\x55\x6d\xb5\xdf\x79\x5c\x83\xa6\x52\xdd\xc5\xf5\x87\x9b\x76\xf9\x15\x39\x1a\x35\x5b\xe1\xaf\x1a\x2b\xbc\x38\x40\x85\xdf\xff\x5e\xa1\xd1\xb6\xc3\x95\xf8\x76\xb6\xe8\x7e\x3c\x83\x3c\x4d\xe1\xe9\xda\xfe\xc2\xf7\x10\xff\xb7\xaa\xfe\xeb\x15\xf4\x72\xda\x3b\xc0\xb5\x82\xa6\x95\x9a\x47\xdb\x13\x11\x99\x43\xe1\xdd\x81\xa2\x92\x27\xa6\xc6\x33\x6b\xf8\x58\x0e\x44\x1e\x29\x5d\x2d\x1a\xc3\x72\x85\x52\x6e\x33\x00\x99\x75\x2f\x72\x3b\x62\x54\xb9\xe9\x67\xb4\xc5\xf0\x63\xf6\x18\x93\xaf\x6a\x75\xb7\xfd\x7a\xc4\x6b\x4e\xbe\xaf\x76\x0d\xb8\xf3\xbd\xdb\xb6\x75\x6b\x6b\x66\x3e\x97\x9d\x8c\x22\x30\x27\x7c\x4f\x92\x42\xa9\x2f\xeb\xba\x36\xfc\xcd\xe9\x8e\x2b\xbf\x6a\x47\xe0\x2e\x00\xf3\xa7\xff\x0b\x00\x00\xff\xff\xbb\x00\x71\xb8\xad\x27\x00\x00")

func bindataTemplates03collectionstructuretmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates03collectionstructuretmpl,
		"templates/03_collection-structure.tmpl",
	)
}



func bindataTemplates03collectionstructuretmpl() (*asset, error) {
	bytes, err := bindataTemplates03collectionstructuretmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/03_collection-structure.tmpl",
		size: 10157,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1596724063, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates04collectionbuildertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5d\x6f\xdb\x3a\xd2\xbe\xcf\xaf\x98\x13\x9c\x42\x72\x90\x28\x7d\x81\x17\x7b\x61\xc0\x17\x4d\x7a\x5a\x14\x38\xa7\xdd\x6d\xba\x67\x2f\x82\xe0\x80\x16\x47\x0e\xb7\x12\xe9\x25\xa9\x34\x86\xe0\xff\xbe\xe0\x90\xfa\xb2\xe5\xaf\xb8\x45\x53\x6c\x2f\x8a\x34\x12\x35\x33\x7c\x66\xe6\x99\xe1\x30\x55\xc5\x31\x13\x12\xe1\x34\x55\x79\x8e\xa9\x15\x4a\x5e\x4c\x4b\x91\x73\xd4\xa7\x70\xb1\x5c\x9e\x54\xd5\xaf\xaa\xb4\x30\x9e\x40\x42\xbf\x5f\x5e\x42\x55\x25\xd7\xcd\xea\xe4\x1f\x25\xea\xc5\x95\xff\x64\xb9\x04\x61\xc0\xde\x23\xfc\xc7\x3d\x85\x20\x09\x4a\x83\x1c\xac\x82\x54\x23\xb3\x08\x4c\x72\xc0\x47\x4c\x4b\x8b\x4e\x9e\x5b\x2b\xd0\x40\xa6\x34\x7d\x5b\x55\xc9\x1f\x8a\x63\x9e\xbc\x67\x05\x2e\x97\x05\xfd\xff\xc4\x2e\xe6\xb8\x5d\xb5\xb1\xba\x4c\x2d\x54\x27\x00\xd0\xa8\xe6\xcc\xb2\x29\x33\x98\x84\x75\xf4\x12\xb5\x76\xff\x94\x3e\x59\x9e\x38\x0b\x6e\x52\x35\x47\xd0\x68\x4b\x2d\x0d\xcc\xc4\x03\xca\xb0\x03\xe3\xde\x24\x27\x59\x29\x53\x88\xfb\xda\x3f\x62\x8a\xe2\x81\x34\x9f\x6d\xb3\x6b\xe4\xc5\xc7\x23\x38\x23\x99\x89\xd7\xe6\xcd\xf4\x3a\xc1\xa3\x3c\x2c\x3d\x09\x5b\x49\x82\x98\x60\xf3\x6f\x5a\x37\x16\xd3\x5e\x1c\xf0\xcc\x82\x4a\xd3\x52\x6b\xe4\xc0\x4b\x2d\xe4\xac\xeb\x09\xf7\xeb\x5c\xab\x14\x8d\x39\x76\x4b\xbf\x69\x1d\x8f\xbc\xde\xb0\x13\x91\xc1\x26\x61\x89\xc3\xfb\x97\x09\x48\x91\x87\xc5\xbd\xad\x6f\xfe\x88\xd6\x2e\x0f\x06\x8a\x8c\x0b\x30\x5d\xdb\xc7\x06\x26\x17\x5c\xa9\x92\x16\x1f\x2d\xa8\xac\xe7\xe7\xfa\xd3\x23\x61\xb9\xb6\x8f\xf1\xa8\xd6\x91\x5c\x07\x5d\x87\xbb\x9a\xe4\xd4\x3b\x50\xa5\xb4\xbd\x3d\xc8\xb2\x98\xa2\x76\x5b\xa0\xdc\x00\x21\x8d\x65\x32\x0d\x29\x34\xd7\xea\x41\x70\xe4\x7e\x67\x47\xef\xc8\x69\x8f\x47\x10\x0b\x69\xff\xf6\xff\xe7\xde\xe5\xa3\x23\x7d\xfe\xf2\xfc\x5b\xb8\x3d\x98\x1a\x60\x7b\x27\x0d\x6a\x0b\x12\xbf\x40\xb4\xc2\x28\x51\x83\x58\x6c\x46\x20\xa4\x55\x04\xab\xb1\x4a\x1f\x9d\xeb\x5e\xed\xf3\xcd\x8d\xda\xbe\x80\xd2\x3f\xe7\xdc\x31\x72\x49\x3f\x6a\xea\xdb\x8c\xd7\xd1\xbc\xe1\xf5\xfd\x18\xf1\x54\xdb\xea\xa0\x72\x58\xbd\x11\x92\x37\x79\xc8\xf2\x7c\xb5\x50\xf9\x6c\x0c\x34\x5c\x30\x9b\xde\xa3\x71\x55\xaf\xc3\x33\xc7\xc2\xe7\x4c\x70\xe0\xdd\xde\x9d\xad\x28\xff\x4a\x48\x4a\x91\xef\x8d\x25\xed\x88\x6c\x30\xa4\xdd\x35\x09\x7b\x01\xeb\x77\x51\xdb\xb9\xd3\x9c\xbe\xd6\x00\xf2\x78\x02\x05\xfb\x8c\x1e\x09\xe8\x40\x01\x0e\x8b\x1c\x65\xdc\x31\x6f\xe4\x95\x39\x76\x14\xee\x4b\xcd\xe4\x0c\xbb\xf6\x77\x34\x7b\xf9\xb7\xe2\x0e\x26\xdd\x15\xb7\xe2\x2e\x89\xd7\x55\x8d\xd6\x63\xab\x08\x88\x48\x91\x87\x24\xfb\x88\x99\x46\x73\x0f\xda\xff\x44\x03\x42\xce\x4b\x3b\x90\x67\x9e\xcf\x33\x81\x39\x37\x09\xbc\xb3\x50\x88\xd9\xbd\x85\xa9\xab\x5b\xc5\xd4\x35\x6a\x5f\x84\xbd\x27\xb6\x12\x32\xcd\x4b\x47\xf3\x1a\x73\xe6\x90\x3e\x3a\x37\x83\x99\xdf\x89\xbb\x76\xc4\x4c\x63\x5c\xc0\xf4\x2d\xb6\x35\xd1\x08\x39\xcb\xd7\xfa\xc6\x00\x66\x2f\x1b\x7b\xa9\xe8\x8a\x44\x46\x58\x86\x32\x6a\x40\x2a\x0b\x99\x2a\x25\xa7\xc7\x0e\x4e\x67\x4f\xbf\xcf\x72\x75\x37\xcd\x99\x31\x1e\xc0\x3f\x59\x5e\xe2\x7b\xf5\x11\x4d\x99\xdb\x63\x5d\xf0\x16\xa9\xd6\x3e\x83\xe4\x26\x48\x0e\x4b\x6b\x32\xfe\x89\x59\xdd\xcd\x9d\xc1\x3c\xeb\xe6\xd3\x6b\xcc\xd1\x22\x70\xfa\x61\xd6\xfc\xde\xb6\x43\x9b\x7d\x7f\x9c\x9b\xbc\x01\x3f\x46\x15\xab\x6d\x0d\xd8\xbd\x11\xb9\x45\x0d\x8c\x73\xdf\x4b\x46\x19\x3d\x88\x20\x34\x41\x5f\xb5\x58\x39\xc9\xb1\x57\x00\xfe\x47\xe2\x1f\x86\x18\xdf\xf2\xf1\xd3\xa0\xdc\xc1\x26\x1d\x08\xf7\x2c\x54\x9d\x1d\x8c\xf6\x85\x3e\x20\xfd\xaf\x7b\xd4\x18\x8e\xbc\x26\x1c\x33\x88\xbd\x43\x93\x55\x03\xef\x4e\xc3\xd1\x83\x63\x11\x13\x1d\x0b\x39\xe9\xac\x11\x37\xd6\x1d\x00\xcf\xc1\xcb\x86\x24\x49\x84\xb4\xa8\x33\x96\x62\xb5\xfc\x56\x1e\xf8\xda\x2e\xe8\xee\xa8\xde\x4a\x92\x24\x07\x39\xa3\xaa\x7c\xc1\xff\xb5\x2e\x95\x34\xce\xf0\x9c\xf1\xb1\xae\x9e\xb0\xac\xcf\x0d\x54\x57\xab\xaa\x59\x5d\x73\x50\x5d\x72\x9b\x36\xb9\x5e\xe0\xfa\xe3\x30\xb9\x58\x35\x24\x50\x52\x5b\x71\x5e\x49\x50\x73\xf7\x8a\xe5\xad\x80\x37\x54\xf0\xd1\x46\xe0\xc7\x31\x3e\x35\x7d\x1b\xe0\x12\x33\xec\x33\x68\x59\xab\xfc\x6d\xd4\x6c\xc6\xc1\x45\xce\xea\xdb\xf5\xb3\xcb\xe0\xd6\x97\xcb\xb8\xaa\xac\xfa\x5d\x7d\x41\x7d\xcd\x0a\xcc\x61\xf5\x7d\x6d\xbf\x8b\x31\x1f\x75\x3e\xbc\x76\x29\xec\x84\xd8\x96\x50\xd8\x1e\x66\x5b\x5c\xdf\x25\x4c\x6f\xef\x96\x82\xf6\x27\xd3\x82\x4d\x73\xf4\x3b\x5a\x89\x8e\xab\xc5\x3b\xc9\xf1\x31\xee\x42\x43\x4f\xea\x0e\x70\x53\xc5\xdb\xb9\xb1\x09\x84\xe9\x4d\xf2\x1e\xbf\x64\x71\xc1\xe6\x73\x21\x67\xc9\xb5\x6b\x30\xde\xb9\x74\x95\x2c\x3f\x87\xd3\xb7\x68\xad\x90\x33\xd7\x32\xae\x82\x1f\xc1\x74\x01\xc2\x19\x43\x0d\xae\xef\x65\xa2\xa0\xb8\xdf\x5e\x66\x4c\xe4\xc8\xc7\xf0\xe2\xe1\x94\x90\x18\x3d\x11\xce\xcb\x4b\x48\xef\x31\xfd\xdc\x09\x53\xb4\xcd\xfc\xae\x0d\x4b\xb7\xf6\x81\x69\xe8\xc7\x39\xdc\xde\x9d\xd5\xfb\xbc\xa1\x99\x1d\x3d\x6f\x5a\xf4\xbf\xce\xbd\xcc\xb6\x53\xdf\x37\xfc\x5a\xdc\x4d\x2b\xf7\x1c\xd4\x67\x12\x55\x7f\x44\x98\x78\xc5\xf1\x28\xa1\x35\x57\x0b\x27\x29\x26\xb5\x2d\x28\x22\x83\x5f\xd4\xe7\x8e\xd4\x3d\x3d\xba\xc5\xa1\x0f\x2c\x17\x9c\x0c\x08\xb6\x9d\x92\xce\x31\x44\x2f\x4c\xd4\xef\x40\x6b\x38\x7b\x2e\xbf\x62\x06\x3f\x2d\xe6\xed\x61\xe1\x34\x80\x35\xea\x19\xb9\xaf\x3b\x5b\x97\x76\xb3\x24\xb8\x69\x02\x6c\x3e\x47\xc9\xe3\xfe\xf3\xf3\x2e\xb8\xa3\x43\xf9\x3c\x70\x4c\xdc\x66\x64\x5f\xfa\x81\xdc\x5e\x55\x17\x80\x92\x07\xee\xfe\x5d\x14\xc2\x82\x41\xeb\x09\xb4\x60\x8f\xa2\x28\x8b\xce\xbc\x4c\x4d\xff\x8d\xa9\x35\x41\x38\x72\x97\x3a\x6e\x25\x1d\xed\xc3\x68\xf4\xdc\x1f\xd9\xba\x1d\xbf\xc8\x3a\xbd\x11\x8d\x84\xe1\x9e\x19\x60\xb9\x46\xc6\x17\xc0\x45\x96\xa1\x46\x69\x81\x86\xd4\x2a\x83\x39\x9b\x09\xb9\xc2\xcd\x4f\xab\xe8\xb4\xa5\x38\xa7\x8d\x51\xb3\xf9\xa3\x14\xee\x8e\xe1\x87\x76\x4e\x1f\xb2\xcc\x65\x73\xe3\x47\xdf\x3b\x69\x3a\x61\x45\x06\x14\xbd\xa6\xe3\xb1\x61\x0b\x2a\x90\xe6\xb3\x98\x03\x33\x50\x30\xb9\x08\x4e\x8e\x0c\x64\x5a\x15\x81\x91\xe6\xca\x08\xab\xf4\xc2\x89\x9f\x62\xa6\x34\xc2\x14\x67\x42\x4a\x47\xaa\x6d\x85\xf5\x8b\xe9\x24\x07\x91\x37\x23\x82\x97\xf5\xa5\x86\x71\x7d\x00\x33\xa0\x0a\xe1\xd9\x98\xd2\xb3\x5e\x96\xe6\xac\x34\x98\x3c\xab\xe8\xf1\xb6\xc5\x1e\xb1\x1f\x2b\x7e\x7a\xa6\x1f\x1a\x41\x37\xe8\x5e\xb5\xa7\x9c\xb6\x95\x22\x3f\x3a\x1f\xb8\xf8\x08\x75\xc3\x37\x66\x79\xae\xbe\x20\xef\x2c\x35\x24\x64\xec\x5e\xc2\x45\x7b\xca\xfc\xbb\x16\x05\xd3\x8b\xba\xb5\xbb\x1c\x78\x83\xa5\x56\xd2\xbf\x6f\x9b\xcf\xa6\xa6\x85\xd5\x81\x65\xc3\xa5\x1a\x69\xf0\x6b\xba\x92\xeb\x27\x7d\x89\x28\x39\x7d\x77\xe4\xb5\x14\xed\x2f\x0e\x1b\x5e\x69\xdd\xbe\x6b\x80\xb8\x9e\x81\xcc\xba\x41\x7b\x78\xb7\x10\x36\xb4\xb5\x19\xe8\x1b\x31\xd8\xfb\x1d\xde\x18\x7c\xd3\xa6\x80\x16\xb5\x1d\xde\x98\xa6\x87\x6b\x27\x8d\xe8\xf4\x7c\x5b\x3b\xb0\x77\x2b\xd0\xa0\xdf\x34\x01\xf5\x93\xe3\xca\x7f\x37\xe6\x6e\xd0\x1e\x7a\x92\x73\xc5\x41\x73\xd4\x57\x8b\x36\xb7\x8d\xd2\xb6\xf6\x39\xdd\xe5\x74\x6f\x6e\xe1\x6a\xe1\xce\x54\xac\xcc\xc3\x1a\x07\xa7\x72\x22\x90\x03\x33\x29\x4a\xee\x1c\x01\xef\xa4\x7f\x4a\x79\xef\x04\x72\xac\x5f\x3a\xa5\x8c\x73\x88\x2e\xa2\xba\x74\x34\x94\x02\xd2\x95\x04\x91\x60\x02\xd1\x85\xe0\x51\x02\x9f\xee\x31\x48\x52\x59\x97\x7a\xa8\xcb\xc1\x96\x82\xc4\x4c\x8a\x4c\xa4\x4c\xa6\x58\xaf\x74\x7a\x5d\x55\xa1\xcf\x37\x71\x92\xd2\xbb\x18\x69\x2f\xc6\xa9\x2a\x91\x85\x05\xc9\x8d\xd2\xd6\x45\xff\x66\x2a\x6a\x29\xe7\x6b\x71\x4f\xf0\xe2\x73\x24\x1f\x07\x71\x40\xaa\xbd\x64\x08\x37\xf7\x4a\x5b\x7f\xb9\xe0\xed\xee\xde\x2b\xec\xa6\x21\x91\xb5\x9f\x8e\x60\x32\x81\x97\x4f\x65\x90\xdd\x04\x92\x32\xe9\x48\x83\xda\xa8\x6e\x58\x91\xad\x4c\x02\x16\x73\xbb\x08\x16\xef\xe6\x94\x63\xd9\xc4\xf1\xb9\x57\xdf\xe2\x48\x11\xd0\xc5\x86\x8c\xb9\x7d\x79\xe7\x90\x71\xb9\xd6\xc7\xc6\x7f\x1e\xae\x64\x92\xd7\x4d\x76\xf6\xc5\x34\xd4\x05\x93\x20\xef\xff\xc6\x77\x03\x06\xfd\x6f\x55\x84\xad\x27\xc4\xbd\x9d\xd8\xe6\x45\xe7\x72\x8c\x5c\x49\x4f\xab\x4e\x71\x1e\xf7\x01\x6e\xdc\x3d\xf6\x6e\xec\xf7\x82\xbb\xfa\xc0\xc0\x14\xad\xfa\xf5\xa2\xb1\xe5\x78\xb8\xcf\xe4\xcf\x13\xe2\x45\xbb\x8a\x06\x7e\xe3\x09\xc4\x5b\xc6\x0e\xa3\xd5\x8f\x7c\x69\x53\x34\x5e\x8a\xe7\x5a\x48\x9b\xc1\xe9\x5f\x2f\xcc\x69\x5f\xee\xa8\x1e\x34\xbe\xe2\x7c\x7d\x98\xe3\xcb\x9a\x2f\x16\x3c\xcc\x72\x86\x56\x49\xbe\x7e\xc3\x3c\x30\xf2\xf9\x5a\x93\xc1\x41\x5b\xbb\xd3\xb0\x7a\xf3\xcb\x25\xf8\xd2\xd2\x8e\xc9\xcc\x4d\x2e\x52\x67\x4b\x92\x50\xf5\x58\x2e\xcf\x86\x27\x1a\x03\xf7\x8e\xdf\x60\x2a\xb8\x76\x95\xf2\x9d\x26\x83\xc1\xd4\x7d\x86\x7f\xb3\x6d\xc3\xbf\x26\xb2\x8f\x9c\x02\xd6\xe9\x28\x32\x22\x97\x35\x07\x52\x96\xec\x8b\x71\x9d\xbc\xaf\x38\x6f\xd2\xac\x33\xf2\x19\x0c\x9c\x51\x30\xe0\x02\x30\x37\xad\xba\xb5\xfb\xfe\x1a\xa5\x3f\xfc\x0d\xa5\x2b\xa9\xc3\xf2\x06\x2f\xfd\x37\xc4\xec\xe0\xf5\xff\xe0\xda\x5b\x71\xf7\xc4\x9b\xb8\x0d\x60\x78\x8d\x0d\xa9\xb5\x13\xad\xee\x74\x6b\x6f\x22\x73\x9f\x5c\x9e\xc1\xa7\x0f\xaf\x3f\x8c\xc3\x90\x36\xcc\x1f\x9a\x2f\x05\xfd\xf5\x0a\x35\x96\x56\xc1\x14\x81\xa6\x29\x67\x97\xdf\x89\x07\x6f\xd0\x0e\x30\x1c\x0d\x7f\x9e\x1d\x0f\x0e\xda\xfa\x93\x07\x7f\xf2\xe0\xce\x63\xaf\xfd\xc9\x83\x3b\xc0\xf8\x1e\x3c\xe8\x27\xb0\x9e\x05\x35\x16\xea\x01\xf9\x71\x4c\xe8\xa7\xbf\x4e\xd0\x00\x5b\x79\x0d\xcf\x90\xd6\x36\x59\xbc\xf5\x2f\x5c\x9e\xc8\x49\xf4\x57\x2e\x3f\x0c\x2d\xbd\x3c\x7f\x6e\xcc\x74\x48\xa6\x79\xbf\xae\x27\xdb\x68\x25\xa7\xc2\xff\xfe\x1b\x00\x00\xff\xff\x7b\x55\x09\xf0\x0e\x32\x00\x00")

func bindataTemplates04collectionbuildertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates04collectionbuildertmpl,
		"templates/04_collection-builder.tmpl",
	)
}



func bindataTemplates04collectionbuildertmpl() (*asset, error) {
	bytes, err := bindataTemplates04collectionbuildertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/04_collection-builder.tmpl",
		size: 12814,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1596611577, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates05modeltmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\xbd\xae\xc2\x30\x0c\x46\xf7\x3c\xc5\xa7\xec\x4d\xf7\xbb\xde\x32\xb0\xb4\x0c\x7d\x01\x43\xdc\x12\xd1\xfc\x28\x09\x42\x28\xca\xbb\xa3\x14\x06\x24\x36\xcb\xc7\x47\xf2\x29\xa5\x83\xe6\xc5\x38\x86\xb4\x5e\xf3\x26\xd1\xd5\x2a\xfa\x1e\xff\x5e\x33\x56\x76\x1c\x29\xb3\xc6\xf9\x09\xc7\xf7\xe8\x5d\xff\xd9\xf9\xa8\x30\x4c\x18\xa7\x19\x87\xe1\x38\xab\xe6\xcc\x57\x93\xb0\x98\x8d\xf1\xa0\xf4\x25\x53\xfe\x6b\xb8\x14\x64\x63\x39\x65\xb2\x01\xb5\x0a\x11\xe8\x72\xa3\x95\x51\x8a\x3a\xbd\xc7\x91\x2c\x37\xd2\x4e\xd9\x86\x8d\x32\x43\x1a\x1b\x7c\xcc\x49\x42\xe1\x87\xed\x4f\x77\x7b\x82\xc9\xc6\x3b\x09\x55\xab\x68\x59\xec\x74\x6b\x79\x05\x00\x00\xff\xff\xbd\x60\xb8\xfa\xe2\x00\x00\x00")

func bindataTemplates05modeltmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates05modeltmpl,
		"templates/05_model.tmpl",
	)
}



func bindataTemplates05modeltmpl() (*asset, error) {
	bytes, err := bindataTemplates05modeltmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/05_model.tmpl",
		size: 226,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates06primarytmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xdb\x6e\xdc\x36\x10\x7d\xf7\x57\x4c\x84\x24\x96\x8c\xb5\xd2\xbc\x3a\xf0\x43\x2e\x4d\x6a\x14\x31\x82\xac\xdb\x02\x2d\x8a\x82\x91\x46\x5e\x22\x12\xa9\x90\xdc\x4d\x16\x82\xfe\xbd\x20\xa9\x0b\xa9\xdb\xae\x93\x1a\x49\xf3\x94\x15\x39\x67\x0e\x0f\x67\x86\x43\xba\xaa\x52\xcc\x28\x43\x08\x4a\x41\x0b\x22\xf6\x01\x9c\xd7\xf5\x49\x55\x9d\xc3\x43\xbe\x55\x70\x71\x09\xb1\xf9\xf2\xe4\x09\xbc\xe4\x45\x49\x73\x04\x45\x0b\x84\x64\x83\xc9\x47\xa0\x19\x54\x55\x7c\x4d\x0a\xac\x6b\xa0\x45\x99\x63\x81\x4c\x49\x28\x48\x59\x52\x76\x1b\xbf\xe5\x29\xe6\x40\x99\x42\x91\x91\x04\xe3\x93\x1d\x11\xf0\xcf\x60\xf8\x12\x1e\x77\x20\x55\x7d\xa2\x5d\x5d\xe3\x56\x70\xf6\x92\xe7\x39\x26\x8a\x72\xa6\x07\x8f\xc0\x87\x02\xd5\x86\xa7\xb1\x86\x78\x8f\x6a\x2b\x98\x04\xb5\x41\x60\xda\x9c\x67\xe6\xff\x49\x07\x0a\x19\x17\xe6\xd3\x69\xe7\xfe\x34\x3e\xc9\xb6\x2c\x81\xb0\xaa\xe2\xf7\x98\x20\xdd\xa1\xa8\x6b\x38\xeb\x26\x44\x93\xd4\xc2\x08\xa4\x12\x94\xdd\x42\x75\x02\x00\x20\x8c\x6f\x08\xaa\x2a\xf6\x27\xd6\x75\x70\x62\x57\x78\x25\xdf\x59\xc1\x7f\xc5\xfd\x9f\x28\xf8\x5d\x56\x77\x88\xe2\x10\x3b\x8c\xe0\x03\xe7\xb9\x4f\xae\xaa\xe2\x66\x56\x7c\x25\xf5\xac\xba\x6e\xa8\xbd\x41\xd5\xdb\xff\x4e\xf2\xed\x9d\xa4\x3f\x44\x6e\x8c\x1e\x46\x3d\x4c\x55\x8f\x58\xf6\x38\xb1\xc3\xd9\xc2\x4d\x31\x5e\x9b\x9d\xb8\x5f\xde\x8e\x8f\x30\x82\xd0\x6e\xfe\x0a\x50\x08\x2e\xa2\x66\x05\x55\x45\x33\xe8\xf8\x5a\x8b\x37\xa8\x14\x0a\x93\x50\xde\x22\x9b\xf0\x41\x01\xa1\x44\x1d\x2f\x5c\x40\x47\x04\xbc\x45\x47\xd3\x98\x75\xbd\x02\x46\xf3\xc6\xf3\x39\x60\x2e\x11\x5c\x02\x57\xf2\x06\xbf\xa8\xb7\x44\xc8\x0d\xc9\x1d\x0e\x34\x35\xbc\x75\xa6\x1f\x10\x3b\x6e\x8c\x35\x4e\x18\x59\xe3\xcc\xd8\x3e\xb8\xd4\xbe\x9b\x75\xbb\x09\x10\x34\x9a\xc8\xf8\x1a\x3f\x67\x61\xbb\x07\x2f\x73\x22\xe5\x6b\x8a\x79\x6a\x24\x5c\x41\x40\xd9\x8e\xe4\x34\x85\xa6\x0a\x41\xa6\x07\x61\xa7\x47\x2f\xe0\xd1\x0e\x14\x87\x92\x08\x89\x8d\x50\x31\xfc\x2c\x84\x1e\x08\x56\x87\x58\x1b\x06\x96\xad\x27\xba\x05\x0a\x69\x1a\x1d\x14\xce\xea\x3c\xde\xb5\x65\xb5\xac\x55\x38\x05\x3f\x40\xf2\x65\xf2\x55\x32\xe1\xfa\x4a\xd7\x68\xaa\x8b\xc8\x0a\x82\xc2\x04\xb0\x53\xb3\x60\x43\x24\x0c\x05\xfc\x88\xad\x88\x6a\x5f\xe2\x48\xbf\x20\xea\x19\xb1\x74\x3a\x91\x9e\xa7\xa9\x40\x29\xef\x2d\x89\x1a\xfc\xa5\xf4\x7f\xfc\x15\xf9\xff\x0b\x91\x1b\xf2\x21\xc7\xfb\xad\x00\x9e\x97\xc9\x25\xf8\xf9\x7f\x25\xdf\x71\x33\xa7\x4f\xbc\xec\x50\x08\xc1\xe5\x4c\x5e\x1d\x52\xa5\x0f\xf6\xaa\x42\x96\x76\x2e\x87\x94\x5e\xec\x15\xae\x73\x9a\x8c\x22\xb2\x49\x8e\x99\x25\xd4\xf5\x99\xc1\xad\xeb\x03\x44\xda\x20\x9b\x0a\xfa\x6f\xc5\x1e\x2c\x6f\x22\x10\xf4\xa1\x76\xbf\x41\xd0\x79\x58\x3e\xc2\x74\x95\xfc\xd4\xaf\xd5\x1c\xf7\x01\xa3\x79\xa0\x17\x39\xa3\x42\xd8\xab\xd0\x8e\xde\xec\x4b\x5c\xb0\x88\x1a\x8b\x09\xcb\x37\xa8\xec\x09\xbf\xc8\xa5\x05\x68\xb4\x5c\xbb\x2b\xfd\x2f\x25\x5c\x8f\x3b\x80\x9d\xdd\xa6\x5e\xc2\xc8\x16\xc4\xe3\x53\xc9\x22\x8c\x12\xe6\x60\x86\x75\xc5\xd9\xd9\xb1\xf6\xd3\x54\x0a\x69\x57\x2b\xe0\x1f\xf5\x79\x69\x7c\xc6\xe1\x68\x8b\xa2\x67\x7a\xc2\x5d\x48\xec\xe6\x28\x98\x95\x13\x96\x42\xc8\xb8\xf2\xce\x24\x9d\xb6\xd1\x92\x28\x75\x77\x94\x2d\x10\x7e\x41\x24\x7e\x2d\xe9\xc7\x0b\xac\x1b\xc9\xaa\x4a\x10\x76\x8b\xf0\xf0\xb3\x20\x65\x89\xa9\xb9\x4f\xb4\x40\x7f\xd8\x6f\xda\xbd\x3c\x8a\x75\x8b\x32\x45\x96\x66\xe6\xc2\xb2\xa0\x87\xfe\xa7\xb0\x28\x6d\xa7\x23\x4d\xd9\xf3\x4c\x34\x11\x78\x5a\xd7\xe1\x2e\x72\x80\xcd\x14\x4f\x09\xcf\xa8\x57\x43\x63\x3b\x76\x5e\xcd\xbb\x1b\xd4\xe0\x7b\xbf\x47\x3e\x33\xbf\xb2\xbb\xbf\x9c\x6a\x9f\x23\x84\x39\xb2\x5e\xf5\xe7\xb9\x42\xc1\x88\x32\x90\x32\x82\xa7\x0e\xc6\x39\xd8\xf2\x70\xac\x85\xbe\x14\x9a\x7b\x20\x69\xa7\x98\x6e\x43\x9a\x9b\xd5\x2d\xdd\x21\xb3\x3d\x48\x3c\x9f\x3a\x94\xa5\xf8\x65\xce\x17\xfc\xf4\xbf\xd8\xea\x41\x57\xf7\x4d\x9b\x3d\xb5\xd1\x6d\x8f\x76\x5c\x99\x1a\xdc\x3b\x12\xc2\xd8\x40\x9a\x63\x1b\xd8\x84\x30\x5b\x99\x27\xcf\x71\x07\xe9\xb8\x1e\xbf\x14\x7c\x47\x53\x4c\xbb\x5e\xb5\x69\xef\x4f\x1f\xdd\x9c\x76\x77\x71\xff\x02\xa0\xbf\x9a\x7e\xd7\xce\x0a\x56\x9d\xe7\x9d\x05\xf5\xd6\xd0\x1d\x60\x93\xdb\x72\xb7\x60\x95\x9f\xa9\x4a\x36\xd6\x8d\x89\x96\x3e\x68\xb5\x55\x7f\xc9\x6b\x0a\x5c\x0f\xea\x96\xb8\x41\x38\xb7\x54\x12\x22\x51\x6f\x7c\x67\x54\xd7\x17\xdf\x10\xe0\xb3\xd5\xa2\x25\xff\xa3\x06\xf9\x14\x3f\x37\xd8\xbb\x98\x4e\x31\x23\xdb\x5c\x5d\x7c\x97\xc0\xeb\x6f\x5a\xc1\x0a\x9c\x7c\xf0\xda\x59\x46\xf3\x85\xf6\xe9\x9e\xde\x24\xe6\x7c\x34\xfd\x94\xed\xe2\x97\x5a\x29\x6b\xb3\xf6\x5f\x25\x54\x51\x3a\x4f\x02\x0d\xca\x3b\x7d\x7b\x14\x10\x18\xe4\x60\x06\xa1\xef\x91\x96\x5e\x05\x50\x88\xe1\x29\x15\xea\x93\xbd\x71\xe1\x17\xe9\x49\x47\x91\x73\x66\x1d\xea\x52\x46\xdd\x59\xa8\x8a\x32\x9a\x2e\x11\x87\xd1\x54\x93\x13\x7e\x9c\x8e\xda\x9f\xd9\xf7\x97\xdf\x58\x31\x7e\x81\xc9\x8e\x7d\x80\xe9\xac\xcd\x13\xcc\x5f\x7f\x7f\xd8\xab\x66\xaf\xa3\xe8\xd9\x21\xcd\x7f\xc8\x57\x98\x29\xc9\x74\xbb\x3b\x7e\x7d\x99\x69\x80\x07\xcd\xcb\x42\xcd\x3c\xa6\xa1\xd5\x2b\x5d\xa4\x77\x3c\xd8\x32\xd6\xfc\x31\x35\xda\xb0\xef\xf9\x1e\xb4\x46\xf5\x5a\xf0\xc2\xad\x59\xfa\x77\x93\xee\xce\xbb\xfe\x11\x95\x4a\x1b\x86\x96\xac\x57\xf7\xfc\xfa\x44\x33\x5b\x77\x67\xdf\x3e\x1c\x61\x3e\x6d\x51\xec\xad\x2c\x57\x76\xb9\x57\xac\xdc\x2a\xb7\xe2\x6b\x08\x8b\xa7\x38\x48\x54\x90\x09\x5e\x04\x6e\x20\xea\x0f\x6d\x57\x6a\x66\xc6\xa1\x43\xbc\xe5\xf4\xc0\xeb\x41\x47\x54\x5e\xa1\xca\x26\xf6\xe9\x9a\xab\xb7\x44\x25\x1b\x97\x91\x65\x93\x72\x94\xec\x54\x41\xa1\x87\xcd\xf9\x43\x35\xf5\x0b\x78\x74\x13\xac\xec\x1c\x97\xe4\x99\xaf\xec\x25\x9c\x69\xda\xc3\xe8\xb2\x7f\xb7\x31\xfb\xf7\x6f\x00\x00\x00\xff\xff\x42\x27\xfb\x54\xd8\x19\x00\x00")

func bindataTemplates06primarytmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates06primarytmpl,
		"templates/06_primary.tmpl",
	)
}



func bindataTemplates06primarytmpl() (*asset, error) {
	bytes, err := bindataTemplates06primarytmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/06_primary.tmpl",
		size: 6616,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1596536740, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates07fieldertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x6d\x6f\xdb\x38\x12\xfe\x9e\x5f\x31\x67\xa4\xb1\x64\x38\x72\xfa\xd5\x45\x0e\x68\x7b\xbd\x5e\x70\xe8\x0b\xd6\xd9\x5d\x60\x83\xa0\x50\xac\x71\x4c\x54\xa6\x5c\x92\x51\x9b\x15\xf4\xdf\x17\x24\xf5\x4a\x51\x2f\x4e\xe3\x26\xdd\x8d\xbf\x45\x22\x67\x86\x33\xcf\x3c\x33\x24\x95\x24\x09\x70\x45\x28\xc2\x68\x45\x30\x0c\x90\x8d\xe0\x38\x4d\x0f\x92\xe4\x18\x0e\xa3\x1b\x01\xf3\x53\xf0\xd4\x93\xd9\x0c\x5e\x47\x9b\x2d\x09\x11\x04\xd9\x20\x2c\xd7\xb8\xfc\x0c\x64\x05\x49\xe2\xbd\xf7\x37\x98\xa6\x40\x36\xdb\x10\x37\x48\x05\x87\x8d\xbf\xdd\x12\x7a\xed\xfd\x57\x0b\x05\x42\x05\xb2\x95\xbf\x44\xef\x20\xf6\x19\x7c\x6a\x0c\x38\x85\xa3\x42\x50\x92\x1e\x48\x75\x6f\x51\xa8\xb7\xfc\x65\x10\x30\xe4\x1c\xae\x51\x70\x10\x6b\x04\x3f\x7b\x10\xad\x60\xcb\xa2\x98\x04\x18\xc0\x58\xd9\x3f\xf6\x0e\x56\x37\x74\x09\x4e\x92\x78\xbf\xe0\x12\x49\x8c\x2c\x4d\x61\x52\xc8\x76\x1b\x62\x1d\x35\x11\x26\xb9\x45\x0b\xc1\x6e\x96\x7a\x88\x0b\x4e\x61\x78\x92\x4e\x01\x19\x8b\x98\x0b\xc9\x01\x00\xf0\xaf\x44\x2c\xd7\xa0\x26\x7b\x67\x34\xc0\x6f\x17\x27\x97\xfa\x15\x24\x09\xf3\xe9\x35\xc2\xa1\x16\x2d\x7d\xa8\x55\x2a\x4f\xca\x11\x4b\x9f\x23\x24\xc9\x61\x65\x7a\x9a\xce\x61\x36\x2b\x1f\x6a\x7b\xd5\x68\xf9\x63\x28\x6e\x18\x95\x5e\x92\x71\xa9\x2c\xce\x33\x66\x4c\x81\x92\x30\x33\x03\x69\x20\x55\x6a\x29\x99\x04\x4a\xc2\x6c\x25\xdc\x7b\x8f\x5f\x57\x4e\xbe\xf0\xd7\xa1\xcf\xf9\x19\x8d\xfd\x90\x04\xef\xa2\x00\x43\x65\xf3\x14\x46\x85\x8f\x89\x7e\xa9\x17\x3d\x87\xf1\x33\x3e\x86\x55\xc4\xe0\x9a\xc4\x48\x61\x23\xe7\xcc\x4b\x3c\x8c\x47\x53\x28\x0d\x73\x5c\xf7\xa0\x1e\xd7\x3f\x90\x45\xbf\xf9\xe1\x0d\x0e\x03\x0e\x1f\x1c\xd9\x42\xf0\x1d\x43\xfb\xc3\x63\x9b\x24\xb3\x89\x11\xe7\x24\x21\x2b\xc0\x2f\x99\x1a\x4f\x2e\x09\x46\x94\x84\xa3\x34\x55\xaf\x72\xe9\xfc\x63\xa4\xd6\x91\xa6\x8e\x0a\xb7\x7c\x9d\xbd\x3b\xbf\xdd\x62\xeb\x68\x37\x1b\xdd\x98\x25\x35\x65\xb3\xec\xea\xf3\x99\x0a\x67\x93\x59\xb1\xec\x9a\xf1\x35\x61\x16\x44\xaa\xbf\x02\x5c\xf9\x37\xa1\x98\x9b\xd3\xef\x0b\xa1\x40\xfd\x0d\x6a\x98\x36\xa0\x28\xd5\xa5\x19\x20\xcf\x78\x01\x9b\x81\x1c\xd6\x87\xc4\x8a\xc4\x6e\x0c\x5e\x45\x51\xf8\xc0\xe0\x33\x63\x76\xc6\x5b\xa3\x56\xe3\x91\x95\x1f\x72\xdc\x7b\x9c\x74\x84\x16\xfb\xa2\x8c\x86\xe0\xce\x70\xa9\xb5\x3e\x18\x47\xf4\xf0\x3e\x9c\x9a\x79\xb7\x43\xca\xfd\x90\x6c\xab\xa7\x78\x59\x0d\xfe\xe7\xf3\xb5\x7f\x15\xa2\x92\xbf\x43\x78\x87\x14\x84\xa6\xec\x9f\xa7\x28\x58\x88\xbb\xc6\xb6\xaa\xf9\xea\x45\xc5\xa9\x74\x76\x66\xa7\x8d\x68\xf3\x2c\x2f\x63\xd4\x84\x4d\xd3\x9e\x57\xb7\x02\x17\x21\x59\x62\x6d\x4c\x45\x36\x17\x8c\xd0\x6b\xa7\xa5\xfc\x4c\xca\xb2\xd3\x6d\xbf\x5b\x37\x50\xf6\xa5\x18\xf2\x56\xad\xdf\xab\xce\xa2\x4d\xce\x7b\xc0\x76\x6a\x3c\xb8\x9f\xba\xe7\xcc\xf9\xf9\x32\xa6\xac\x64\x3f\x79\x87\xbc\xd8\x43\x44\x17\x03\x23\x3a\x85\x58\x6b\x2d\xc3\xea\x82\x83\x8c\x3d\x02\x36\x8c\x58\x93\x10\x1d\x9f\x06\xe5\x53\x4d\x49\x4e\xd9\xb9\xbe\x64\xcc\xbf\x5d\x90\x3f\x11\x4e\x5c\xd7\x64\x4f\xbd\x52\x2b\x43\x0e\x29\xb7\x55\xaa\x30\x6a\xdb\x10\x42\x95\x06\x4c\x21\xfa\x2c\x1d\xa4\x2c\xf1\x1c\xa3\x77\x77\x5f\xc8\xd7\xbb\x1b\x16\xf7\x9a\xa5\xdc\x29\x3d\xe7\xd0\x48\x18\xee\x73\x9b\x4e\xae\x58\x3d\x9b\xc1\xeb\x7c\xeb\x4f\x04\x10\x0e\x34\xa2\xc7\xdb\x6c\xa0\x5e\xc7\xa0\x25\xbe\xf2\x39\x7e\xdf\x32\x8f\x86\xac\xb3\xe4\x6f\x68\x14\xb1\x66\x01\x23\x2b\xb8\x46\x8a\x8c\x2c\x0d\xb3\x2f\x2e\xab\x09\x61\x35\xb8\xb6\x63\xaa\xe0\xae\x51\xab\x24\x21\x7c\x9a\x02\x11\xb8\x91\x1a\x74\xb2\x64\x6a\x1b\x52\x5b\xea\x1d\x59\x41\x88\xd4\xc9\x66\xb9\xf0\xef\x32\x73\x0a\xd5\x69\x6a\x48\x83\x01\x0d\x5f\x49\x12\x55\x5e\x13\x51\x04\x1b\x9f\xde\x6a\x77\x70\xb5\x04\xb1\xc6\x82\xe7\x8c\xe0\x8c\xdc\x9a\xde\xe6\xf2\xc9\x0e\xcb\xaf\x05\xb0\xe6\x6e\x89\x5d\x87\x68\x93\x7f\x67\xfe\x76\x8b\x81\x0e\xa9\x36\xc6\x6d\x78\x0d\x0c\x4c\x4a\x1b\x06\x43\xb2\x33\x1e\x6d\x92\x95\x60\x9e\x19\x27\x65\xbf\x09\x71\x93\xd9\xd7\xa5\x46\x92\x85\x55\x09\xec\x86\xb5\x72\x4a\x7f\x3e\x49\x1b\x69\xe0\x0c\xa8\x9f\xb1\xdb\xa2\xa4\xc3\x3b\x83\xac\xb8\x20\x97\x0d\xfe\xaa\x49\xb7\x82\x41\xfe\x96\x11\x15\x84\xde\x60\xe3\xa5\x0d\x3b\x87\x7e\x28\x90\x51\x5f\xa8\x70\x73\x19\x30\xa7\x78\xc4\xc1\x80\x83\x1d\x47\x25\x02\xf1\x0b\x38\x21\x52\x70\x0c\xb1\xae\x0b\x27\x1d\x73\xf3\x69\xe6\x2c\x78\x6e\x9d\x53\x10\x6f\x31\x1c\x84\x32\x3e\xcf\x45\xc3\x95\xde\x20\x7c\x12\x59\x7b\x4d\x13\xe0\xa4\x1d\x9a\xd0\x60\x51\x89\x68\xdb\xf6\xa4\xfa\x13\xb8\xd9\x4a\xb5\x8d\x54\x93\xaa\x9c\x56\x38\x65\x1e\x6e\xe0\xfc\xc7\xa0\xfc\x48\x5a\xbd\x47\xa4\x9f\x6a\x0d\x77\x00\xfb\x00\xf5\x0f\xea\x3a\x0b\xa3\x3a\xb1\xbb\x57\x57\xda\x55\xde\xd5\xb7\xf7\x41\x33\x77\xab\xb4\xf5\x33\x15\x99\xe1\x72\x1b\x71\x3e\x36\x4b\xee\x33\x3e\xca\x5a\x75\xdb\x61\xcb\x60\x07\x67\x7d\x7c\x5c\x72\x82\x50\x8c\x67\xab\x49\x59\x57\x5f\xe3\x0a\x39\xcf\x64\x0f\x9b\x9e\xbc\xe3\xaf\x0d\x4d\xd3\xf9\xbe\xf9\xe5\x89\x5d\x5a\x15\x3c\xb1\xcb\x70\x57\xde\x3f\xbb\xb4\x63\xbc\x2d\x7b\x26\x43\xd3\xa7\x2b\x19\x26\x4f\xd9\xd0\x1e\x13\x3b\x75\xb6\xbc\xc9\xb6\xf3\x8d\x13\xf5\xea\xef\xb1\x94\x80\xb4\x02\xbb\xe6\x7a\xac\x27\xa9\xc6\x36\xda\xf4\x43\x15\xbe\x95\xdd\x4d\x9d\xfc\xf3\x96\x15\x03\xf8\xaa\xc7\xe8\x96\xd5\xab\x88\xc9\x8a\x4a\xfe\x5e\x96\x93\x1e\xa9\xf6\x43\x85\x4c\x40\xdb\x69\x42\xdf\x59\x3a\xd4\xf2\x86\x57\x76\x91\xea\x2c\x06\x9e\x37\x13\x7e\xd0\x11\x45\x03\x74\x49\x62\xc5\xf2\x4e\xd7\x3b\xed\x24\xd4\x3c\x65\x6a\x0b\x69\xfd\x60\x2a\x03\x46\xf3\xc0\xbf\xb6\xc1\xc9\xb9\xc1\xd8\xaf\x18\x9b\x9c\xfa\xe6\xc6\x3e\xe5\xb9\x15\x27\xbb\x6f\x6d\xac\x58\xc8\xf6\x34\x36\xcd\x6d\x3b\x9b\x47\x05\x90\x16\xba\xdb\x09\x22\x6d\xf0\xb0\xf1\x59\x27\x3c\x1e\x9a\xc2\xac\xee\xa8\x76\xad\x59\xd8\xcd\xb6\xb5\xa3\x5d\xb5\x02\xa3\x2a\x7e\x50\xb3\xba\x2b\x64\x06\xe4\xee\xa3\x85\x8b\x7d\xad\xa6\xc7\x7a\x1b\x94\x5d\x1a\x93\xdd\xbd\x61\x2b\x52\x5d\x45\xfa\xa1\x91\xdd\xc8\xb1\xf6\xab\xc7\xfc\xc9\x6c\x02\xe7\x1f\xfe\xf3\x61\x0e\x1c\x85\x52\xc6\x97\x3e\xa5\xc8\xc0\xe7\x79\x4e\x48\x8b\x54\x38\x8c\x4f\x73\x92\xa4\xf3\xe2\xf4\x61\xf3\xbb\x79\xc7\xaa\xfe\xda\xe3\xd7\x0a\x95\xbb\x39\x69\x6e\x79\xd9\xaa\x50\xd7\x76\x3d\x07\x95\xaf\x86\x16\x28\x3e\x32\xb2\xf1\xd9\xed\xff\xf1\x76\xa1\x6e\xbb\x5b\xef\xeb\x94\x41\xe5\x95\x1a\x6c\x50\xac\xa3\xa0\xff\xd2\xee\xa3\xcf\xb8\xfe\x74\x81\x57\x34\x0c\xb8\xbd\xd3\xb7\xef\x8f\xea\x76\xb6\xca\x21\x7a\x31\x0b\x14\x26\x65\x16\x57\xb8\xd9\x0a\x94\x03\x18\x8c\xd4\xaa\x46\xb6\xe9\x46\x86\x28\x8c\x67\x77\x5b\x05\x61\x9d\xe3\x37\xf1\x2b\xdd\xf8\x8c\xaf\xfd\x10\x59\xfd\xc5\xbb\xe2\xf1\xb1\x21\xab\x8f\xdf\x63\x9f\xc1\x55\xcd\x0f\x25\x9f\x1d\x98\x9c\x77\x24\x47\x76\x57\xb5\x0a\x3d\x76\x53\x5f\x07\x4b\xc8\xd6\x8b\x31\x2d\xa5\xc5\x7e\xa9\xa6\xaa\xbf\x57\x5d\xa1\xc5\x2b\x9c\x28\x1d\xe7\x5c\x5c\x5e\xdd\x0a\x74\x54\x6c\x5c\xf7\x85\x52\xfc\xaf\x8e\xcf\x4d\x46\xa3\x8e\x6b\xf5\x1a\xcf\xd4\xe9\xc5\xbc\x5d\x1a\x6b\x90\xcb\x14\x8e\xc7\x20\x22\xd8\x4a\x94\x64\x88\xf1\xe0\x0d\x63\x73\x78\x16\x8f\xa6\x43\xbe\x04\x40\xc6\x6c\x8c\x7c\x25\xa6\xfb\xf4\xe3\xbb\x8a\x17\x5d\x33\x76\x7f\x13\x17\x9a\x27\x0a\xf6\x1c\x1a\x52\xe6\x7b\xaa\x7c\xfd\x83\xa3\x2b\xe1\x4e\xad\x5f\x0c\x0d\x24\x05\xcd\x2d\x6f\x9b\xd4\xf4\xc4\x08\xff\x68\x46\xe8\x6f\xf7\x8b\xda\xa5\xd5\xca\xb2\x25\x1d\xdb\x52\xb5\x06\x7c\xd7\xc6\x2b\x4d\x85\xde\x75\xe6\x82\x1d\x8e\x21\x2e\x45\xc4\xa0\xb6\x1c\xa8\x2c\xc5\xed\x2d\x96\x3b\x26\x5e\x2d\xcd\xb2\xb0\xf4\x77\xac\x79\xea\x95\xdf\x5c\xa8\xf9\x36\xc7\xc5\x2d\x32\x4d\xb7\x58\xb1\x63\x81\xce\xfb\x48\xe8\xf6\x61\x9a\xfd\x73\x8b\x05\x36\x41\x84\x9c\x8e\x05\xac\xfd\x38\x87\x8b\xec\xad\x05\x32\x6f\xd4\xdb\xa3\x3e\x9e\x8f\xc6\x0a\x03\xff\x0a\x00\x00\xff\xff\x8d\xb9\x71\xa9\xcf\x33\x00\x00")

func bindataTemplates07fieldertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates07fieldertmpl,
		"templates/07_fielder.tmpl",
	)
}



func bindataTemplates07fieldertmpl() (*asset, error) {
	bytes, err := bindataTemplates07fieldertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/07_fielder.tmpl",
		size: 13263,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1595334108, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates08singlerelationertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x54\x51\x6b\xdb\x30\x10\x7e\xf7\xaf\x38\x42\xd6\xc4\xc1\x71\xf6\x9c\x91\x97\x05\x36\x02\x5b\x19\x4d\xd9\xcb\x18\x43\xd8\xe7\x54\x54\x96\x8c\x24\x27\x1b\xc2\xff\x7d\x48\xb2\x95\xd8\x49\xbb\xac\xac\x30\x3f\x94\x46\x3a\x7d\xdf\xdd\x77\xdf\x9d\x31\x39\x16\x94\x23\x8c\x14\xe5\x3b\x86\x73\x89\x8c\x68\x2a\x38\xca\x11\xcc\x9b\x26\x32\x66\x0e\x63\x51\x6b\x58\xae\x20\x75\x27\x8b\x05\xac\x45\x59\x51\x86\xa0\x69\x89\x90\x3d\x60\xf6\x08\xb4\x00\x63\xd2\x5b\x52\x62\xd3\x00\x2d\x2b\x86\x25\x72\xad\xa0\x24\x55\x45\xf9\x2e\xdd\x3a\xf8\xbb\x80\x0e\x94\x6b\x94\x05\xc9\x30\x8d\xf6\x44\xc2\x8f\xa7\x23\x57\x70\x13\xa0\x4d\x13\xd9\x04\x3e\xa2\xee\x02\x3e\x8b\x1c\xd9\xdf\x32\x16\x35\xcf\x60\x6a\x4c\x7a\x87\x19\xd2\x3d\xca\xa6\x81\x59\x20\x89\xcf\xf0\xa7\x9d\x2c\x30\x0b\xf0\x5a\xd6\x99\xfe\x40\x91\xe5\x31\x4c\xbb\x53\x17\x9d\x00\x4a\x29\x64\x0c\x26\x02\x00\x50\x07\xaa\xb3\x07\xe8\x20\xd2\x0d\xcf\xf1\xe7\xb7\xb7\xdf\xdb\x6b\x63\x24\xe1\x3b\x84\x71\xe0\xb0\x52\x77\xf4\xca\x6a\x6e\x0c\x2d\x80\x0b\x7d\x8c\x49\x37\x6a\xcb\x68\x86\xae\x23\x16\x25\x23\x0a\xc1\x98\x71\x9f\xa5\x69\x96\xb0\x58\xf4\xce\x7d\x89\xee\x8d\x67\xa7\x45\x0f\xf6\x8b\x70\x3a\x05\x60\xfb\xb9\xe6\x5a\x17\x9c\xe8\x95\x9e\x83\xc2\x6a\x05\x9c\xb2\xb6\xae\xee\x93\xa8\x6b\xc9\xed\x45\x62\xff\x84\xbb\xc6\x5a\x0b\x79\x7e\xc2\xd3\x86\x5e\x2c\xf7\x24\xaf\x1b\x63\xdc\xbb\x6b\x72\x3a\x72\xba\x47\x5e\xcd\xf6\x1f\x77\x9c\x63\x41\x6a\xa6\x97\xc3\x24\x5c\xbe\xae\x8f\x2a\xbd\xc5\x43\x11\x5a\xbc\x66\x44\xa9\x0d\xdf\x13\x46\xf3\xae\x4b\xce\x06\x09\x8c\x2a\x29\xf6\x34\xc7\x1c\xa8\xbf\x0f\x4d\x5f\xc2\xe4\x8d\x9a\x40\x21\x24\x94\xd6\x22\xf6\xf7\xfd\x64\x94\x84\x80\x04\x7a\x6e\x8c\x5d\x3a\x4d\xe4\xed\xbe\x7d\x65\xbb\x0f\xf1\x9f\xb7\x7b\xe2\x4b\x80\x9e\xe7\x63\xaf\xd5\x3f\xb3\x7c\x14\xcc\xf9\x3a\xbe\xa7\x45\x5b\xc5\x45\xcf\xfe\xc9\x81\x83\xe0\x6b\x46\xa3\x97\xcc\x7b\xa2\xf0\xfe\x57\xe5\x17\x5a\x1f\x0b\x99\xc2\x97\x52\x9c\x8e\x57\xcf\xf2\x4f\x0c\xe4\x71\x16\xc1\xd1\xba\x39\x3f\xd6\x6c\x71\x6d\x67\xa6\x5a\x7c\x12\x07\x94\x6b\x52\x22\x83\x3e\x6f\xec\x27\x6a\xf0\xc8\xce\x9d\x78\xb4\x6f\x9d\xc8\xe9\x74\x76\xb9\xfa\xf8\x9d\x0d\x1b\x6a\x7f\xa5\x9c\xcf\xb7\x68\x76\x5c\x12\xa7\xa9\x5d\xa1\xc5\x70\x13\x5c\xbb\x04\xbe\x12\x56\xe3\xa5\x25\xe0\x8d\xb6\xb7\xd7\x7e\xee\xdd\x1e\x08\xde\x3f\x2f\x6f\xd4\x8e\x58\xfc\x92\xc5\xf5\x1f\xec\xac\xb0\xd9\x7f\x07\x00\x00\xff\xff\x8a\xa1\xbe\x95\x5f\x08\x00\x00")

func bindataTemplates08singlerelationertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates08singlerelationertmpl,
		"templates/08_single-relationer.tmpl",
	)
}



func bindataTemplates08singlerelationertmpl() (*asset, error) {
	bytes, err := bindataTemplates08singlerelationertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/08_single-relationer.tmpl",
		size: 2143,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1594979701, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates09multirelationertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xdf\x6b\xeb\x36\x14\x7e\xcf\x5f\x71\x16\xba\xc6\x2e\x8e\xdb\xbd\x06\x32\xe8\xca\x36\x0a\xed\x65\xdc\x5e\xf6\x12\xc2\xc5\xb3\x8f\x5b\x51\x59\x36\x92\x92\xee\x22\xf4\xbf\x0f\x59\xb2\xe3\x1f\x71\x93\x66\x09\x6b\xc7\xed\x53\x63\x59\xdf\x39\xe7\xd3\xf9\x3e\x4b\x52\x2a\xc1\x94\x30\x84\x71\xb6\xa2\x92\x4c\x39\xd2\x48\x92\x9c\x21\x1f\xc3\x54\xeb\x91\x52\x53\x38\xcb\x57\x12\x66\x73\x08\xcb\x27\x97\x97\x70\x93\x67\x05\xa1\x08\x92\x64\x08\xf1\x13\xc6\xcf\x90\xe6\x1c\xe4\x13\x42\x16\x15\x05\x61\x8f\xe1\xbd\x41\xfb\x5c\x83\x01\x61\x12\x79\x1a\xc5\x08\x24\x2b\x28\x66\xc8\x64\x39\x14\x8e\xd6\x11\x87\xaf\x83\xf3\xe6\x70\xae\x54\xf8\x29\xca\x50\x6b\xa5\x47\x26\xfa\x75\x92\x54\x2f\xdc\xe7\x09\xd2\x0d\xa2\xd8\x1d\x3e\x1c\xa5\x2b\x16\x83\xa7\x54\xf8\x19\x63\x24\x6b\xe4\x5a\xc3\x45\x1d\xc3\xef\xc1\x7b\x15\x25\x70\x51\xa1\x3f\x48\xbe\x8a\xe5\x6f\x04\x69\x12\x40\x56\xe6\x50\x07\x36\xbf\x7c\x40\xce\x73\x0e\x6a\x04\x00\x20\x5e\x88\x8c\x9f\xa0\x82\x09\x6f\x59\x82\x7f\x2f\xae\x96\x6e\x58\x29\x1e\xb1\x47\x84\xb3\x3a\x8e\xa1\xba\x4a\x41\x18\xce\x95\x22\xe9\x66\x3c\xbc\x15\x0f\x94\xc4\x58\xae\x86\x41\x88\x23\x81\xa0\xd4\x59\x3b\x82\xd6\x33\xb8\xbc\x6c\x3d\xb7\x25\x96\x73\x6c\xe4\x0d\xa8\x19\x32\x81\x3d\x99\xdf\xe5\x2f\xc8\x6f\xa2\x0c\x69\x23\xe6\x2f\x91\xc0\x2f\xdf\x0a\xf4\x6d\x3e\xad\x79\x5a\x07\x90\x3f\x9b\xd9\x25\x17\xa1\x77\xd1\x0c\x5a\xcd\xd4\xda\xaf\x23\x93\x14\x7e\xc8\x9f\x1d\x01\xd5\x1f\x47\xb9\xe2\xcc\x52\x27\xc2\x4f\xf8\x92\x7a\x15\xab\x37\x34\x12\xe2\x96\xad\x23\x4a\xea\xc5\xf9\x33\xa2\x2b\x0c\x60\x5c\xf0\x7c\x4d\x12\x4c\x80\xd8\x71\x58\x9b\x01\x90\xdf\x0a\x9c\xc1\xe4\xc7\x2f\x13\xa8\x9b\x33\x35\x2b\x36\x83\x49\x9f\x93\xc9\xd8\x2d\xe4\x26\xc7\x26\x4f\x1d\xfa\xff\xc8\xcb\x7e\xaa\x17\xc0\x95\xa4\x94\x51\x4a\xa3\xaf\xc2\x7e\x20\x98\xcf\x81\x11\xda\x29\x5d\x62\x56\x18\xfe\x9a\xef\x5b\xce\x94\x6e\xbd\xb8\x5f\x08\x38\x37\x80\x5b\x2b\x01\x64\x49\x2b\xef\xc1\xe2\xb4\xbe\x50\x0a\x59\x52\x2e\xf7\x3e\x41\xa3\xa2\x40\x96\x78\x43\x80\x6f\xc3\x0b\x6c\x62\x2c\x97\x2d\xac\x5f\x29\x66\xdb\xf0\xda\xed\xe8\x3b\x61\xb9\x5a\xeb\x7f\xca\xc7\x09\xa6\xd1\x8a\xca\xd9\xe8\xc0\xbe\x73\xb2\xef\xf7\x5d\x95\x83\xeb\xba\xda\x11\x4b\x7f\x98\xd4\x0e\xd3\x69\x35\x9b\x94\xcb\x81\x11\x3a\xb2\x26\xf7\x3b\xca\x96\x0b\x89\x23\xbb\x5c\x0f\xff\x75\x9b\xf3\xc1\xcb\x6c\x1a\x8b\x65\xcb\xea\x02\xc3\x9b\xe5\xce\x7f\xff\x7e\xd7\x81\x6d\x74\x53\x4b\x13\x66\xe9\xbe\x56\xce\x3e\x9b\x83\x4d\x78\x2f\x19\xb4\x75\xed\x38\xab\xb5\x61\x7f\xbf\x6a\x35\x53\x40\x2a\xb0\x97\x0e\x39\x49\x1e\xe7\xde\x3e\x60\x0b\xb2\xf4\x07\x93\x35\x02\x3c\x44\x6e\x8c\xd8\xde\x39\x9e\xe6\x84\xd5\x5c\x59\x9b\xd5\xe0\x38\xa8\x5f\x30\x7e\xd2\xa8\x72\x8b\xf6\x2a\x4e\x86\x35\x78\x2d\x4f\x2c\xc2\x6b\xb9\x6b\xb3\x41\x4c\xa7\x9b\x10\x1b\x41\xfe\x7f\xe4\x78\xf4\xcf\xea\x21\xad\x56\x26\x1f\xc0\xd8\x32\x6d\x76\xbe\x79\x0a\x45\x2e\x04\xf9\x8b\xa2\x55\x60\x08\xf7\xae\xc7\x5c\x6a\xce\xd8\x03\x28\x57\x69\x4b\xcd\xe3\xed\xf2\xe9\x7e\x8b\x49\xea\x16\xf8\x67\xa0\xc8\x8e\xf4\x25\xf5\x61\x0a\x3f\x7d\x28\x62\x5c\x76\xbb\x37\x00\xe7\x35\x0d\x43\x44\x79\x6f\x61\x6a\x18\xc6\x77\x28\x8b\xb2\xf8\xa5\x35\x89\x8f\x61\x7a\x9d\xb2\xdf\x6a\x7c\x77\xc8\x4e\x67\x7a\x77\xc8\x76\x6e\x3b\x08\x93\xc1\x77\x43\x6b\xb7\xd1\xd5\xa6\x01\x77\x59\x8a\x9b\x71\x44\x3b\x39\xb8\xf9\xaf\xde\xc1\xf7\xde\xf6\xf7\xc3\x89\x37\xd7\x3d\xfc\xbd\xee\x10\x04\x84\x61\xf8\x11\xef\x11\xaa\xd3\x6b\x16\x3d\xa3\xb7\x58\x0e\x9c\xfe\x83\xb2\x09\x6d\xa5\x8d\xed\x64\xe7\xf0\xb6\xf7\x1d\x44\x7b\x77\xdc\xdb\xac\x3b\x46\x55\xf7\xf4\xfc\xef\xee\x2d\x60\xe8\xee\x02\xde\xdf\xfd\x45\xdb\x19\xaa\x75\x5a\x90\x25\xcc\xfb\x44\x1c\x7a\xeb\x71\xd0\x7d\xc4\xd6\x43\xce\x9e\x48\x1d\xa0\xa6\xef\xfc\x97\xe7\x7d\xf1\xfa\x79\xbf\xae\xe3\x41\x72\xc2\x1e\x3d\x7f\xf0\xec\xef\x9c\xf8\x9f\x00\x00\x00\xff\xff\x09\x30\x80\x77\x97\x15\x00\x00")

func bindataTemplates09multirelationertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates09multirelationertmpl,
		"templates/09_multi-relationer.tmpl",
	)
}



func bindataTemplates09multirelationertmpl() (*asset, error) {
	bytes, err := bindataTemplates09multirelationertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/09_multi-relationer.tmpl",
		size: 5527,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1595329297, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates10modeldefinitiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x31\x0e\xc2\x30\x0c\x45\x77\x4e\xf1\x95\xdd\x3d\x06\x1b\x0b\x9c\x20\x52\x7e\x90\x25\x27\xad\x42\x18\x50\xd4\xbb\xa3\x06\x94\x01\xd1\x6e\xb6\xff\xfb\xcf\xad\x09\x02\xa3\x66\xc2\xa5\x39\xd0\xa4\x6f\x5a\x75\xce\x0e\xb2\xae\xa7\xd6\x50\x99\x16\xf3\x95\x70\x4b\xd1\xe4\xcb\xcb\x61\x42\x8f\x34\x62\x3a\x2b\x2d\xb0\xe0\x97\x8d\x9f\xfb\x60\x05\xcc\x61\xb4\x6e\x9a\xef\xc6\x2b\xcd\x6f\xaf\xfe\xd4\x1f\x1d\x90\x32\x88\x1d\xd1\xe5\x69\x55\x0f\x3c\x69\xcb\x8f\x35\xdf\xe9\x1d\x00\x00\xff\xff\xdd\x47\x50\x16\x0c\x01\x00\x00")

func bindataTemplates10modeldefinitiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates10modeldefinitiontmpl,
		"templates/10_model-definition.tmpl",
	)
}



func bindataTemplates10modeldefinitiontmpl() (*asset, error) {
	bytes, err := bindataTemplates10modeldefinitiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/10_model-definition.tmpl",
		size: 268,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates11singlefilemodelstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x3f\x4b\x04\x31\x10\xc5\xfb\x7c\x8a\xc7\x22\x56\x6e\xb6\x3f\xb8\xca\xb3\xb0\xf0\xce\xe2\x3a\x11\x19\xdd\xb9\x35\xb8\xf9\x43\x12\x15\x19\xf2\xdd\x25\xd9\x05\x4f\xc1\x6e\x98\x37\xbf\x37\x6f\x12\x91\x1e\x23\x9f\x8c\x63\x74\xc9\xb8\x69\xe6\xfe\x64\x66\xee\xad\x1f\x79\x4e\x1d\xfa\x52\xd4\x30\xe0\xda\x8f\x8c\x89\x1d\x47\xca\x3c\xe2\xf9\x0b\x8e\xdf\xa3\x77\xc3\xda\xf3\x51\x63\x77\xc0\xfe\x70\xc4\xcd\xee\xf6\xa8\x2b\x73\x7c\x35\x09\xd5\x0c\x9f\x94\xce\x60\xca\x9b\x2a\x8b\x20\x1b\xcb\x29\x93\x0d\x28\x45\xa9\x40\x2f\x6f\x34\x31\x44\xf4\xfd\x52\xee\xc9\x72\x55\x44\x32\xdb\x30\x53\x66\x74\xc6\x06\x1f\x73\xea\xa0\xab\x32\x0c\xd8\xb7\x20\x4f\x77\x2d\x30\x52\xf6\x91\x13\x68\x9e\xcf\x36\x2e\xc7\xc0\x38\xe4\x9a\x69\x5d\xa4\xd5\x07\xc5\x3f\xf8\x16\x0f\x8f\x96\x42\x30\x6e\xd2\xad\x25\x0a\x00\x44\x22\xb9\x89\x71\xd1\x9c\xb0\xd9\x42\xaf\x40\x7d\x9f\x3a\x71\x29\xb2\x88\x7a\x09\x2d\xe5\x4a\x89\xb0\x1b\xdb\x44\x51\xff\x3b\x94\xf2\xeb\xbe\xa6\xf7\xed\x4b\x4c\x36\xde\x75\x2b\xd2\xc6\x7a\xb0\x1b\x7f\xaa\xea\xfd\x1d\x00\x00\xff\xff\xb0\x03\x5a\xd1\xc1\x01\x00\x00")

func bindataTemplates11singlefilemodelstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates11singlefilemodelstmpl,
		"templates/11_single-file-models.tmpl",
	)
}



func bindataTemplates11singlefilemodelstmpl() (*asset, error) {
	bytes, err := bindataTemplates11singlefilemodelstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/11_single-file-models.tmpl",
		size: 449,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1595458082, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates12singlefilecollectionstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x41\x4b\x03\x31\x10\x85\xef\xfb\x2b\x1e\x8b\x47\x37\x7b\x2f\xf4\xd4\x7a\xf0\xd2\x7a\x28\x5e\x44\x64\xba\x3b\x5d\x83\xd9\x64\x49\xa2\x22\x43\xfe\xbb\x24\x16\x36\x82\xe0\x6d\xc8\x9b\x6f\xde\xbc\x89\x48\x87\x91\x2f\xda\x32\xda\xa0\xed\x64\xb8\xbb\x68\xc3\xdd\xe0\x8c\xe1\x21\x6a\x67\x43\x8b\x2e\xa5\xa6\xef\xb1\x73\x23\x63\x62\xcb\x9e\x22\x8f\x38\x7f\xc1\xf2\xbb\x77\xb6\xbf\xbe\x39\xaf\xb0\x3f\xe2\x70\x3c\xe1\x6e\x7f\x7f\x52\x99\x39\xbd\xea\x80\x3c\x11\x9f\x14\x2a\x98\xe2\x26\xcb\x22\x88\x7a\xe6\x10\x69\x5e\x90\x52\xd3\x2c\x34\xbc\xd1\xc4\x10\x51\x0f\x3f\xe5\x81\x66\xce\x8a\x48\xe4\x79\x31\x14\x19\xad\x9e\x17\xe7\x63\x68\xa1\xb2\xd2\xf7\x38\x94\x45\x5e\x76\xeb\xd6\x08\xd1\x79\x0e\x20\x63\x2a\xdb\x2a\x96\x6a\x3e\xc8\xff\x05\x6e\xf1\xf4\x3c\x52\xa4\x33\x05\x56\xab\x20\x8d\x88\x27\x3b\x31\x6e\xd6\x29\xd8\x6c\xa1\x6a\x38\x9f\x0a\x00\x44\xaa\xae\xaa\x43\x3d\x92\xd7\x74\x36\xd7\x58\xb7\x8d\x08\xdb\xb1\x60\x25\xe3\xff\x0e\x29\xfd\x3a\xc5\xda\xd9\x95\x7f\xd4\xb9\x6c\xeb\x09\x05\xe8\xc0\x76\x5c\xab\x62\xf8\x1d\x00\x00\xff\xff\x72\x4e\x21\x5e\xfc\x01\x00\x00")

func bindataTemplates12singlefilecollectionstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates12singlefilecollectionstmpl,
		"templates/12_single-file-collections.tmpl",
	)
}



func bindataTemplates12singlefilecollectionstmpl() (*asset, error) {
	bytes, err := bindataTemplates12singlefilecollectionstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/12_single-file-collections.tmpl",
		size: 508,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1596536269, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates13collectiondefinitiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xca\xb1\x0a\x85\x30\x0c\x46\xe1\xbd\x4f\x11\xba\xf7\xbe\xd3\xb5\xfd\x85\x40\x6c\xa5\x26\x53\xc8\xbb\x8b\xe2\xe2\xe0\x76\x38\x7c\xee\x0d\x2b\x77\x50\xae\x43\x04\x55\x79\xf4\x72\x2f\xbe\x32\x53\x89\x48\xee\x8a\x6d\x97\xbf\xbe\xd9\xa1\xd3\xaa\xda\x44\xa6\x1f\x45\xa4\x2f\xb7\x18\x4b\xc3\x7c\x94\x7b\x21\xf4\x16\x71\x06\x00\x00\xff\xff\xd1\xbc\x4d\x93\x7b\x00\x00\x00")

func bindataTemplates13collectiondefinitiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates13collectiondefinitiontmpl,
		"templates/13_collection-definition.tmpl",
	)
}



func bindataTemplates13collectiondefinitiontmpl() (*asset, error) {
	bytes, err := bindataTemplates13collectiondefinitiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/13_collection-definition.tmpl",
		size: 123,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates14collectioninitializertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\x55\x48\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xce\xcf\xc9\x49\x4d\x2e\xc9\xcc\xcf\xd3\xcd\xcc\xcb\x2c\xc9\x4c\xcc\xc9\xac\x4a\x2d\x52\x52\xa8\xad\x55\x50\x50\x50\x88\x47\x48\x7b\x22\x64\x8b\x15\x6c\x15\x12\x0b\x0a\x52\xf3\x52\x34\x70\x28\xd0\x51\x40\x18\x56\x5d\xad\xe7\x0c\x57\xa4\x17\x96\x58\x94\x99\x98\x94\x93\xea\x97\x98\x9b\x5a\x5b\xab\xc9\x05\x72\x4b\x6a\x5e\x4a\x6d\x2d\x17\x20\x00\x00\xff\xff\x70\x57\x17\x2e\x96\x00\x00\x00")

func bindataTemplates14collectioninitializertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates14collectioninitializertmpl,
		"templates/14_collection-initializer.tmpl",
	)
}



func bindataTemplates14collectioninitializertmpl() (*asset, error) {
	bytes, err := bindataTemplates14collectioninitializertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/14_collection-initializer.tmpl",
		size: 150,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147826, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates15collectioninitializerfunctiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x50\xb1\x6e\xeb\x30\x0c\xdc\xf9\x15\xf7\x32\x25\x0f\x75\xb2\xb7\xf0\x14\x74\xe8\xd2\x1f\x28\x0a\xc3\xb0\xe9\x82\x80\x40\x05\xb4\x1c\xb4\x15\xf4\xef\x85\xdc\xd4\xd6\xd0\x64\x29\x07\x41\xe2\x1d\x4f\x77\x8c\xb1\xe7\x41\x94\xb1\xe9\xbc\x73\xdc\x05\xf1\x5a\x89\x4a\x90\xd6\xc9\x27\x5b\x35\x4c\x3a\x37\x37\xa8\x52\xa2\xf0\x71\x62\x34\x2b\xf5\x69\x65\x22\x33\xb7\x31\xca\x80\xfd\xe3\x7b\x60\xd3\xd6\x1d\xbd\x06\xcb\x64\x4b\xa9\xc3\xff\x6e\x79\xee\x57\x24\x46\xd6\x3e\xa5\x1d\xd8\xcc\x1b\xd1\xb9\xb5\x2b\x3f\x8c\x78\x79\xfd\x1d\x21\x3a\x1c\xf0\xcc\x93\x79\x6d\xd6\xf6\x71\xa1\x8e\xe8\x8a\xfb\xe0\x0d\x27\xf3\x67\xe9\xb9\x47\xe1\x89\x72\x82\x9b\x32\x7f\x89\xb7\x65\xb3\xef\x8c\x3b\x44\x02\x30\xfb\x68\xee\x50\x6c\x1b\xf7\x35\xac\xd5\xb7\x6b\x3b\x1e\x2f\x93\xb9\x64\xc8\x6a\xa8\xcb\xf9\x5b\xfe\x7e\x8c\x3c\xcc\x63\xff\x6a\xa8\xb8\x42\x2e\x97\x71\x98\x4c\x33\xbe\xb4\x13\xad\xe7\x05\x56\x71\x94\x28\xc6\x0a\xb3\xe0\x57\x00\x00\x00\xff\xff\xb5\xb5\x43\x14\x42\x02\x00\x00")

func bindataTemplates15collectioninitializerfunctiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates15collectioninitializerfunctiontmpl,
		"templates/15_collection-initializer-function.tmpl",
	)
}



func bindataTemplates15collectioninitializerfunctiontmpl() (*asset, error) {
	bytes, err := bindataTemplates15collectioninitializerfunctiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/15_collection-initializer-function.tmpl",
		size: 578,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates16jsonapihandlertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\xeb\x6e\xe3\xb8\x15\xfe\x2d\x3f\xc5\x89\xd1\xd9\x48\xa9\xc3\x64\xff\xba\x70\x81\x9d\x64\x67\x37\x1d\x4c\x12\x38\x46\x0b\x34\x08\x0c\x5a\x3a\xb2\x59\x53\xa4\x86\xa4\x13\xbb\x5e\xbf\x7b\x41\x8a\xba\xdb\x69\x76\x81\xa2\x01\xc6\xb0\xc4\x73\xf9\xf8\x9d\xab\x67\xbf\x4f\x30\x65\x02\x61\xf8\x2f\x2d\x05\xcd\xd9\xe5\x8a\x8a\x84\xa3\x1a\xc2\xe5\xe1\x30\xb8\xba\x82\x1b\x99\x20\x2c\x51\xa0\xa2\x06\x13\x58\xec\x40\xe0\x46\x49\x71\xe9\xdf\x49\x45\xe0\xf6\x01\xee\x1f\x66\xf0\xf3\xed\xdd\x8c\x58\x9d\xd9\x8a\x69\x48\x19\x47\x78\xa3\xba\xa1\x4c\xcd\xd8\x1e\xef\xf7\x60\x58\x86\xda\xd0\x2c\x87\xc3\x61\x30\xc8\x69\xbc\xa6\x4b\x84\xfd\x9e\x3c\x16\x5f\xef\x69\x86\xf6\x64\xbf\x37\x98\xe5\x9c\x1a\x84\x21\xcb\x72\xa9\x8c\x1e\x02\x29\x4e\xfe\xe4\xa1\x5a\x59\x18\x4f\x20\xcc\x15\x13\x26\x85\xe1\xfc\x93\x9e\xff\xed\xe9\xe1\xfe\xa7\xc7\xbb\xf9\xaf\xe5\x75\xc8\x37\x99\x20\x27\x56\x38\x72\x77\xab\x0d\x4c\xe3\x57\xab\xef\x25\xa6\x18\x23\x7b\x45\xe5\x84\x2c\xdc\xfb\xe9\xfd\x7c\xbf\x6f\xe8\x1f\x0e\x5d\xf3\xc0\x34\x50\xb0\x14\x8e\x69\xce\xc0\xdb\x25\x83\x57\xaa\x3e\xa4\x7e\xd1\xbe\x8d\x75\x6c\x76\xb9\x25\xa4\xfd\x1a\xb4\x51\x9b\xd8\xc0\x7e\x00\x00\x10\xc3\x45\x2c\x85\x51\x92\x5b\x67\x37\xd5\xd7\x41\x81\xfb\x91\xee\xb8\xa4\x89\x73\xac\x01\xb7\x46\xd1\xd8\x68\xe8\x60\x01\xcd\x59\x8c\x90\x2a\x99\x81\x59\x21\xe4\x85\x16\x64\x4e\x8d\x0c\xd2\x8d\x88\x21\x6c\x91\x75\x38\xf4\x01\x47\x6d\x77\x61\x69\xe6\x22\x96\x09\xc6\xc4\x1f\x46\x10\x3e\xbf\x5c\x74\x10\x8c\x00\x95\x92\x2a\xf2\xb7\x2a\x1c\xdb\x80\x64\x74\x8d\x47\xe5\x39\x8a\xd2\x41\x71\xa2\xa3\xc8\xe9\x5a\xbe\xe5\x1a\x16\x52\x72\xf7\x9c\x4a\x05\x6c\x54\x98\xb4\x16\x15\x15\xcb\xea\x8a\xe4\x96\x1a\xea\x9d\xd6\x8e\x9f\xd9\xcb\xc8\xda\x98\x14\xcf\x24\xec\xba\x8f\x2a\x05\x96\xc2\x99\x5c\x37\x2c\xd8\x3f\x85\x66\xa3\x04\x08\xc6\xfd\xbd\x34\xb9\xc7\xb7\x5b\x34\x69\x98\xd1\x3c\x67\x62\x49\x6e\x38\xd5\xfa\x4e\x18\x54\x82\xf2\x11\x0c\x73\x25\x5f\x59\x82\x09\x30\x91\x6f\x8c\x47\xcb\x34\x08\x69\x80\xc2\x79\xc7\xff\x39\x5c\x02\xd3\x63\xf8\x34\x1b\xfa\x9b\xd5\x88\x0e\x83\xfa\xd3\x03\x29\x6e\x35\xb2\x80\xda\x79\xf1\x85\x21\x4f\xde\xc9\x0b\x85\x9c\x1a\x26\x85\x06\x2a\x12\x48\x0b\xe9\x5e\x9a\x14\xef\xd1\xfc\x81\x4c\x29\x00\xb4\x33\x25\x69\x64\x4a\x05\x60\x54\x7a\x7f\x7e\x29\x29\x74\xba\x4f\x68\xca\xa4\xa9\xc1\x56\x69\xd3\x12\xd5\x68\xda\x69\x53\x1a\xd0\x05\x79\xde\xc1\x1f\x54\x2e\xb2\xac\xa4\xa2\x9f\x68\x95\x7c\x23\x57\x2a\xc4\x2e\xe1\x0a\xdd\x67\xf6\x02\x13\xe8\x30\x48\xf2\x16\x5d\xa5\x97\xa8\x1f\xea\x1e\x61\x36\xe0\x1f\x8e\xca\x71\x37\xd0\x67\xfc\x48\x60\x4e\x85\xc5\x32\x33\xf7\x52\x35\x2d\x95\xed\x9a\x0d\xfd\xc6\x4c\xbc\x2a\x4e\xc8\x57\x26\x92\x30\x6a\x9c\xc6\x54\x63\xe5\xc3\x9e\x4e\x4b\x04\x2b\x96\x3f\x31\xb1\xe4\x38\x3a\x79\xfe\x6d\xc3\x0d\xcb\x39\x8e\x3b\x65\x5a\x27\x0c\xcd\x73\x14\x49\xef\x5a\x75\x59\x25\x98\xd2\x0d\x37\x6d\x0b\x55\xca\x78\xf5\xe2\xb9\xa7\x7b\xa4\x24\x8f\xc6\xe9\xea\x0a\xee\x04\x33\x8c\x72\xf6\x6f\x04\x96\xe5\x1c\x33\x14\x46\x43\x2c\x15\x92\xfa\x48\x01\xb3\x9d\x23\xa5\x31\x7e\xb8\xe4\x1a\x96\xc3\x53\x43\x23\x2a\xba\x95\x67\xbd\x9b\x83\x31\x4c\x20\x1e\xb4\xfb\x9b\x47\x5d\xcc\xb0\x3b\xa1\x51\x99\x26\xee\xe2\x4d\x35\x20\x7f\x37\xe8\xa8\x65\x39\x8c\xcd\x16\x2c\x70\xdc\x1a\x87\x1a\xb7\x66\x04\xf3\x64\x01\x09\x35\x74\x41\x35\x92\xdb\xcf\x23\xdf\x41\x7b\x43\xa7\xfd\xa2\x33\x70\x58\x7a\xa2\xb8\xe1\x6c\x02\x3f\xc2\x6f\xbf\xb5\x8e\xed\xd0\xf0\x27\xcd\x62\x3e\xd9\xf4\xbf\x6f\x50\xed\xca\x96\xff\x4a\x39\x4b\xee\x2c\xc6\x76\xdb\x77\xef\x7d\xab\x1e\x46\xa4\x95\x67\xe5\xdf\x3f\x98\x59\xdd\xa2\xa1\x8c\x87\xc3\xc5\x86\xaf\x81\x39\x62\x30\x71\x73\xa2\x22\x1e\x13\xd8\xa1\x19\xb6\xdb\x43\xb7\x5e\xc7\xff\xad\xcb\xf4\xc8\x78\xbe\x7e\x89\x06\xce\x9a\x4d\xd4\xd4\xce\x00\x85\x40\xed\x3f\xb1\x6b\x54\x53\xbc\xc2\x78\xdd\xa4\xb5\x3a\x8a\xe0\xaf\x70\xdd\xe0\xcc\xce\x6a\x54\xaa\xe0\xab\x7a\x3b\x4f\x16\x8e\x42\x98\xd4\x81\xfd\x8c\x4b\x26\x6c\x02\x8c\x8a\x63\xc1\x78\x6b\x08\x5b\xf1\xb3\x89\x7d\xfd\xfe\x2c\x6e\xd4\x64\xb3\xb4\x51\x81\x4d\x49\xd7\x71\x82\x20\xb0\x6e\xe4\xda\x52\x34\xaf\x10\x84\x17\xd5\xd7\xd9\x36\xb2\x52\x2c\xb5\x42\x3f\xfc\x00\x67\x66\x4b\x66\x8a\x0a\x4d\x63\x7b\x4d\xf2\x64\xa8\x41\x72\x2b\x05\x96\x06\x03\x0f\x71\x02\x66\x4b\xa6\x92\xf3\x05\x8d\xd7\x61\xf4\x97\x36\x6e\x2b\x18\x70\xb9\x24\x3f\x5b\x3e\xd2\x70\x68\x25\x99\x58\x82\x95\x06\x53\x7b\x80\x94\x32\x8e\xc9\x18\x3e\xbd\x0e\xdd\xb5\x1c\x9e\xe0\x30\xf0\x1f\x87\xb0\x8c\x7d\x6f\x38\xd5\x2d\xb8\x0e\xd8\xbe\xc9\x64\xd1\x7f\x9b\xdd\x33\x8c\xca\x76\x7c\x36\xa9\x5a\xec\x14\xf9\x67\xe4\x52\x2c\xf5\x4c\x76\x28\xb7\x25\xca\xc4\x06\x3b\xfd\x0f\xca\xfd\xca\x42\x68\x96\xd2\xf3\xf5\x4b\x6f\x24\xa2\x2a\x23\xe0\x57\xb0\xd2\x6f\xd1\xea\xa7\x95\x58\x34\x08\xa0\xb9\x87\xb9\xa7\x16\x89\x6e\xa3\x19\xc3\xf9\x27\x7d\x0e\x89\x44\x2d\xce\x1b\xa5\x02\xa7\xec\xd6\xdd\xaa\x5c\xb1\xc8\x8d\x6d\x92\x8e\xff\x30\xf2\x6e\x83\xe3\x55\x7f\x7a\xcf\xcb\x4a\x30\xb3\xf3\x7a\xbd\xeb\xfa\x26\xf5\x56\x17\x14\xfc\x05\x4d\x6e\x8a\xe2\xb0\x71\xac\x35\x7e\x41\x53\xea\xbb\xfb\x86\x7e\x04\x05\xc7\xea\xe3\x28\xf4\xd2\x55\x23\x15\x4a\xfb\xe4\x4e\x3f\x2a\x96\x51\xb5\xfb\x8a\xbb\x7f\xa2\x92\xad\xc9\xfc\x4e\xf7\xab\x79\x38\x92\x0b\x0e\xe1\xc9\x38\x7f\x29\x4e\xff\x6f\xe1\xfd\x3d\x97\xfb\x50\x90\xfd\x85\x4e\xc4\xb6\xea\x0f\x9e\x15\xf2\x84\xc6\x69\xfc\x9d\xf2\x0d\x86\x47\x8b\xf2\x8b\x54\xc8\x96\xe2\x2b\xee\xc2\x68\x54\x07\xeb\x17\x34\x75\xb4\x0a\xf5\xa8\xd7\x69\x1c\x8d\x94\x64\x54\xe9\x15\xe5\x8e\x4b\x1d\xaa\xb7\x11\x5c\x8f\x60\x65\x4c\xbe\x31\x8c\x93\x6f\x34\x77\x27\xa1\xed\x30\x84\x90\x76\xd2\x77\x13\xe6\xbd\x75\xea\x79\x6c\x37\xdc\xc6\xbe\xfb\xe7\x1f\xc7\x2f\xce\x62\x2b\x1b\xde\x5f\xa5\x0e\xf5\xf0\xf1\x9b\x86\x30\xb2\x1e\x11\x83\x16\x8f\xc9\x82\xf8\xad\x21\xa7\x8a\x66\xba\x5e\x18\xfc\xb3\x5d\x15\xfc\xd7\xa7\x58\xe6\xd8\x6f\xc6\xc7\x46\x47\x8d\xe1\x09\x4d\x75\x21\x8f\x9e\xbc\x3b\xf4\x82\xc0\xaf\xc2\x95\xd6\xd1\x56\x1c\x04\x81\xdf\x84\xab\x88\x1e\x6f\xc6\x4e\xb4\xb5\x16\x4f\x91\xff\x4a\xf5\x83\xc0\xb1\x1b\x07\x05\xc8\x4a\x19\x52\xa6\xb4\x81\x98\x23\x55\xee\xf7\x9b\x6a\x98\x75\x3f\xf0\xcc\x0a\x05\xd0\x24\x01\x66\xec\x0f\x4c\x53\x26\xaf\xc2\xef\x1b\xa6\x30\x81\x62\xe0\x6b\xa0\xb0\x72\x7e\x4a\x37\x52\xf0\x1d\x08\xc4\x44\x83\x91\xce\x82\xc0\xb7\xfa\x9e\x46\x02\x33\xe7\x1a\x5e\x6d\x32\x92\xf6\x3c\x4c\x16\xe4\xa7\xa4\x5e\xd6\xdf\x8b\xd6\xf7\x9a\xba\xa3\x93\xb3\xd7\xd0\xca\x91\x58\xed\xee\x5d\xcf\x4d\x7a\xfe\x27\x9e\xdd\x30\xae\x72\xdc\x6c\x8b\x95\x62\x61\x97\x89\x85\x5b\x23\x3a\x2b\xcc\xd8\x2d\x08\x37\x32\xcb\x98\xe9\xad\x07\x1f\x5b\x6b\x7c\x96\xba\xff\x1e\xbb\x04\x14\x09\x5c\x1e\x0e\xff\x09\x00\x00\xff\xff\xff\xc0\x11\xc3\xe4\x13\x00\x00")

func bindataTemplates16jsonapihandlertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates16jsonapihandlertmpl,
		"templates/16_jsonapi_handler.tmpl",
	)
}



func bindataTemplates16jsonapihandlertmpl() (*asset, error) {
	bytes, err := bindataTemplates16jsonapihandlertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/16_jsonapi_handler.tmpl",
		size: 5092,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1596536269, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"templates/00_imports.tmpl":                         bindataTemplates00importstmpl,
	"templates/01_initialize_collections.tmpl":          bindataTemplates01initializecollectionstmpl,
	"templates/02_collection.tmpl":                      bindataTemplates02collectiontmpl,
	"templates/03_collection-structure.tmpl":            bindataTemplates03collectionstructuretmpl,
	"templates/04_collection-builder.tmpl":              bindataTemplates04collectionbuildertmpl,
	"templates/05_model.tmpl":                           bindataTemplates05modeltmpl,
	"templates/06_primary.tmpl":                         bindataTemplates06primarytmpl,
	"templates/07_fielder.tmpl":                         bindataTemplates07fieldertmpl,
	"templates/08_single-relationer.tmpl":               bindataTemplates08singlerelationertmpl,
	"templates/09_multi-relationer.tmpl":                bindataTemplates09multirelationertmpl,
	"templates/10_model-definition.tmpl":                bindataTemplates10modeldefinitiontmpl,
	"templates/11_single-file-models.tmpl":              bindataTemplates11singlefilemodelstmpl,
	"templates/12_single-file-collections.tmpl":         bindataTemplates12singlefilecollectionstmpl,
	"templates/13_collection-definition.tmpl":           bindataTemplates13collectiondefinitiontmpl,
	"templates/14_collection-initializer.tmpl":          bindataTemplates14collectioninitializertmpl,
	"templates/15_collection-initializer-function.tmpl": bindataTemplates15collectioninitializerfunctiontmpl,
	"templates/16_jsonapi_handler.tmpl":                 bindataTemplates16jsonapihandlertmpl,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"templates": {Func: nil, Children: map[string]*bintree{
		"00_imports.tmpl": {Func: bindataTemplates00importstmpl, Children: map[string]*bintree{}},
		"01_initialize_collections.tmpl": {Func: bindataTemplates01initializecollectionstmpl, Children: map[string]*bintree{}},
		"02_collection.tmpl": {Func: bindataTemplates02collectiontmpl, Children: map[string]*bintree{}},
		"03_collection-structure.tmpl": {Func: bindataTemplates03collectionstructuretmpl, Children: map[string]*bintree{}},
		"04_collection-builder.tmpl": {Func: bindataTemplates04collectionbuildertmpl, Children: map[string]*bintree{}},
		"05_model.tmpl": {Func: bindataTemplates05modeltmpl, Children: map[string]*bintree{}},
		"06_primary.tmpl": {Func: bindataTemplates06primarytmpl, Children: map[string]*bintree{}},
		"07_fielder.tmpl": {Func: bindataTemplates07fieldertmpl, Children: map[string]*bintree{}},
		"08_single-relationer.tmpl": {Func: bindataTemplates08singlerelationertmpl, Children: map[string]*bintree{}},
		"09_multi-relationer.tmpl": {Func: bindataTemplates09multirelationertmpl, Children: map[string]*bintree{}},
		"10_model-definition.tmpl": {Func: bindataTemplates10modeldefinitiontmpl, Children: map[string]*bintree{}},
		"11_single-file-models.tmpl": {Func: bindataTemplates11singlefilemodelstmpl, Children: map[string]*bintree{}},
		"12_single-file-collections.tmpl": {Func: bindataTemplates12singlefilecollectionstmpl, Children: map[string]*bintree{}},
		"13_collection-definition.tmpl": {Func: bindataTemplates13collectiondefinitiontmpl, Children: map[string]*bintree{}},
		"14_collection-initializer.tmpl": {Func: bindataTemplates14collectioninitializertmpl, Children: map[string]*bintree{}},
		"15_collection-initializer-function.tmpl": {Func: bindataTemplates15collectioninitializerfunctiontmpl, Children: map[string]*bintree{}},
		"16_jsonapi_handler.tmpl": {Func: bindataTemplates16jsonapihandlertmpl, Children: map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
