// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/00_imports.tmpl
// templates/01_initialize_collections.tmpl
// templates/02_collection.tmpl
// templates/03_collection-structure.tmpl
// templates/04_collection-builder.tmpl
// templates/05_model.tmpl
// templates/06_primary.tmpl
// templates/07_fielder.tmpl
// templates/08_single-relationer.tmpl
// templates/09_multi-relationer.tmpl
// templates/10_model-definition.tmpl
// templates/11_single-file-models.tmpl
// templates/12_single-file-collections.tmpl
// templates/13_collection-definition.tmpl
// templates/14_collection-initializer.tmpl
// templates/15_collection-initializer-function.tmpl

package bintemplates


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataTemplates00importstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\xca\xcc\x2d\xc8\x2f\x2a\x29\x56\x52\xd0\xad\xad\xe5\xaa\xae\xd6\x55\xc8\x4c\x53\xd0\xf3\x84\x08\x82\xc5\x20\x0a\x14\x34\xb8\xaa\xab\x8b\x12\xf3\xd2\x53\x15\x54\xa0\x22\x56\xb6\x08\x85\xb5\xb5\x0a\x0a\x0a\x0a\x4a\xd5\xd5\x50\xc9\xda\x5a\x25\xae\xea\xea\xd4\xbc\x14\x90\x11\x9a\x60\x73\xa1\x1c\x18\xbb\xb6\x16\x10\x00\x00\xff\xff\x08\x20\xfd\xe4\x84\x00\x00\x00")

func bindataTemplates00importstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates00importstmpl,
		"templates/00_imports.tmpl",
	)
}



func bindataTemplates00importstmpl() (*asset, error) {
	bytes, err := bindataTemplates00importstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/00_imports.tmpl",
		size: 132,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates01initializecollectionstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xb1\x6e\xc3\x30\x0c\x44\x77\x7f\xc5\xc1\xbb\x95\xbd\x6b\xd3\x21\x4b\xd2\xc1\x7b\xc1\x5a\x74\x4a\x54\xa2\x0c\x89\x41\xd1\x0a\xfa\xf7\xc2\x76\x81\x14\xd9\x88\x77\x7c\xc0\x5d\xad\x9e\x67\x51\x46\x2f\x2a\x26\x14\xe4\x87\xdf\xa6\x14\x02\x4f\x26\x49\x4b\x8f\xa1\xb5\xee\x70\xc0\x73\xf2\x8c\x2b\x2b\x67\x32\xf6\x78\xff\x86\xf2\x2d\x27\x1d\xfe\x58\xca\x0e\xc7\x0b\xce\x97\x11\x2f\xc7\xd3\xe8\x56\x67\xfc\x90\x82\x59\x02\xe3\x8b\xca\x3f\x99\xec\x69\x8d\x6b\x85\x49\xe4\x62\x14\x17\xb4\xd6\x75\x0b\x4d\x9f\x74\x65\xd4\xea\x5e\xf7\xf3\x4c\x91\x5b\xeb\x6a\x95\x19\xee\x14\x97\x94\xad\x60\x03\xc6\x71\x09\x64\x6b\xf1\x1d\xf7\x70\x7b\xc2\xea\x1f\x3e\xee\x7b\x86\xfb\xca\x3c\xcc\x37\xdd\x60\x0f\xb7\x09\x60\xf5\x68\xed\x37\x00\x00\xff\xff\x89\xb2\x81\x5f\x13\x01\x00\x00")

func bindataTemplates01initializecollectionstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates01initializecollectionstmpl,
		"templates/01_initialize_collections.tmpl",
	)
}



func bindataTemplates01initializecollectionstmpl() (*asset, error) {
	bytes, err := bindataTemplates01initializecollectionstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/01_initialize_collections.tmpl",
		size: 275,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates02collectiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\x3d\x4e\x04\x31\x0c\x46\xfb\x39\xc5\xa7\xf4\xc9\xf6\xb4\x2c\x05\xcd\x2e\xc5\x5c\xc0\x4c\xbc\x43\x44\xfe\x94\x18\x21\x64\xe5\xee\x28\x0c\x12\x68\x3b\xcb\xcf\x4f\xf2\x53\xf5\x7c\x0b\x99\x61\xb6\x12\x23\x6f\x12\x4a\x36\xb0\x63\x2c\xa7\x13\x1e\x8b\x67\xec\x9c\xb9\x91\xb0\xc7\xeb\x17\x32\x7f\xb4\x92\xed\xef\xae\x34\x87\xf3\x15\x97\xeb\x8a\xa7\xf3\xf3\xea\xa6\xb3\xbe\x85\x8e\x5b\x88\x8c\x4f\xea\xff\x64\x92\x87\x89\x55\x21\x21\x71\x17\x4a\x15\x63\x2c\x4b\xa5\xed\x9d\x76\x86\xaa\x7b\x39\xc6\x0b\x25\x9e\x44\x55\x38\xd5\x48\xc2\x30\x21\xd5\xd2\xa4\x1b\xb8\x7b\xf2\xf7\xb6\xfd\x29\x09\x47\xc1\xbc\x53\xb5\xe0\xec\xc7\xf8\x0e\x00\x00\xff\xff\xfc\x82\x68\x40\xe5\x00\x00\x00")

func bindataTemplates02collectiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates02collectiontmpl,
		"templates/02_collection.tmpl",
	)
}



func bindataTemplates02collectiontmpl() (*asset, error) {
	bytes, err := bindataTemplates02collectiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/02_collection.tmpl",
		size: 229,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1595457055, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates03collectionstructuretmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x53\x4d\x6f\x1a\x31\x14\xbc\xef\xaf\x98\xe6\x40\x76\x11\x38\x3d\x23\xd1\x43\xe8\xa5\x87\x54\x6a\x2b\xf5\x12\xe5\x60\xec\x47\x62\xd5\xeb\xa5\xc6\x4b\x49\x2d\xff\xf7\xca\xf6\x02\xcb\x8a\xa0\x7e\x48\x3d\x85\xc3\xc2\xda\xef\xcd\xcc\x9b\x37\x78\x2f\x69\xa5\x0c\xe1\x4a\x34\x5a\x93\x70\xaa\x31\xd3\x8d\xb3\xad\x70\xad\xa5\x2b\x4c\x43\x28\x8a\x9b\x1b\x78\xcf\x16\x87\x02\xf6\x95\x5b\xc5\x97\x9a\x3e\xf2\x9a\x42\x80\xda\xc0\x3d\x11\x8e\x08\x68\x37\x24\xe1\x1a\x7c\x6f\xc9\x3e\xc7\xe6\xbb\x46\x92\x66\x5d\x7d\x9d\x5e\x8a\x2d\xb7\x97\x71\xe7\x18\x9d\xde\xe7\x73\x1f\x8a\xc2\x3d\xaf\x09\xe7\x2e\x91\xc5\xc3\x17\x00\x90\x68\x31\xae\xf9\x7a\xad\xcc\x63\x56\xf1\x25\x15\x14\x79\xae\x0f\x46\x39\xc5\xb5\xfa\x49\x47\x24\xa8\x7a\xad\xa9\x26\xe3\x36\x90\x4b\xd6\xbf\x30\x8e\xec\x8a\x0b\x62\xc5\xaa\x35\x02\xe5\xa9\x82\xcf\x24\x48\x6d\xc9\x86\x80\xf1\x39\x6d\xd5\x59\xba\x52\x60\x2c\x1a\xe3\x6c\x3c\xb1\x6c\x71\xf8\x59\x81\xac\x6d\x6c\x37\x4a\x9d\x75\x4f\xe2\x21\x66\x73\x88\xfe\x34\xe5\x68\xe0\xb1\x0f\x55\xea\x52\xab\x54\xff\x66\x0e\xa3\x74\x87\x14\x3f\x96\x5c\x6b\x4d\xbc\x4b\x47\x21\x3d\xbd\xc7\x4b\xdb\xc0\x85\x75\x24\xde\xd9\x5e\x60\x86\xea\xf0\x8d\xd2\x9d\xd1\x9f\x52\x12\x84\x25\xee\x28\xc7\x25\x67\x63\xd5\xd8\xf4\x36\xd0\xff\xb7\x06\x27\x9a\x52\x2e\xe3\xe2\xde\xdf\x4e\x72\xd4\x36\x60\x8c\x8d\x07\x0c\xd5\x10\x22\xb5\xde\xb6\x4a\xcb\x44\x90\xbd\x8a\x19\x4d\x42\xef\x32\xd0\xfd\xc3\x49\x96\xf6\x1e\x6b\x32\x65\xa6\xaa\xf0\x0e\x6f\x7b\x46\xf7\x9b\xe7\xa8\xf9\x37\x2a\x07\x18\x93\x7e\x77\x75\x68\x8c\xc6\xa8\x6e\x80\xb8\x6f\xcb\xcd\x23\xed\xe7\x39\xe2\x0f\x38\xee\xd5\x43\xa4\x39\x68\x3b\x2e\x37\x3f\x97\x79\xbe\x08\x28\x97\x79\xe4\x17\x3d\xde\xcb\xeb\x8f\xc0\x18\xab\xfa\x0b\x1e\x5d\xf2\xd0\x77\x6c\xb3\x3d\x6d\xe8\x87\x61\xe1\x76\xbf\x9f\x07\xfc\x50\xee\x09\x6b\xdb\x6c\x95\x24\x89\x6b\xe1\x76\xd7\x88\xff\x1a\xda\xb9\x7f\xca\xca\xc2\xed\x4a\x11\x95\x74\x58\x8b\xfc\x3d\xc1\x6b\x86\xfe\x20\x43\x9d\x8b\x13\xfc\xdf\x2c\x79\x3f\x05\x19\x19\xc2\xaf\x00\x00\x00\xff\xff\xd4\x11\x42\x49\xc7\x06\x00\x00")

func bindataTemplates03collectionstructuretmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates03collectionstructuretmpl,
		"templates/03_collection-structure.tmpl",
	)
}



func bindataTemplates03collectionstructuretmpl() (*asset, error) {
	bytes, err := bindataTemplates03collectionstructuretmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/03_collection-structure.tmpl",
		size: 1735,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1595849287, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates04collectionbuildertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x6f\xdb\x38\x12\x7f\xcf\xa7\x98\x0d\xb6\x90\x1c\x38\x4a\x0f\x38\xdc\x83\x01\x3f\x34\xe9\x6e\x51\x60\xb7\xbd\x6b\x7a\x7b\x0f\x41\xb0\x60\xc4\x91\xc3\x8b\x4c\xfa\x48\x2a\x89\x21\xf8\xbb\x1f\x38\xa4\xfe\xd9\xf2\xbf\x38\x45\x13\x6c\x1f\x8a\xb6\x14\x39\x33\xfc\xcd\xf0\x37\xc3\xa1\xcb\x92\x63\x26\x24\xc2\x71\xaa\xf2\x1c\x53\x2b\x94\x3c\xbd\x29\x44\xce\x51\x1f\xc3\xe9\x62\x71\x54\x96\x3f\xab\xc2\xc2\x68\x0c\x09\xfd\xff\xec\x0c\xca\x32\xb9\xa8\x67\x27\xff\x2a\x50\xcf\xcf\xfd\x92\xc5\x02\x84\x01\x7b\x8b\xf0\x3f\x37\x0a\x41\x12\x14\x06\x39\x58\x05\xa9\x46\x66\x11\x98\xe4\x80\x8f\x98\x16\x16\x9d\x3c\x37\x57\xa0\x81\x4c\x69\x5a\x5b\x96\xc9\xef\x8a\x63\x9e\x7c\x62\x53\x5c\x2c\xa6\xf4\xef\x23\x3b\x9f\xe1\x66\xd5\xc6\xea\x22\xb5\x50\x1e\x01\x40\xad\x9a\xdf\x24\x61\x06\x0d\xa3\xd6\xee\x8f\xd2\x47\x8b\x23\xa7\xfb\x32\x55\x33\x04\x8d\xb6\xd0\xd2\xc0\x44\xdc\xa3\x0c\xb6\x1b\xf7\x25\x39\xca\x0a\x99\x42\xdc\xd5\xfb\x05\x53\x14\xf7\xa4\xf3\x64\x93\x45\x03\x2f\x3e\x1e\xc0\x09\xc9\x4c\xbc\x36\x6f\xa0\xd7\x09\x1e\xdf\x7e\xe9\x49\xd8\x44\x12\xc4\x04\x9b\x7f\xd1\xba\xb6\x98\xf6\xe2\x20\x67\x16\x54\x9a\x16\x5a\x23\x07\x5e\x68\x21\x27\x6d\x1f\xb8\xff\xce\xb4\x4a\xd1\x98\x43\xb7\xf4\x8b\xd6\xf1\xc0\xeb\x0d\x3b\x11\x19\xac\x13\x96\x38\xbc\x7f\x1a\x83\x14\x79\x98\xdc\xd9\xfa\xfa\x45\x34\x77\xb1\x37\x50\x64\x5c\x80\xe9\xc2\x3e\xd6\x30\xb9\xb0\x4a\x95\xb4\xf8\x68\x41\x65\x1d\x3f\x57\x4b\x0f\x84\xe5\xc2\x3e\xc6\x83\x4a\x47\x72\x11\x74\xed\xef\x6a\x92\x53\xed\x40\x15\xd2\x76\xf6\x20\x8b\xe9\x0d\x6a\xb7\x05\x3a\x15\x20\xa4\xb1\x4c\xa6\xe1\xf0\xcc\xb4\xba\x17\x1c\xb9\xdf\xd9\xc1\x3b\x72\xda\xe3\x01\xc4\x42\xda\x7f\xfc\x7d\xe8\x5d\x3e\x38\xd0\xe7\x6f\x87\xdf\xc2\xed\xc1\xd4\x00\xdb\x47\x69\x50\x5b\x90\xf8\x00\xd1\x12\x97\x44\x35\x62\xb1\x19\x80\x90\x56\x11\xac\xc6\x2a\x7d\xf0\x59\xf7\x6a\x5f\xee\xd9\xa8\xec\x0b\x28\xfd\x7b\xc6\x1d\x17\x17\xf4\x57\x45\x7d\xeb\xf1\x3a\x98\x37\xbc\xbe\xd7\x11\x4f\x95\xad\x1d\xa8\xde\xe5\x79\x8d\x16\xcb\xf3\x5e\xac\x02\xd1\xd4\xb2\x9f\x05\xb3\x77\x79\xfe\x9a\x60\x23\x73\x03\x72\xbf\x0a\xc9\x6b\x02\x73\xa0\x2d\x61\xe6\x69\x2c\xe4\xaf\x29\xb3\xe9\x2d\x1a\x57\x28\xb4\x08\xfa\x50\x0c\x9d\x09\x0e\xbe\xab\xeb\x93\x25\xe5\xcf\x84\xa5\x14\xf9\xce\x68\xd2\x8e\xc8\x06\x43\xda\x5d\x5d\xb5\x13\xb4\x7e\x17\x95\x9d\x5b\xcd\xe9\x6a\x0d\x20\x8f\xc6\x30\x65\x77\xe8\x91\x80\x16\x14\xe0\xb0\xc8\x51\xc6\x2d\xf3\x06\x5e\x99\x4b\x2b\xc2\xad\xd4\x4c\x4e\xb0\x6d\x7f\x4b\xb3\x97\x7f\x25\xae\x61\xdc\x9e\x71\x25\xae\x93\x78\x55\xd5\x60\x35\xba\xa6\x01\x11\x29\xf2\x10\x38\x1f\xb0\x49\x7c\x46\xc8\x49\xbe\x52\x16\x86\x0c\xd8\x89\x9c\x4e\xd8\xb8\x4c\x90\xd1\x81\x0c\xb9\xd2\x80\x54\x16\x32\x55\x48\x4e\xc3\x2e\xae\x1c\xde\xdd\x62\xca\x25\xd7\x34\x67\xc6\xf8\x48\xfa\x83\xe5\x05\x7e\x52\x5f\xd0\x14\xb9\x3d\x34\x16\x3f\x20\x25\xd4\x17\x10\x88\x04\xc9\x7e\x21\x48\xc6\x3f\x31\x02\xdb\x7e\xee\x8d\x89\xb6\xef\xdf\x63\x8e\x16\x81\xd3\x5f\x66\xc5\xef\x4d\xcd\xb3\xde\xf7\x87\xb9\xc9\x1b\xf0\x3a\x38\xb7\xb2\xb5\x83\x9d\x4b\x55\x15\x7c\x7d\xac\xdb\x40\x18\x52\x96\xc6\x99\x32\xc2\xaa\xe7\xc2\xee\xd5\xa4\xac\x96\xb9\x0e\xc1\x90\xb4\x72\x8b\x1a\x18\xe7\xbe\xe8\x8e\x32\x1a\x88\x20\x54\x8b\xcf\x9a\x9c\x9c\xe4\xd8\x2b\xa8\x6e\x89\x7e\xf0\x57\x81\x39\x0f\x64\xb1\x41\xc2\xd3\x40\xdd\x52\x65\xb6\xc0\xdc\x31\x3b\xb5\xb6\x31\xd8\xd5\x09\x21\x64\xff\x73\x8b\x1a\x43\x6b\xc0\x84\x4b\xd9\x83\xb0\xb7\x55\x49\x5a\xa1\xcf\x24\x87\xe8\xde\xd1\xb1\x89\x0e\xc5\x9d\x74\x56\xb0\x1b\xeb\xae\xcb\x43\xf0\xb2\x21\x49\x12\x21\x2d\xea\x8c\xa5\x58\x2e\xbe\x95\x07\x9e\xdb\x05\xed\x1d\x55\x5b\x49\x92\x64\x2f\x67\x94\xa5\xcf\xf2\x3f\x6b\xcc\x19\x65\xc6\xd1\xb8\x22\xea\x2f\x61\xc8\xc0\xa2\xba\x65\xa5\x79\xc1\xb1\x2c\xeb\xd9\x15\x99\x83\xf0\x9f\xea\x4b\x45\x35\xa1\xae\x90\x57\x0d\x09\xc4\xd4\xa4\xee\x77\x12\xd4\xcc\x7d\x62\x79\x23\x80\xce\x84\x41\x1b\x81\x6f\x5b\xf9\xf3\x99\xd1\xa8\x3b\x9d\x61\x9f\x41\x4b\x30\xc3\x15\xa0\xc1\xc0\x3a\x6a\xd6\xe3\xe0\x22\x67\xf9\xeb\xea\x4d\xaf\x77\xeb\x8b\x45\x5c\x96\x56\xfd\xa6\x1e\x50\x5f\xb0\x29\xe6\xb0\xfc\xbd\xb2\xdf\xc5\x98\x8f\x3a\x1f\x5e\xdb\x14\xb6\x42\x6c\x43\x28\x6c\x0e\xb3\x0d\xae\x6f\x53\xa7\xb7\x77\x43\x65\xf0\x07\xd3\x82\xdd\xe4\xe8\x77\xb4\x14\x1d\xe7\xf3\x8f\x92\xe3\x63\xdc\x86\x86\x46\xaa\xb2\x6f\x5d\xe9\xb0\x75\x63\x63\x08\xbd\xae\xe4\x13\x3e\x64\xf1\x94\xcd\x66\x42\x4e\x92\x0b\x57\xa9\x7d\x74\xc7\x55\xb2\x7c\x08\xc7\x1f\xd0\x5a\x21\x27\xee\x72\xb6\x0c\x7e\x04\x37\x73\x10\xce\x18\xaa\x6a\x7d\x51\x18\x05\xc5\xdd\x8b\x5c\xc6\x44\x8e\x7c\x04\x6f\xee\x8f\x09\x89\xc1\x13\xe1\x3c\x3b\x83\xf4\x16\xd3\xbb\x56\x98\xa2\xad\xfb\x9c\x4d\x58\xba\xb9\xf7\x4c\x43\x37\xce\xe1\xea\xfa\xa4\xda\xe7\x25\xf5\x36\x69\xbc\xae\xcb\xff\x1c\x7a\x99\x4d\x79\xbe\x6b\xf8\x35\xb8\x9b\x46\xee\x10\xd4\x1d\x89\xaa\x16\x11\x26\x5e\x71\x3c\x48\x68\xce\xf9\xdc\x49\x8a\x49\x6d\x03\x8a\xc8\xe0\x27\x75\xd7\x92\xba\xa3\x47\x37\x38\xf4\x9e\xe5\x82\x93\x01\xc1\xb6\x63\xd2\x39\x82\xe8\x8d\x89\xba\xa5\x7c\x05\x67\xc7\xe5\xe7\xcc\xe0\xd7\xf9\x8c\xbc\x49\x9e\x3e\x0e\x60\x0d\x3a\x46\xee\xea\xce\xc6\xa5\xed\x53\x12\xdc\x34\x06\x36\x9b\xa1\xe4\x71\x77\x7c\xd8\x06\x77\xb0\x2f\x9f\x07\x8e\x89\x9b\x13\xd9\x95\xbe\x27\xb7\x97\xe5\x29\xa0\xe4\x81\xbb\x7f\x13\x53\x61\xc1\xa0\xf5\x04\x3a\x65\x8f\x62\x5a\x4c\x5b\xdd\x45\x75\xf3\x5f\x4c\xad\x09\xc2\x91\xbb\xa3\xe3\x66\xd2\x7d\x3e\x34\x92\x87\x4e\xd2\x97\xce\xd5\x49\x64\xad\x02\x89\x1a\xe8\x70\xcb\x5c\x09\xaa\x91\xf1\x39\x70\x91\x65\xa8\x51\x5a\xa0\x66\xbe\xca\x60\xc6\x26\x42\xb2\xe7\x68\x95\xd0\x96\xe2\x9c\x36\x46\x65\xe7\x6b\x49\xdc\x2d\xc3\xf7\xad\x9c\x3e\x67\x99\x3b\xcd\xb5\x1f\x7d\xed\xa4\xe9\xaa\x1a\x19\x50\xf4\x39\x81\x8f\x16\x0c\x9b\x53\x82\x34\x77\x62\x06\xcc\xc0\x94\xc9\x79\x70\x72\x64\x20\xd3\x6a\xba\x74\x0d\x70\xe2\x6f\x30\x53\x1a\xe1\x06\x27\x42\x4a\x47\xaa\x4d\x86\xf5\x93\xe9\x4a\x0c\x91\x37\x23\x82\xb7\xd5\xe3\x8f\x71\x75\x00\x33\xa0\xa6\xc2\xb3\x31\x1d\xcf\x6a\x5a\x9a\xb3\xc2\x60\xf2\xa2\xa2\xc7\xdb\x16\x7b\xc4\x5e\x57\xfc\x74\x4c\xdf\x37\x82\x2e\xd1\x7d\x6a\xae\x3a\x4d\x29\x45\x7e\x74\x3e\x70\xf1\x11\xf2\x86\x2f\xcc\xf2\x5c\x3d\x20\x6f\x4d\x35\x24\x64\xe4\x3e\xc2\x69\x73\xd7\xfc\xa7\x16\x53\xa6\xe7\x55\x69\x77\xd6\xf3\x05\x0b\xad\xa4\xff\xde\x14\x9f\x75\x4e\x0b\xb3\x03\xcb\x86\xc7\x47\xd2\xe0\xe7\xb4\x25\x57\x23\x5d\x89\x28\x39\xad\x3b\xf0\x11\x8f\xf6\x17\x87\x0d\x2f\x95\x6e\xdf\x35\x40\x5c\xcd\x40\x66\x5d\xa2\xdd\xbf\x5a\x08\x1b\xda\x58\x0c\x74\x8d\xe8\xad\xfd\xf6\x2f\x0c\xbe\x69\x51\x40\x93\x9a\x0a\x6f\x44\x7d\xfa\x95\x9b\x46\x74\x3c\xdc\x54\x0e\xec\x5c\x0a\xd4\xe8\xd7\x45\x40\x35\x72\x58\xfa\x6f\xc7\xdc\x25\xda\x7d\x6f\x72\x2e\x39\x68\x8e\xfa\x7c\xde\x9c\x6d\xa3\xb4\xad\x7c\x4e\x2f\x5f\xed\x77\x6e\x38\x9f\xbb\x3b\x15\x2b\xf2\x30\xc7\xc1\xa9\x9c\x08\xe4\xc0\x4c\x8a\x92\x3b\x47\xc0\x47\xe9\x47\xe9\xdc\x3b\x81\x1c\xab\x8f\x4e\x29\xe3\x1c\xa2\xd3\xa8\x4a\x1d\x35\xa5\x80\x74\x29\x41\x24\x98\x40\x74\x2a\x78\x94\xc0\xd7\x5b\x0c\x92\x54\xd6\xa6\x1e\xaa\x72\xb0\xa1\x20\x31\x91\x22\x13\x29\x93\x29\x56\x33\x9d\x5e\x97\x55\x68\xf9\x3a\x4e\x52\x7a\x1b\x23\xed\xc4\x38\x65\x29\xb2\x30\x21\xb9\x54\xda\xba\xe8\x5f\x4f\x45\x0d\xe5\x3c\x17\xf7\x04\x2f\xbe\x44\xf2\x71\x10\x07\xa4\x9a\x97\x85\xf0\x3b\x07\xa5\xad\x7f\x51\xf0\x76\xb7\x1f\x13\xb6\xd3\x90\xc8\x9a\xa5\x03\x18\x8f\xe1\xed\x53\x19\x64\x3b\x81\xa4\x4c\x3a\xd2\xa0\x32\xaa\x1d\x56\x64\x2b\x93\x80\xd3\x99\x9d\x07\x8b\xb7\x73\xca\xa1\x6c\xe2\xf8\xdc\xab\x6f\x70\xa4\x08\x68\x63\x43\xc6\x5c\xbd\xbd\x76\xc8\xb8\xb3\xd6\xc5\xc6\x2f\x0f\xef\x30\xc9\xfb\xfa\x74\x76\xc5\xd4\xd4\x05\xe3\x20\xef\x6f\xa3\xeb\x1e\x83\xfe\x5a\x19\x61\xe3\x0d\x71\x67\x27\x36\xe7\xa2\xf5\x22\x46\xae\xa4\xd1\xb2\x95\x9c\x47\x5d\x80\xc9\x47\x23\xef\xc2\x6e\x1d\xb8\xad\x06\x0c\x2c\xd1\xa8\x5e\x4d\x18\x1b\xae\x86\xbb\x74\xfd\x3c\x19\x9e\x36\xb3\xa8\xd9\x37\x1a\x43\xbc\xa1\xe5\x30\x58\x5e\xe4\xd3\x9a\xa2\xd6\x52\x3c\xd3\x42\xda\x0c\x8e\xff\x7c\x63\x8e\xbb\x72\x07\x55\x93\xf1\x1d\xe7\xab\x8d\x1c\x9f\xd2\x7c\xa2\xe0\xa1\x8f\xd3\x37\x4b\xf2\xd5\x27\xe5\x9e\x76\xcf\x73\x75\x05\x7b\x6d\x6d\x77\xc2\xaa\xcd\x2f\x16\xe0\xd3\x4a\xd3\x22\x33\x97\xb9\x48\x9d\x2d\x49\x42\x99\x63\xb1\x38\xe9\xef\x66\xf4\xfc\xba\xe4\x1b\x74\x04\x57\x1e\x54\xbe\x53\x57\x30\x98\xba\x4b\xe3\x6f\xb2\xa9\xf1\x57\x47\xf6\x81\x1d\xc0\xea\x38\x8a\x8c\x88\x65\xc5\x81\x74\x4a\x76\xc5\xb8\x3a\xbc\xef\x38\xaf\x8f\x59\xab\xdd\xd3\x1b\x38\x83\x60\xc0\x29\x60\x6e\x1a\x75\x2b\x0f\xfc\x15\x4a\xbf\xfb\x67\x5e\x97\x4e\xfb\xe5\xf5\xbe\xf2\xaf\x89\xd9\xde\xf7\xfe\xde\xb9\x57\xe2\xfa\x89\xef\x71\x6b\xc0\xf0\x1a\x6b\x52\x6b\xba\x59\xed\xce\xd6\xce\x44\xe6\x96\x9c\x9d\xc0\xd7\xcf\xef\x3f\x8f\x42\x83\x36\xf4\x1e\xea\x95\x82\x1e\x4e\xa9\xa8\xb4\x0a\x6e\x10\xa8\x93\x72\x72\xf6\x9d\x78\xf0\x12\x6d\x0f\xc3\x51\xe3\xe7\xc5\xf1\x60\xaf\xad\x3f\x78\xf0\x07\x0f\x6e\xbd\xf2\xda\x1f\x3c\xb8\x05\x8c\xef\xc1\x83\xbe\xfb\xea\x59\x50\xe3\x54\xdd\x23\x3f\x8c\x09\x7d\xe7\xd7\x09\xea\x61\x2b\xaf\xe1\x05\xd2\xda\x3a\x8b\x37\xfe\xce\xe5\x89\x9c\x44\xbf\x75\x79\x35\xb4\xf4\x76\xf8\xd2\x98\x69\x9f\x93\xe6\xfd\xba\x7a\xd8\x06\x4b\x67\x2a\xfc\xeb\xff\x01\x00\x00\xff\xff\x04\x87\x7b\xfb\x32\x33\x00\x00")

func bindataTemplates04collectionbuildertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates04collectionbuildertmpl,
		"templates/04_collection-builder.tmpl",
	)
}



func bindataTemplates04collectionbuildertmpl() (*asset, error) {
	bytes, err := bindataTemplates04collectionbuildertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/04_collection-builder.tmpl",
		size: 13106,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1595849287, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates05modeltmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\xbd\xae\xc2\x30\x0c\x46\xf7\x3c\xc5\xa7\xec\x4d\xf7\xbb\xde\x32\xb0\xb4\x0c\x7d\x01\x43\xdc\x12\xd1\xfc\x28\x09\x42\x28\xca\xbb\xa3\x14\x06\x24\x36\xcb\xc7\x47\xf2\x29\xa5\x83\xe6\xc5\x38\x86\xb4\x5e\xf3\x26\xd1\xd5\x2a\xfa\x1e\xff\x5e\x33\x56\x76\x1c\x29\xb3\xc6\xf9\x09\xc7\xf7\xe8\x5d\xff\xd9\xf9\xa8\x30\x4c\x18\xa7\x19\x87\xe1\x38\xab\xe6\xcc\x57\x93\xb0\x98\x8d\xf1\xa0\xf4\x25\x53\xfe\x6b\xb8\x14\x64\x63\x39\x65\xb2\x01\xb5\x0a\x11\xe8\x72\xa3\x95\x51\x8a\x3a\xbd\xc7\x91\x2c\x37\xd2\x4e\xd9\x86\x8d\x32\x43\x1a\x1b\x7c\xcc\x49\x42\xe1\x87\xed\x4f\x77\x7b\x82\xc9\xc6\x3b\x09\x55\xab\x68\x59\xec\x74\x6b\x79\x05\x00\x00\xff\xff\xbd\x60\xb8\xfa\xe2\x00\x00\x00")

func bindataTemplates05modeltmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates05modeltmpl,
		"templates/05_model.tmpl",
	)
}



func bindataTemplates05modeltmpl() (*asset, error) {
	bytes, err := bindataTemplates05modeltmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/05_model.tmpl",
		size: 226,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates06primarytmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\xdb\x6e\xdc\x36\x10\x7d\xdf\xaf\x98\x0a\x49\x2c\x05\x6b\xa5\x79\x75\xe0\x87\xc4\x6d\x5d\xa3\x88\x61\xc4\x6e\x0b\xb4\x28\x0a\x5a\x1a\x79\x09\x4b\x94\x4a\x72\xd7\x59\x08\xfc\xf7\x82\x17\xdd\x6f\xeb\xb8\x46\xd2\x3c\xc5\x2b\xce\x99\xc3\x33\x17\x0e\x59\x96\x31\x26\x94\x21\x78\x05\xa7\x19\xe1\x7b\x0f\x8e\x95\x5a\x95\xe5\x31\xbc\xc8\xb7\x12\x4e\x4e\x21\x34\xbf\xbc\x79\x03\x67\x79\x56\xd0\x14\x41\xd2\x0c\x21\xda\x60\x74\x0f\x34\x81\xb2\x0c\x2f\x49\x86\x4a\x01\xcd\x8a\x14\x33\x64\x52\x40\x46\x8a\x82\xb2\xbb\xf0\x63\x1e\x63\x0a\x94\x49\xe4\x09\x89\x30\x5c\xed\x08\x87\xbf\x7b\x9f\x4f\xe1\x55\x0d\x52\xaa\x95\x76\x75\x89\x5b\x9e\xb3\xb3\x3c\x4d\x31\x92\x34\x67\xfa\xe3\x01\xf8\x90\xa1\xdc\xe4\x71\xa8\x21\x3e\xa1\xdc\x72\x26\x40\x6e\x10\x98\x36\xcf\x13\xf3\xff\xa8\x06\x85\x24\xe7\xe6\xa7\xa3\xda\xfd\x51\xb8\x4a\xb6\x2c\x02\xbf\x2c\xc3\x4f\x18\x21\xdd\x21\x57\x0a\x5e\xd7\x0b\x82\x51\x6a\x7e\x00\x42\x72\xca\xee\xa0\x5c\x01\x00\x70\xe3\x1b\xbc\xb2\x0c\xbb\x0b\x95\xf2\x56\x76\x87\x17\xe2\xca\x0a\xfe\x0b\xee\xff\x40\x9e\x3f\x66\x77\x4b\x14\xfb\xd8\x7e\x00\xb7\x79\x9e\x76\xc9\x95\x65\xe8\x56\x85\x17\x42\xaf\x52\xca\x51\x3b\x47\xd9\xd8\xff\x46\xd2\xed\xa3\xa4\x5f\x22\x37\x44\xf7\x83\x06\xa6\x54\x03\x96\x0d\x4e\xd8\xe2\x6c\xe1\xc6\x18\x5f\x9b\x48\x3c\x2f\xef\x96\x0f\x3f\x00\xdf\x06\x7f\x0d\xc8\x79\xce\x03\xb7\x83\xb2\xa4\x09\xd4\x7c\xad\xc5\x39\x4a\x89\xdc\x14\x54\x67\x93\x2e\x7d\x90\x83\x2f\x50\xe7\x4b\xce\xa1\x26\x02\x9d\x4d\x07\xe3\x98\x4a\xad\x81\xd1\xd4\x79\x3e\x06\x4c\x05\x42\x9b\xc0\x85\xb8\xc1\xcf\xf2\x23\xe1\x62\x43\xd2\x16\x07\x1a\x1b\xde\xba\xd2\x17\xc4\x0e\x9d\xb1\xc6\xf1\x03\x6b\x9c\x18\xdb\xef\x4e\xb5\x6f\xb7\xef\x76\x01\x78\x4e\x13\x11\x5e\xe2\x43\xe2\x57\x31\x38\x4b\x89\x10\x3f\x51\x4c\x63\x23\xe1\x1a\x3c\xca\x76\x24\xa5\x31\xb8\x2e\x04\x89\xfe\x08\x3b\xfd\xf5\x04\x5e\xee\x40\xe6\x50\x10\x2e\xd0\x09\x15\xc2\x8f\x9c\xeb\x0f\xde\x7a\x89\xb5\x61\x60\xd9\x76\x44\xb7\x40\x3e\x8d\x83\x45\xe1\xac\xce\xc3\xa8\xcd\xab\x65\xad\xfc\x31\xf8\x1e\x52\x57\xa6\xae\x4a\x26\x5d\x7f\xd0\x3d\x9a\xea\x26\xb2\x06\x2f\x33\x09\xdc\xea\x59\xb0\x21\x02\xfa\x02\xde\x63\x25\xa2\xdc\x17\x38\xd0\xcf\x0b\x1a\x46\x2c\x1e\x2f\xa4\xf7\x71\xcc\x51\x88\x67\x2b\x22\x87\x3f\x57\xfe\xaf\xbe\xa0\xfe\x7f\x26\x62\x43\x6e\x53\x7c\xde\x0e\xd0\xf1\x32\xba\x85\x6e\xfd\x5f\x88\xab\xdc\xac\x69\x0a\x2f\x59\x4a\x21\x38\x9d\xa8\xab\x25\x55\x9a\x64\x2f\x4b\x64\x71\xed\xb2\x4f\xe9\xc3\x5e\xe2\x75\x4a\xa3\x41\x46\xba\xe2\x98\xd8\x82\x52\xaf\x0d\xae\x52\x0b\x44\xaa\x24\x1b\x4b\xfa\xa7\x62\xf7\xb6\x37\x92\x08\xfa\x50\x7b\xde\x24\xa8\x3d\xcc\x1f\x61\xba\x4b\xfe\xd3\xec\xd5\x1c\xf7\x1e\xa3\xa9\xa7\x37\x39\xa1\x82\xdf\xa8\x50\x7d\xbd\xd9\x17\x38\x63\x11\x38\x8b\x11\xcb\x73\x94\xf6\x84\x9f\xe5\x52\x01\x38\x2d\xaf\xdb\x3b\xfd\x2f\x25\xbc\x1e\x4e\x00\x3b\x1b\xa6\x46\xc2\xc0\x36\xc4\xc3\x4b\xc9\x22\x0c\x0a\x66\xb1\xc2\xea\xe6\xdc\x8a\x58\xf5\xd3\x58\x09\x69\x57\x6b\xc8\xef\xf5\x79\x69\x7c\x86\xfe\x20\x44\xc1\x3b\xbd\xe0\x31\x24\x76\x53\x14\xcc\xce\x09\x8b\xc1\x67\xb9\xec\x9c\x49\xba\x6c\x83\x39\x51\x54\x7d\x94\xcd\x10\xfe\x40\x04\x7e\x29\xe9\x57\x33\xac\x9d\x64\x65\xc9\x09\xbb\x43\x78\xf1\xc0\x49\x51\x60\x6c\xee\x13\x15\xd0\xef\xf6\x37\xed\x5e\x1c\xc4\xba\x42\x19\x23\x4b\x13\x73\x61\x99\xd1\x43\xff\x93\x98\x15\x76\xd2\x11\xa6\xed\x75\x4c\x34\x11\x78\xab\x94\xbf\x0b\x5a\xc0\x66\x49\x47\x89\x8e\x51\xa3\x86\xc6\x6e\xd9\x75\x7a\xde\xe3\xa0\x7a\xbf\x37\x31\xea\x32\xeb\x76\xf6\xf6\x5f\xad\x6e\x9f\x22\xf8\x29\xb2\x46\xf5\xf7\xa9\x44\xce\x88\x34\x90\x22\x80\xb7\x2d\x8c\x63\xb0\xed\xe1\x50\x0b\x7d\x29\x34\xf7\x40\x52\x2d\x31\xd3\x86\x30\x37\xab\x3b\xba\x43\x66\x67\x90\x70\xba\x74\x28\x8b\xf1\xf3\x94\x2f\xf8\xfe\x7f\x11\xea\xde\x54\xf7\xa4\x60\x8f\x05\xba\x9a\xd1\x0e\x6b\x53\xbd\x7b\x47\x44\x18\xeb\x49\x73\xe8\x00\x1b\x11\x66\x3b\xf3\xe8\x39\xde\x42\x3a\x6c\xc6\x2f\x78\xbe\xa3\x31\xc6\xf5\xac\xea\xc6\xfb\xa3\x97\x37\x47\xf5\x5d\xbc\x7b\x01\xd0\xbf\x9a\x79\xd7\xae\xf2\xd6\xb5\xe7\x9d\x05\xed\xec\xa1\x3e\xc0\x46\xc3\xf2\xb8\x64\x15\x0f\x54\x46\x1b\xeb\xc6\x64\x4b\x93\xb4\xda\xaa\xb9\xe4\xb9\x06\xd7\x80\xb6\x5b\x5c\x2f\x9d\x2b\x2a\x11\x11\xa8\x03\x5f\x1b\x29\x75\xf2\x84\x04\x9f\xec\x16\x15\xf9\x6f\x35\xc9\xc7\xf8\xb5\x93\xbd\xce\xe9\x18\x13\xb2\x4d\xe5\xc9\x57\x49\xbc\xe6\xa6\xe5\xad\xa1\x55\x0f\x9d\x71\x96\xd1\x74\x66\x7c\x7a\xa6\x37\x89\x29\x1f\x6e\x9e\xb2\x53\xfc\xdc\x28\x65\x6d\xae\xbb\xaf\x12\x32\x2b\x5a\x4f\x02\x0e\xe5\x4a\xdf\x1e\x39\x78\x06\xd9\x9b\x40\x68\x66\xa4\xb9\x57\x01\xe4\xbc\x7f\x4a\xf9\xfa\x64\x77\x2e\xba\x4d\x7a\xd4\x51\xd0\x3a\xb3\x96\xa6\x94\xc1\x74\xe6\xcb\xac\x08\xc6\x5b\xc4\x32\x9a\x74\x35\xd1\xcd\xd3\xc1\xf8\x33\xf9\xfe\xf2\x2b\xcb\x86\x2f\x30\xc9\xa1\x0f\x30\xb5\xb5\x79\x82\xf9\xf3\xaf\xdb\xbd\x74\xb1\x0e\x82\x77\x4b\x9a\x7f\x93\xaf\x30\x63\x92\xe9\x71\x77\xf8\xfa\x32\x31\x00\xf7\x86\x97\x99\x9e\x79\xc8\x40\xab\x77\x3a\x4b\xef\x70\xb0\x79\xac\xe9\x63\x6a\x10\xb0\xaf\xf4\x1e\xe4\xba\xd9\xbf\x01\x00\x00\xff\xff\xa7\xcc\xaa\xde\x21\x18\x00\x00")

func bindataTemplates06primarytmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates06primarytmpl,
		"templates/06_primary.tmpl",
	)
}



func bindataTemplates06primarytmpl() (*asset, error) {
	bytes, err := bindataTemplates06primarytmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/06_primary.tmpl",
		size: 6177,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1595332023, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates07fieldertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x6d\x6f\xdb\x38\x12\xfe\x9e\x5f\x31\x67\xa4\xb1\x64\x38\x72\xfa\xd5\x45\x0e\x68\x7b\xbd\x5e\x70\xe8\x0b\xd6\xd9\x5d\x60\x83\xa0\x50\xac\x71\x4c\x54\xa6\x5c\x92\x51\x9b\x15\xf4\xdf\x17\x24\xf5\x4a\x51\x2f\x4e\xe3\x26\xdd\x8d\xbf\x45\x22\x67\x86\x33\xcf\x3c\x33\x24\x95\x24\x09\x70\x45\x28\xc2\x68\x45\x30\x0c\x90\x8d\xe0\x38\x4d\x0f\x92\xe4\x18\x0e\xa3\x1b\x01\xf3\x53\xf0\xd4\x93\xd9\x0c\x5e\x47\x9b\x2d\x09\x11\x04\xd9\x20\x2c\xd7\xb8\xfc\x0c\x64\x05\x49\xe2\xbd\xf7\x37\x98\xa6\x40\x36\xdb\x10\x37\x48\x05\x87\x8d\xbf\xdd\x12\x7a\xed\xfd\x57\x0b\x05\x42\x05\xb2\x95\xbf\x44\xef\x20\xf6\x19\x7c\x6a\x0c\x38\x85\xa3\x42\x50\x92\x1e\x48\x75\x6f\x51\xa8\xb7\xfc\x65\x10\x30\xe4\x1c\xae\x51\x70\x10\x6b\x04\x3f\x7b\x10\xad\x60\xcb\xa2\x98\x04\x18\xc0\x58\xd9\x3f\xf6\x0e\x56\x37\x74\x09\x4e\x92\x78\xbf\xe0\x12\x49\x8c\x2c\x4d\x61\x52\xc8\x76\x1b\x62\x1d\x35\x11\x26\xb9\x45\x0b\xc1\x6e\x96\x7a\x88\x0b\x4e\x61\x78\x92\x4e\x01\x19\x8b\x98\x0b\xc9\x01\x00\xf0\xaf\x44\x2c\xd7\xa0\x26\x7b\x67\x34\xc0\x6f\x17\x27\x97\xfa\x15\x24\x09\xf3\xe9\x35\xc2\xa1\x16\x2d\x7d\xa8\x55\x2a\x4f\xca\x11\x4b\x9f\x23\x24\xc9\x61\x65\x7a\x9a\xce\x61\x36\x2b\x1f\x6a\x7b\xd5\x68\xf9\x63\x28\x6e\x18\x95\x5e\x92\x71\xa9\x2c\xce\x33\x66\x4c\x81\x92\x30\x33\x03\x69\x20\x55\x6a\x29\x99\x04\x4a\xc2\x6c\x25\xdc\x7b\x8f\x5f\x57\x4e\xbe\xf0\xd7\xa1\xcf\xf9\x19\x8d\xfd\x90\x04\xef\xa2\x00\x43\x65\xf3\x14\x46\x85\x8f\x89\x7e\xa9\x17\x3d\x87\xf1\x33\x3e\x86\x55\xc4\xe0\x9a\xc4\x48\x61\x23\xe7\xcc\x4b\x3c\x8c\x47\x53\x28\x0d\x73\x5c\xf7\xa0\x1e\xd7\x3f\x90\x45\xbf\xf9\xe1\x0d\x0e\x03\x0e\x1f\x1c\xd9\x42\xf0\x1d\x43\xfb\xc3\x63\x9b\x24\xb3\x89\x11\xe7\x24\x21\x2b\xc0\x2f\x99\x1a\x4f\x2e\x09\x46\x94\x84\xa3\x34\x55\xaf\x72\xe9\xfc\x63\xa4\xd6\x91\xa6\x8e\x0a\xb7\x7c\x9d\xbd\x3b\xbf\xdd\x62\xeb\x68\x37\x1b\xdd\x98\x25\x35\x65\xb3\xec\xea\xf3\x99\x0a\x67\x93\x59\xb1\xec\x9a\xf1\x35\x61\x16\x44\xaa\xbf\x02\x5c\xf9\x37\xa1\x98\x9b\xd3\xef\x0b\xa1\x40\xfd\x0d\x6a\x98\x36\xa0\x28\xd5\xa5\x19\x20\xcf\x78\x01\x9b\x81\x1c\xd6\x87\xc4\x8a\xc4\x6e\x0c\x5e\x45\x51\xf8\xc0\xe0\x33\x63\x76\xc6\x5b\xa3\x56\xe3\x91\x95\x1f\x72\xdc\x7b\x9c\x74\x84\x16\xfb\xa2\x8c\x86\xe0\xce\x70\xa9\xb5\x3e\x18\x47\xf4\xf0\x3e\x9c\x9a\x79\xb7\x43\xca\xfd\x90\x6c\xab\xa7\x78\x59\x0d\xfe\xe7\xf3\xb5\x7f\x15\xa2\x92\xbf\x43\x78\x87\x14\x84\xa6\xec\x9f\xa7\x28\x58\x88\xbb\xc6\xb6\xaa\xf9\xea\x45\xc5\xa9\x74\x76\x66\xa7\x8d\x68\xf3\x2c\x2f\x63\xd4\x84\x4d\xd3\x9e\x57\xb7\x02\x17\x21\x59\x62\x6d\x4c\x45\x36\x17\x8c\xd0\x6b\xa7\xa5\xfc\x4c\xca\xb2\xd3\x6d\xbf\x5b\x37\x50\xf6\xa5\x18\xf2\x56\xad\xdf\xab\xce\xa2\x4d\xce\x7b\xc0\x76\x6a\x3c\xb8\x9f\xba\xe7\xcc\xf9\xf9\x32\xa6\xac\x64\x3f\x79\x87\xbc\xd8\x43\x44\x17\x03\x23\x3a\x85\x58\x6b\x2d\xc3\xea\x82\x83\x8c\x3d\x02\x36\x8c\x58\x93\x10\x1d\x9f\x06\xe5\x53\x4d\x49\x4e\xd9\xb9\xbe\x64\xcc\xbf\x5d\x90\x3f\x11\x4e\x5c\xd7\x64\x4f\xbd\x52\x2b\x43\x0e\x29\xb7\x55\xaa\x30\x6a\xdb\x10\x42\x95\x06\x4c\x21\xfa\x2c\x1d\xa4\x2c\xf1\x1c\xa3\x77\x77\x5f\xc8\xd7\xbb\x1b\x16\xf7\x9a\xa5\xdc\x29\x3d\xe7\xd0\x48\x18\xee\x73\x9b\x4e\xae\x58\x3d\x9b\xc1\xeb\x7c\xeb\x4f\x04\x10\x0e\x34\xa2\xc7\xdb\x6c\xa0\x5e\xc7\xa0\x25\xbe\xf2\x39\x7e\xdf\x32\x8f\x86\xac\xb3\xe4\x6f\x68\x14\xb1\x66\x01\x23\x2b\xb8\x46\x8a\x8c\x2c\x0d\xb3\x2f\x2e\xab\x09\x61\x35\xb8\xb6\x63\xaa\xe0\xae\x51\xab\x24\x21\x7c\x9a\x02\x11\xb8\x91\x1a\x74\xb2\x64\x6a\x1b\x52\x5b\xea\x1d\x59\x41\x88\xd4\xc9\x66\xb9\xf0\xef\x32\x73\x0a\xd5\x69\x6a\x48\x83\x01\x0d\x5f\x49\x12\x55\x5e\x13\x51\x04\x1b\x9f\xde\x6a\x77\x70\xb5\x04\xb1\xc6\x82\xe7\x8c\xe0\x8c\xdc\x9a\xde\xe6\xf2\xc9\x0e\xcb\xaf\x05\xb0\xe6\x6e\x89\x5d\x87\x68\x93\x7f\x67\xfe\x76\x8b\x81\x0e\xa9\x36\xc6\x6d\x78\x0d\x0c\x4c\x4a\x1b\x06\x43\xb2\x33\x1e\x6d\x92\x95\x60\x9e\x19\x27\x65\xbf\x09\x71\x93\xd9\xd7\xa5\x46\x92\x85\x55\x09\xec\x86\xb5\x72\x4a\x7f\x3e\x49\x1b\x69\xe0\x0c\xa8\x9f\xb1\xdb\xa2\xa4\xc3\x3b\x83\xac\xb8\x20\x97\x0d\xfe\xaa\x49\xb7\x82\x41\xfe\x96\x11\x15\x84\xde\x60\xe3\xa5\x0d\x3b\x87\x7e\x28\x90\x51\x5f\xa8\x70\x73\x19\x30\xa7\x78\xc4\xc1\x80\x83\x1d\x47\x25\x02\xf1\x0b\x38\x21\x52\x70\x0c\xb1\xae\x0b\x27\x1d\x73\xf3\x69\xe6\x2c\x78\x6e\x9d\x53\x10\x6f\x31\x1c\x84\x32\x3e\xcf\x45\xc3\x95\xde\x20\x7c\x12\x59\x7b\x4d\x13\xe0\xa4\x1d\x9a\xd0\x60\x51\x89\x68\xdb\xf6\xa4\xfa\x13\xb8\xd9\x4a\xb5\x8d\x54\x93\xaa\x9c\x56\x38\x65\x1e\x6e\xe0\xfc\xc7\xa0\xfc\x48\x5a\xbd\x47\xa4\x9f\x6a\x0d\x77\x00\xfb\x00\xf5\x0f\xea\x3a\x0b\xa3\x3a\xb1\xbb\x57\x57\xda\x55\xde\xd5\xb7\xf7\x41\x33\x77\xab\xb4\xf5\x33\x15\x99\xe1\x72\x1b\x71\x3e\x36\x4b\xee\x33\x3e\xca\x5a\x75\xdb\x61\xcb\x60\x07\x67\x7d\x7c\x5c\x72\x82\x50\x8c\x67\xab\x49\x59\x57\x5f\xe3\x0a\x39\xcf\x64\x0f\x9b\x9e\xbc\xe3\xaf\x0d\x4d\xd3\xf9\xbe\xf9\xe5\x89\x5d\x5a\x15\x3c\xb1\xcb\x70\x57\xde\x3f\xbb\xb4\x63\xbc\x2d\x7b\x26\x43\xd3\xa7\x2b\x19\x26\x4f\xd9\xd0\x1e\x13\x3b\x75\xb6\xbc\xc9\xb6\xf3\x8d\x13\xf5\xea\xef\xb1\x94\x80\xb4\x02\xbb\xe6\x7a\xac\x27\xa9\xc6\x36\xda\xf4\x43\x15\xbe\x95\xdd\x4d\x9d\xfc\xf3\x96\x15\x03\xf8\xaa\xc7\xe8\x96\xd5\xab\x88\xc9\x8a\x4a\xfe\x5e\x96\x93\x1e\xa9\xf6\x43\x85\x4c\x40\xdb\x69\x42\xdf\x59\x3a\xd4\xf2\x86\x57\x76\x91\xea\x2c\x06\x9e\x37\x13\x7e\xd0\x11\x45\x03\x74\x49\x62\xc5\xf2\x4e\xd7\x3b\xed\x24\xd4\x3c\x65\x6a\x0b\x69\xfd\x60\x2a\x03\x46\xf3\xc0\xbf\xb6\xc1\xc9\xb9\xc1\xd8\xaf\x18\x9b\x9c\xfa\xe6\xc6\x3e\xe5\xb9\x15\x27\xbb\x6f\x6d\xac\x58\xc8\xf6\x34\x36\xcd\x6d\x3b\x9b\x47\x05\x90\x16\xba\xdb\x09\x22\x6d\xf0\xb0\xf1\x59\x27\x3c\x1e\x9a\xc2\xac\xee\xa8\x76\xad\x59\xd8\xcd\xb6\xb5\xa3\x5d\xb5\x02\xa3\x2a\x7e\x50\xb3\xba\x2b\x64\x06\xe4\xee\xa3\x85\x8b\x7d\xad\xa6\xc7\x7a\x1b\x94\x5d\x1a\x93\xdd\xbd\x61\x2b\x52\x5d\x45\xfa\xa1\x91\xdd\xc8\xb1\xf6\xab\xc7\xfc\xc9\x6c\x02\xe7\x1f\xfe\xf3\x61\x0e\x1c\x85\x52\xc6\x97\x3e\xa5\xc8\xc0\xe7\x79\x4e\x48\x8b\x54\x38\x8c\x4f\x73\x92\xa4\xf3\xe2\xf4\x61\xf3\xbb\x79\xc7\xaa\xfe\xda\xe3\xd7\x0a\x95\xbb\x39\x69\x6e\x79\xd9\xaa\x50\xd7\x76\x3d\x07\x95\xaf\x86\x16\x28\x3e\x32\xb2\xf1\xd9\xed\xff\xf1\x76\xa1\x6e\xbb\x5b\xef\xeb\x94\x41\xe5\x95\x1a\x6c\x50\xac\xa3\xa0\xff\xd2\xee\xa3\xcf\xb8\xfe\x74\x81\x57\x34\x0c\xb8\xbd\xd3\xb7\xef\x8f\xea\x76\xb6\xca\x21\x7a\x31\x0b\x14\x26\x65\x16\x57\xb8\xd9\x0a\x94\x03\x18\x8c\xd4\xaa\x46\xb6\xe9\x46\x86\x28\x8c\x67\x77\x5b\x05\x61\x9d\xe3\x37\xf1\x2b\xdd\xf8\x8c\xaf\xfd\x10\x59\xfd\xc5\xbb\xe2\xf1\xb1\x21\xab\x8f\xdf\x63\x9f\xc1\x55\xcd\x0f\x25\x9f\x1d\x98\x9c\x77\x24\x47\x76\x57\xb5\x0a\x3d\x76\x53\x5f\x07\x4b\xc8\xd6\x8b\x31\x2d\xa5\xc5\x7e\xa9\xa6\xaa\xbf\x57\x5d\xa1\xc5\x2b\x9c\x28\x1d\xe7\x5c\x5c\x5e\xdd\x0a\x74\x54\x6c\x5c\xf7\x85\x52\xfc\xaf\x8e\xcf\x4d\x46\xa3\x8e\x6b\xf5\x1a\xcf\xd4\xe9\xc5\xbc\x5d\x1a\x6b\x90\xcb\x14\x8e\xc7\x20\x22\xd8\x4a\x94\x64\x88\xf1\xe0\x0d\x63\x73\x78\x16\x8f\xa6\x43\xbe\x04\x40\xc6\x6c\x8c\x7c\x25\xa6\xfb\xf4\xe3\xbb\x8a\x17\x5d\x33\x76\x7f\x13\x17\x9a\x27\x0a\xf6\x1c\x1a\x52\xe6\x7b\xaa\x7c\xfd\x83\xa3\x2b\xe1\x4e\xad\x5f\x0c\x0d\x24\x05\xcd\x2d\x6f\x9b\xd4\xf4\xc4\x08\xff\x68\x46\xe8\x6f\xf7\x8b\xda\xa5\xd5\xca\xb2\x25\x1d\xdb\x52\xb5\x06\x7c\xd7\xc6\x2b\x4d\x85\xde\x75\xe6\x82\x1d\x8e\x21\x2e\x45\xc4\xa0\xb6\x1c\xa8\x2c\xc5\xed\x2d\x96\x3b\x26\x5e\x2d\xcd\xb2\xb0\xf4\x77\xac\x79\xea\x95\xdf\x5c\xa8\xf9\x36\xc7\xc5\x2d\x32\x4d\xb7\x58\xb1\x63\x81\xce\xfb\x48\xe8\xf6\x61\x9a\xfd\x73\x8b\x05\x36\x41\x84\x9c\x8e\x05\xac\xfd\x38\x87\x8b\xec\xad\x05\x32\x6f\xd4\xdb\xa3\x3e\x9e\x8f\xc6\x0a\x03\xff\x0a\x00\x00\xff\xff\x8d\xb9\x71\xa9\xcf\x33\x00\x00")

func bindataTemplates07fieldertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates07fieldertmpl,
		"templates/07_fielder.tmpl",
	)
}



func bindataTemplates07fieldertmpl() (*asset, error) {
	bytes, err := bindataTemplates07fieldertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/07_fielder.tmpl",
		size: 13263,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1595334108, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates08singlerelationertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x54\x51\x6b\xdb\x30\x10\x7e\xf7\xaf\x38\x42\xd6\xc4\xc1\x71\xf6\x9c\x91\x97\x05\x36\x02\x5b\x19\x4d\xd9\xcb\x18\x43\xd8\xe7\x54\x54\x96\x8c\x24\x27\x1b\xc2\xff\x7d\x48\xb2\x95\xd8\x49\xbb\xac\xac\x30\x3f\x94\x46\x3a\x7d\xdf\xdd\x77\xdf\x9d\x31\x39\x16\x94\x23\x8c\x14\xe5\x3b\x86\x73\x89\x8c\x68\x2a\x38\xca\x11\xcc\x9b\x26\x32\x66\x0e\x63\x51\x6b\x58\xae\x20\x75\x27\x8b\x05\xac\x45\x59\x51\x86\xa0\x69\x89\x90\x3d\x60\xf6\x08\xb4\x00\x63\xd2\x5b\x52\x62\xd3\x00\x2d\x2b\x86\x25\x72\xad\xa0\x24\x55\x45\xf9\x2e\xdd\x3a\xf8\xbb\x80\x0e\x94\x6b\x94\x05\xc9\x30\x8d\xf6\x44\xc2\x8f\xa7\x23\x57\x70\x13\xa0\x4d\x13\xd9\x04\x3e\xa2\xee\x02\x3e\x8b\x1c\xd9\xdf\x32\x16\x35\xcf\x60\x6a\x4c\x7a\x87\x19\xd2\x3d\xca\xa6\x81\x59\x20\x89\xcf\xf0\xa7\x9d\x2c\x30\x0b\xf0\x5a\xd6\x99\xfe\x40\x91\xe5\x31\x4c\xbb\x53\x17\x9d\x00\x4a\x29\x64\x0c\x26\x02\x00\x50\x07\xaa\xb3\x07\xe8\x20\xd2\x0d\xcf\xf1\xe7\xb7\xb7\xdf\xdb\x6b\x63\x24\xe1\x3b\x84\x71\xe0\xb0\x52\x77\xf4\xca\x6a\x6e\x0c\x2d\x80\x0b\x7d\x8c\x49\x37\x6a\xcb\x68\x86\xae\x23\x16\x25\x23\x0a\xc1\x98\x71\x9f\xa5\x69\x96\xb0\x58\xf4\xce\x7d\x89\xee\x8d\x67\xa7\x45\x0f\xf6\x8b\x70\x3a\x05\x60\xfb\xb9\xe6\x5a\x17\x9c\xe8\x95\x9e\x83\xc2\x6a\x05\x9c\xb2\xb6\xae\xee\x93\xa8\x6b\xc9\xed\x45\x62\xff\x84\xbb\xc6\x5a\x0b\x79\x7e\xc2\xd3\x86\x5e\x2c\xf7\x24\xaf\x1b\x63\xdc\xbb\x6b\x72\x3a\x72\xba\x47\x5e\xcd\xf6\x1f\x77\x9c\x63\x41\x6a\xa6\x97\xc3\x24\x5c\xbe\xae\x8f\x2a\xbd\xc5\x43\x11\x5a\xbc\x66\x44\xa9\x0d\xdf\x13\x46\xf3\xae\x4b\xce\x06\x09\x8c\x2a\x29\xf6\x34\xc7\x1c\xa8\xbf\x0f\x4d\x5f\xc2\xe4\x8d\x9a\x40\x21\x24\x94\xd6\x22\xf6\xf7\xfd\x64\x94\x84\x80\x04\x7a\x6e\x8c\x5d\x3a\x4d\xe4\xed\xbe\x7d\x65\xbb\x0f\xf1\x9f\xb7\x7b\xe2\x4b\x80\x9e\xe7\x63\xaf\xd5\x3f\xb3\x7c\x14\xcc\xf9\x3a\xbe\xa7\x45\x5b\xc5\x45\xcf\xfe\xc9\x81\x83\xe0\x6b\x46\xa3\x97\xcc\x7b\xa2\xf0\xfe\x57\xe5\x17\x5a\x1f\x0b\x99\xc2\x97\x52\x9c\x8e\x57\xcf\xf2\x4f\x0c\xe4\x71\x16\xc1\xd1\xba\x39\x3f\xd6\x6c\x71\x6d\x67\xa6\x5a\x7c\x12\x07\x94\x6b\x52\x22\x83\x3e\x6f\xec\x27\x6a\xf0\xc8\xce\x9d\x78\xb4\x6f\x9d\xc8\xe9\x74\x76\xb9\xfa\xf8\x9d\x0d\x1b\x6a\x7f\xa5\x9c\xcf\xb7\x68\x76\x5c\x12\xa7\xa9\x5d\xa1\xc5\x70\x13\x5c\xbb\x04\xbe\x12\x56\xe3\xa5\x25\xe0\x8d\xb6\xb7\xd7\x7e\xee\xdd\x1e\x08\xde\x3f\x2f\x6f\xd4\x8e\x58\xfc\x92\xc5\xf5\x1f\xec\xac\xb0\xd9\x7f\x07\x00\x00\xff\xff\x8a\xa1\xbe\x95\x5f\x08\x00\x00")

func bindataTemplates08singlerelationertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates08singlerelationertmpl,
		"templates/08_single-relationer.tmpl",
	)
}



func bindataTemplates08singlerelationertmpl() (*asset, error) {
	bytes, err := bindataTemplates08singlerelationertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/08_single-relationer.tmpl",
		size: 2143,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1594979701, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates09multirelationertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xdf\x6b\xeb\x36\x14\x7e\xcf\x5f\x71\x16\xba\xc6\x2e\x8e\xdb\xbd\x06\x32\xe8\xca\x36\x0a\xed\x65\xdc\x5e\xf6\x12\xc2\xc5\xb3\x8f\x5b\x51\x59\x36\x92\x92\xee\x22\xf4\xbf\x0f\x59\xb2\xe3\x1f\x71\x93\x66\x09\x6b\xc7\xed\x53\x63\x59\xdf\x39\xe7\xd3\xf9\x3e\x4b\x52\x2a\xc1\x94\x30\x84\x71\xb6\xa2\x92\x4c\x39\xd2\x48\x92\x9c\x21\x1f\xc3\x54\xeb\x91\x52\x53\x38\xcb\x57\x12\x66\x73\x08\xcb\x27\x97\x97\x70\x93\x67\x05\xa1\x08\x92\x64\x08\xf1\x13\xc6\xcf\x90\xe6\x1c\xe4\x13\x42\x16\x15\x05\x61\x8f\xe1\xbd\x41\xfb\x5c\x83\x01\x61\x12\x79\x1a\xc5\x08\x24\x2b\x28\x66\xc8\x64\x39\x14\x8e\xd6\x11\x87\xaf\x83\xf3\xe6\x70\xae\x54\xf8\x29\xca\x50\x6b\xa5\x47\x26\xfa\x75\x92\x54\x2f\xdc\xe7\x09\xd2\x0d\xa2\xd8\x1d\x3e\x1c\xa5\x2b\x16\x83\xa7\x54\xf8\x19\x63\x24\x6b\xe4\x5a\xc3\x45\x1d\xc3\xef\xc1\x7b\x15\x25\x70\x51\xa1\x3f\x48\xbe\x8a\xe5\x6f\x04\x69\x12\x40\x56\xe6\x50\x07\x36\xbf\x7c\x40\xce\x73\x0e\x6a\x04\x00\x20\x5e\x88\x8c\x9f\xa0\x82\x09\x6f\x59\x82\x7f\x2f\xae\x96\x6e\x58\x29\x1e\xb1\x47\x84\xb3\x3a\x8e\xa1\xba\x4a\x41\x18\xce\x95\x22\xe9\x66\x3c\xbc\x15\x0f\x94\xc4\x58\xae\x86\x41\x88\x23\x81\xa0\xd4\x59\x3b\x82\xd6\x33\xb8\xbc\x6c\x3d\xb7\x25\x96\x73\x6c\xe4\x0d\xa8\x19\x32\x81\x3d\x99\xdf\xe5\x2f\xc8\x6f\xa2\x0c\x69\x23\xe6\x2f\x91\xc0\x2f\xdf\x0a\xf4\x6d\x3e\xad\x79\x5a\x07\x90\x3f\x9b\xd9\x25\x17\xa1\x77\xd1\x0c\x5a\xcd\xd4\xda\xaf\x23\x93\x14\x7e\xc8\x9f\x1d\x01\xd5\x1f\x47\xb9\xe2\xcc\x52\x27\xc2\x4f\xf8\x92\x7a\x15\xab\x37\x34\x12\xe2\x96\xad\x23\x4a\xea\xc5\xf9\x33\xa2\x2b\x0c\x60\x5c\xf0\x7c\x4d\x12\x4c\x80\xd8\x71\x58\x9b\x01\x90\xdf\x0a\x9c\xc1\xe4\xc7\x2f\x13\xa8\x9b\x33\x35\x2b\x36\x83\x49\x9f\x93\xc9\xd8\x2d\xe4\x26\xc7\x26\x4f\x1d\xfa\xff\xc8\xcb\x7e\xaa\x17\xc0\x95\xa4\x94\x51\x4a\xa3\xaf\xc2\x7e\x20\x98\xcf\x81\x11\xda\x29\x5d\x62\x56\x18\xfe\x9a\xef\x5b\xce\x94\x6e\xbd\xb8\x5f\x08\x38\x37\x80\x5b\x2b\x01\x64\x49\x2b\xef\xc1\xe2\xb4\xbe\x50\x0a\x59\x52\x2e\xf7\x3e\x41\xa3\xa2\x40\x96\x78\x43\x80\x6f\xc3\x0b\x6c\x62\x2c\x97\x2d\xac\x5f\x29\x66\xdb\xf0\xda\xed\xe8\x3b\x61\xb9\x5a\xeb\x7f\xca\xc7\x09\xa6\xd1\x8a\xca\xd9\xe8\xc0\xbe\x73\xb2\xef\xf7\x5d\x95\x83\xeb\xba\xda\x11\x4b\x7f\x98\xd4\x0e\xd3\x69\x35\x9b\x94\xcb\x81\x11\x3a\xb2\x26\xf7\x3b\xca\x96\x0b\x89\x23\xbb\x5c\x0f\xff\x75\x9b\xf3\xc1\xcb\x6c\x1a\x8b\x65\xcb\xea\x02\xc3\x9b\xe5\xce\x7f\xff\x7e\xd7\x81\x6d\x74\x53\x4b\x13\x66\xe9\xbe\x56\xce\x3e\x9b\x83\x4d\x78\x2f\x19\xb4\x75\xed\x38\xab\xb5\x61\x7f\xbf\x6a\x35\x53\x40\x2a\xb0\x97\x0e\x39\x49\x1e\xe7\xde\x3e\x60\x0b\xb2\xf4\x07\x93\x35\x02\x3c\x44\x6e\x8c\xd8\xde\x39\x9e\xe6\x84\xd5\x5c\x59\x9b\xd5\xe0\x38\xa8\x5f\x30\x7e\xd2\xa8\x72\x8b\xf6\x2a\x4e\x86\x35\x78\x2d\x4f\x2c\xc2\x6b\xb9\x6b\xb3\x41\x4c\xa7\x9b\x10\x1b\x41\xfe\x7f\xe4\x78\xf4\xcf\xea\x21\xad\x56\x26\x1f\xc0\xd8\x32\x6d\x76\xbe\x79\x0a\x45\x2e\x04\xf9\x8b\xa2\x55\x60\x08\xf7\xae\xc7\x5c\x6a\xce\xd8\x03\x28\x57\x69\x4b\xcd\xe3\xed\xf2\xe9\x7e\x8b\x49\xea\x16\xf8\x67\xa0\xc8\x8e\xf4\x25\xf5\x61\x0a\x3f\x7d\x28\x62\x5c\x76\xbb\x37\x00\xe7\x35\x0d\x43\x44\x79\x6f\x61\x6a\x18\xc6\x77\x28\x8b\xb2\xf8\xa5\x35\x89\x8f\x61\x7a\x9d\xb2\xdf\x6a\x7c\x77\xc8\x4e\x67\x7a\x77\xc8\x76\x6e\x3b\x08\x93\xc1\x77\x43\x6b\xb7\xd1\xd5\xa6\x01\x77\x59\x8a\x9b\x71\x44\x3b\x39\xb8\xf9\xaf\xde\xc1\xf7\xde\xf6\xf7\xc3\x89\x37\xd7\x3d\xfc\xbd\xee\x10\x04\x84\x61\xf8\x11\xef\x11\xaa\xd3\x6b\x16\x3d\xa3\xb7\x58\x0e\x9c\xfe\x83\xb2\x09\x6d\xa5\x8d\xed\x64\xe7\xf0\xb6\xf7\x1d\x44\x7b\x77\xdc\xdb\xac\x3b\x46\x55\xf7\xf4\xfc\xef\xee\x2d\x60\xe8\xee\x02\xde\xdf\xfd\x45\xdb\x19\xaa\x75\x5a\x90\x25\xcc\xfb\x44\x1c\x7a\xeb\x71\xd0\x7d\xc4\xd6\x43\xce\x9e\x48\x1d\xa0\xa6\xef\xfc\x97\xe7\x7d\xf1\xfa\x79\xbf\xae\xe3\x41\x72\xc2\x1e\x3d\x7f\xf0\xec\xef\x9c\xf8\x9f\x00\x00\x00\xff\xff\x09\x30\x80\x77\x97\x15\x00\x00")

func bindataTemplates09multirelationertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates09multirelationertmpl,
		"templates/09_multi-relationer.tmpl",
	)
}



func bindataTemplates09multirelationertmpl() (*asset, error) {
	bytes, err := bindataTemplates09multirelationertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/09_multi-relationer.tmpl",
		size: 5527,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1595329297, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates10modeldefinitiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x31\x0e\xc2\x30\x0c\x45\x77\x4e\xf1\x95\xdd\x3d\x06\x1b\x0b\x9c\x20\x52\x7e\x90\x25\x27\xad\x42\x18\x50\xd4\xbb\xa3\x06\x94\x01\xd1\x6e\xb6\xff\xfb\xcf\xad\x09\x02\xa3\x66\xc2\xa5\x39\xd0\xa4\x6f\x5a\x75\xce\x0e\xb2\xae\xa7\xd6\x50\x99\x16\xf3\x95\x70\x4b\xd1\xe4\xcb\xcb\x61\x42\x8f\x34\x62\x3a\x2b\x2d\xb0\xe0\x97\x8d\x9f\xfb\x60\x05\xcc\x61\xb4\x6e\x9a\xef\xc6\x2b\xcd\x6f\xaf\xfe\xd4\x1f\x1d\x90\x32\x88\x1d\xd1\xe5\x69\x55\x0f\x3c\x69\xcb\x8f\x35\xdf\xe9\x1d\x00\x00\xff\xff\xdd\x47\x50\x16\x0c\x01\x00\x00")

func bindataTemplates10modeldefinitiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates10modeldefinitiontmpl,
		"templates/10_model-definition.tmpl",
	)
}



func bindataTemplates10modeldefinitiontmpl() (*asset, error) {
	bytes, err := bindataTemplates10modeldefinitiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/10_model-definition.tmpl",
		size: 268,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates11singlefilemodelstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x3f\x4b\x04\x31\x10\xc5\xfb\x7c\x8a\xc7\x22\x56\x6e\xb6\x3f\xb8\xca\xb3\xb0\xf0\xce\xe2\x3a\x11\x19\xdd\xb9\x35\xb8\xf9\x43\x12\x15\x19\xf2\xdd\x25\xd9\x05\x4f\xc1\x6e\x98\x37\xbf\x37\x6f\x12\x91\x1e\x23\x9f\x8c\x63\x74\xc9\xb8\x69\xe6\xfe\x64\x66\xee\xad\x1f\x79\x4e\x1d\xfa\x52\xd4\x30\xe0\xda\x8f\x8c\x89\x1d\x47\xca\x3c\xe2\xf9\x0b\x8e\xdf\xa3\x77\xc3\xda\xf3\x51\x63\x77\xc0\xfe\x70\xc4\xcd\xee\xf6\xa8\x2b\x73\x7c\x35\x09\xd5\x0c\x9f\x94\xce\x60\xca\x9b\x2a\x8b\x20\x1b\xcb\x29\x93\x0d\x28\x45\xa9\x40\x2f\x6f\x34\x31\x44\xf4\xfd\x52\xee\xc9\x72\x55\x44\x32\xdb\x30\x53\x66\x74\xc6\x06\x1f\x73\xea\xa0\xab\x32\x0c\xd8\xb7\x20\x4f\x77\x2d\x30\x52\xf6\x91\x13\x68\x9e\xcf\x36\x2e\xc7\xc0\x38\xe4\x9a\x69\x5d\xa4\xd5\x07\xc5\x3f\xf8\x16\x0f\x8f\x96\x42\x30\x6e\xd2\xad\x25\x0a\x00\x44\x22\xb9\x89\x71\xd1\x9c\xb0\xd9\x42\xaf\x40\x7d\x9f\x3a\x71\x29\xb2\x88\x7a\x09\x2d\xe5\x4a\x89\xb0\x1b\xdb\x44\x51\xff\x3b\x94\xf2\xeb\xbe\xa6\xf7\xed\x4b\x4c\x36\xde\x75\x2b\xd2\xc6\x7a\xb0\x1b\x7f\xaa\xea\xfd\x1d\x00\x00\xff\xff\xb0\x03\x5a\xd1\xc1\x01\x00\x00")

func bindataTemplates11singlefilemodelstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates11singlefilemodelstmpl,
		"templates/11_single-file-models.tmpl",
	)
}



func bindataTemplates11singlefilemodelstmpl() (*asset, error) {
	bytes, err := bindataTemplates11singlefilemodelstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/11_single-file-models.tmpl",
		size: 449,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1595458082, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates12singlefilecollectionstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x41\x4b\x03\x31\x10\x85\xef\xfb\x2b\x1e\x8b\x47\x37\x7b\x2f\xf4\xd4\x7a\xf0\xd2\x7a\x28\x5e\x44\x64\xba\x3b\x5d\x83\xd9\x64\x49\xa2\x22\x43\xfe\xbb\x24\x16\x36\x82\xe0\x6d\xc8\xbc\x6f\xde\xbc\x89\x48\x87\x91\x2f\xda\x32\xda\xa0\xed\x64\xb8\xbb\x68\xc3\xdd\xe0\x8c\xe1\x21\x6a\x67\x43\x8b\x2e\xa5\xa6\xef\xb1\x73\x23\x63\x62\xcb\x9e\x22\x8f\x38\x7f\xc1\xf2\xbb\x77\xb6\xbf\xbe\x39\xaf\xb0\x3f\xe2\x70\x3c\xe1\x6e\x7f\x7f\x52\x99\x39\xbd\xea\x80\x3c\x11\x9f\x14\x2a\x98\xe2\x26\xb7\x45\x10\xf5\xcc\x21\xd2\xbc\x20\xa5\xa6\x59\x68\x78\xa3\x89\x21\xa2\x1e\x7e\xca\x03\xcd\x9c\x3b\x22\x91\xe7\xc5\x50\x64\xb4\x7a\x5e\x9c\x8f\xa1\x85\xca\x9d\xbe\xc7\xa1\x2c\xf2\xb2\x5b\xb7\x46\x88\xce\x73\x00\x19\x53\xd9\x56\xb1\x54\xf3\x41\xfe\x2f\x70\x8b\xa7\xe7\xf1\xac\xd6\x27\x69\x44\x3c\xd9\x89\x71\xb3\xf2\xd8\x6c\xa1\x6a\x2c\x1f\x09\x00\x44\x2a\x55\xa5\x50\x8f\xe4\x35\x9d\xcd\x35\xd0\x6d\x23\xc2\x76\x2c\x58\x49\xf7\xbf\x43\x4a\xbf\x8e\xb0\x2a\xbb\xf2\x83\x3a\x97\x6d\x3d\xa1\x00\x1d\xd8\x8e\x6b\x55\x0c\xbf\x03\x00\x00\xff\xff\x5f\xe6\x2d\xa5\xf6\x01\x00\x00")

func bindataTemplates12singlefilecollectionstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates12singlefilecollectionstmpl,
		"templates/12_single-file-collections.tmpl",
	)
}



func bindataTemplates12singlefilecollectionstmpl() (*asset, error) {
	bytes, err := bindataTemplates12singlefilecollectionstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/12_single-file-collections.tmpl",
		size: 502,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1595849367, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates13collectiondefinitiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xca\xb1\x0a\x85\x30\x0c\x46\xe1\xbd\x4f\x11\xba\xf7\xbe\xd3\xb5\xfd\x85\x40\x6c\xa5\x26\x53\xc8\xbb\x8b\xe2\xe2\xe0\x76\x38\x7c\xee\x0d\x2b\x77\x50\xae\x43\x04\x55\x79\xf4\x72\x2f\xbe\x32\x53\x89\x48\xee\x8a\x6d\x97\xbf\xbe\xd9\xa1\xd3\xaa\xda\x44\xa6\x1f\x45\xa4\x2f\xb7\x18\x4b\xc3\x7c\x94\x7b\x21\xf4\x16\x71\x06\x00\x00\xff\xff\xd1\xbc\x4d\x93\x7b\x00\x00\x00")

func bindataTemplates13collectiondefinitiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates13collectiondefinitiontmpl,
		"templates/13_collection-definition.tmpl",
	)
}



func bindataTemplates13collectiondefinitiontmpl() (*asset, error) {
	bytes, err := bindataTemplates13collectiondefinitiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/13_collection-definition.tmpl",
		size: 123,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates14collectioninitializertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\x55\x48\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xce\xcf\xc9\x49\x4d\x2e\xc9\xcc\xcf\xd3\xcd\xcc\xcb\x2c\xc9\x4c\xcc\xc9\xac\x4a\x2d\x52\x52\xa8\xad\x55\x50\x50\x50\x88\x47\x48\x7b\x22\x64\x8b\x15\x6c\x15\x12\x0b\x0a\x52\xf3\x52\x34\x70\x28\xd0\x51\x40\x18\x56\x5d\xad\xe7\x0c\x57\xa4\x17\x96\x58\x94\x99\x98\x94\x93\xea\x97\x98\x9b\x5a\x5b\xab\xc9\x05\x72\x4b\x6a\x5e\x4a\x6d\x2d\x17\x20\x00\x00\xff\xff\x70\x57\x17\x2e\x96\x00\x00\x00")

func bindataTemplates14collectioninitializertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates14collectioninitializertmpl,
		"templates/14_collection-initializer.tmpl",
	)
}



func bindataTemplates14collectioninitializertmpl() (*asset, error) {
	bytes, err := bindataTemplates14collectioninitializertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/14_collection-initializer.tmpl",
		size: 150,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147826, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates15collectioninitializerfunctiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x50\xb1\x6e\xeb\x30\x0c\xdc\xf9\x15\xf7\x32\x25\x0f\x75\xb2\xb7\xf0\x14\x74\xe8\xd2\x1f\x28\x0a\xc3\xb0\xe9\x82\x80\x40\x05\xb4\x1c\xb4\x15\xf4\xef\x85\xdc\xd4\xd6\xd0\x64\x29\x07\x41\xe2\x1d\x4f\x77\x8c\xb1\xe7\x41\x94\xb1\xe9\xbc\x73\xdc\x05\xf1\x5a\x89\x4a\x90\xd6\xc9\x27\x5b\x35\x4c\x3a\x37\x37\xa8\x52\xa2\xf0\x71\x62\x34\x2b\xf5\x69\x65\x22\x33\xb7\x31\xca\x80\xfd\xe3\x7b\x60\xd3\xd6\x1d\xbd\x06\xcb\x64\x4b\xa9\xc3\xff\x6e\x79\xee\x57\x24\x46\xd6\x3e\xa5\x1d\xd8\xcc\x1b\xd1\xb9\xb5\x2b\x3f\x8c\x78\x79\xfd\x1d\x21\x3a\x1c\xf0\xcc\x93\x79\x6d\xd6\xf6\x71\xa1\x8e\xe8\x8a\xfb\xe0\x0d\x27\xf3\x67\xe9\xb9\x47\xe1\x89\x72\x82\x9b\x32\x7f\x89\xb7\x65\xb3\xef\x8c\x3b\x44\x02\x30\xfb\x68\xee\x50\x6c\x1b\xf7\x35\xac\xd5\xb7\x6b\x3b\x1e\x2f\x93\xb9\x64\xc8\x6a\xa8\xcb\xf9\x5b\xfe\x7e\x8c\x3c\xcc\x63\xff\x6a\xa8\xb8\x42\x2e\x97\x71\x98\x4c\x33\xbe\xb4\x13\xad\xe7\x05\x56\x71\x94\x28\xc6\x0a\xb3\xe0\x57\x00\x00\x00\xff\xff\xb5\xb5\x43\x14\x42\x02\x00\x00")

func bindataTemplates15collectioninitializerfunctiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates15collectioninitializerfunctiontmpl,
		"templates/15_collection-initializer-function.tmpl",
	)
}



func bindataTemplates15collectioninitializerfunctiontmpl() (*asset, error) {
	bytes, err := bindataTemplates15collectioninitializerfunctiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/15_collection-initializer-function.tmpl",
		size: 578,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"templates/00_imports.tmpl":                         bindataTemplates00importstmpl,
	"templates/01_initialize_collections.tmpl":          bindataTemplates01initializecollectionstmpl,
	"templates/02_collection.tmpl":                      bindataTemplates02collectiontmpl,
	"templates/03_collection-structure.tmpl":            bindataTemplates03collectionstructuretmpl,
	"templates/04_collection-builder.tmpl":              bindataTemplates04collectionbuildertmpl,
	"templates/05_model.tmpl":                           bindataTemplates05modeltmpl,
	"templates/06_primary.tmpl":                         bindataTemplates06primarytmpl,
	"templates/07_fielder.tmpl":                         bindataTemplates07fieldertmpl,
	"templates/08_single-relationer.tmpl":               bindataTemplates08singlerelationertmpl,
	"templates/09_multi-relationer.tmpl":                bindataTemplates09multirelationertmpl,
	"templates/10_model-definition.tmpl":                bindataTemplates10modeldefinitiontmpl,
	"templates/11_single-file-models.tmpl":              bindataTemplates11singlefilemodelstmpl,
	"templates/12_single-file-collections.tmpl":         bindataTemplates12singlefilecollectionstmpl,
	"templates/13_collection-definition.tmpl":           bindataTemplates13collectiondefinitiontmpl,
	"templates/14_collection-initializer.tmpl":          bindataTemplates14collectioninitializertmpl,
	"templates/15_collection-initializer-function.tmpl": bindataTemplates15collectioninitializerfunctiontmpl,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"templates": {Func: nil, Children: map[string]*bintree{
		"00_imports.tmpl": {Func: bindataTemplates00importstmpl, Children: map[string]*bintree{}},
		"01_initialize_collections.tmpl": {Func: bindataTemplates01initializecollectionstmpl, Children: map[string]*bintree{}},
		"02_collection.tmpl": {Func: bindataTemplates02collectiontmpl, Children: map[string]*bintree{}},
		"03_collection-structure.tmpl": {Func: bindataTemplates03collectionstructuretmpl, Children: map[string]*bintree{}},
		"04_collection-builder.tmpl": {Func: bindataTemplates04collectionbuildertmpl, Children: map[string]*bintree{}},
		"05_model.tmpl": {Func: bindataTemplates05modeltmpl, Children: map[string]*bintree{}},
		"06_primary.tmpl": {Func: bindataTemplates06primarytmpl, Children: map[string]*bintree{}},
		"07_fielder.tmpl": {Func: bindataTemplates07fieldertmpl, Children: map[string]*bintree{}},
		"08_single-relationer.tmpl": {Func: bindataTemplates08singlerelationertmpl, Children: map[string]*bintree{}},
		"09_multi-relationer.tmpl": {Func: bindataTemplates09multirelationertmpl, Children: map[string]*bintree{}},
		"10_model-definition.tmpl": {Func: bindataTemplates10modeldefinitiontmpl, Children: map[string]*bintree{}},
		"11_single-file-models.tmpl": {Func: bindataTemplates11singlefilemodelstmpl, Children: map[string]*bintree{}},
		"12_single-file-collections.tmpl": {Func: bindataTemplates12singlefilecollectionstmpl, Children: map[string]*bintree{}},
		"13_collection-definition.tmpl": {Func: bindataTemplates13collectiondefinitiontmpl, Children: map[string]*bintree{}},
		"14_collection-initializer.tmpl": {Func: bindataTemplates14collectioninitializertmpl, Children: map[string]*bintree{}},
		"15_collection-initializer-function.tmpl": {Func: bindataTemplates15collectioninitializerfunctiontmpl, Children: map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
