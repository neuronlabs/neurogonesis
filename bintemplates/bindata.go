// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/00_imports.tmpl
// templates/01_initialize_collections.tmpl
// templates/02_collection.tmpl
// templates/03_collection-structure.tmpl
// templates/04_collection-builder.tmpl
// templates/05_model.tmpl
// templates/06_primary.tmpl
// templates/07_fielder.tmpl
// templates/08_single-relationer.tmpl
// templates/09_multi-relationer.tmpl
// templates/10_model-definition.tmpl
// templates/11_single-file-models.tmpl
// templates/12_single-file-collections.tmpl
// templates/13_collection-definition.tmpl
// templates/14_collection-initializer.tmpl
// templates/15_collection-initializer-function.tmpl

package bintemplates


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataTemplates00importstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\xca\xcc\x2d\xc8\x2f\x2a\x29\x56\x52\xd0\xad\xad\xe5\xaa\xae\xd6\x55\xc8\x4c\x53\xd0\xf3\x84\x08\x82\xc5\x20\x0a\x14\x34\xb8\xaa\xab\x8b\x12\xf3\xd2\x53\x15\x54\xa0\x22\x56\xb6\x08\x85\xb5\xb5\x0a\x0a\x0a\x0a\x4a\xd5\xd5\x50\xc9\xda\x5a\x25\xae\xea\xea\xd4\xbc\x14\x90\x11\x9a\x60\x73\xa1\x1c\x18\xbb\xb6\x16\x10\x00\x00\xff\xff\x08\x20\xfd\xe4\x84\x00\x00\x00")

func bindataTemplates00importstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates00importstmpl,
		"templates/00_imports.tmpl",
	)
}



func bindataTemplates00importstmpl() (*asset, error) {
	bytes, err := bindataTemplates00importstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/00_imports.tmpl",
		size: 132,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates01initializecollectionstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xb1\x6e\xc3\x30\x0c\x44\x77\x7f\xc5\xc1\xbb\x95\xbd\x6b\xd3\x21\x4b\xd2\xc1\x7b\xc1\x5a\x74\x4a\x54\xa2\x0c\x89\x41\xd1\x0a\xfa\xf7\xc2\x76\x81\x14\xd9\x88\x77\x7c\xc0\x5d\xad\x9e\x67\x51\x46\x2f\x2a\x26\x14\xe4\x87\xdf\xa6\x14\x02\x4f\x26\x49\x4b\x8f\xa1\xb5\xee\x70\xc0\x73\xf2\x8c\x2b\x2b\x67\x32\xf6\x78\xff\x86\xf2\x2d\x27\x1d\xfe\x58\xca\x0e\xc7\x0b\xce\x97\x11\x2f\xc7\xd3\xe8\x56\x67\xfc\x90\x82\x59\x02\xe3\x8b\xca\x3f\x99\xec\x69\x8d\x6b\x85\x49\xe4\x62\x14\x17\xb4\xd6\x75\x0b\x4d\x9f\x74\x65\xd4\xea\x5e\xf7\xf3\x4c\x91\x5b\xeb\x6a\x95\x19\xee\x14\x97\x94\xad\x60\x03\xc6\x71\x09\x64\x6b\xf1\x1d\xf7\x70\x7b\xc2\xea\x1f\x3e\xee\x7b\x86\xfb\xca\x3c\xcc\x37\xdd\x60\x0f\xb7\x09\x60\xf5\x68\xed\x37\x00\x00\xff\xff\x89\xb2\x81\x5f\x13\x01\x00\x00")

func bindataTemplates01initializecollectionstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates01initializecollectionstmpl,
		"templates/01_initialize_collections.tmpl",
	)
}



func bindataTemplates01initializecollectionstmpl() (*asset, error) {
	bytes, err := bindataTemplates01initializecollectionstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/01_initialize_collections.tmpl",
		size: 275,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates02collectiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x31\x4e\xc4\x40\x0c\x45\xfb\x9c\xe2\x2b\x15\x14\xc9\xf6\xb4\x2c\x05\xcd\x2e\x45\x2e\x60\x12\x67\xb1\x98\xf1\x44\x13\xaf\x10\x58\x73\x77\x34\x04\x89\xb0\x9d\xe5\xf7\x9f\xa5\x6f\xf7\x89\x67\x51\x46\x3b\xa6\x10\x78\x34\x49\xda\xa2\x2b\xa5\x39\x1c\xf0\x98\x26\xc6\x85\x95\x33\x19\x4f\x78\xfd\x84\xf2\x35\x27\xed\x7e\x77\x29\xf7\x38\x9e\x71\x3a\x0f\x78\x3a\x3e\x0f\x7d\x75\x86\x37\x59\x31\x4b\x60\x7c\xd0\xba\x93\xc9\x1e\x2a\x76\x87\x49\xe4\xd5\x28\x2e\x28\xa5\x69\x16\x1a\xdf\xe9\xc2\x70\xef\x5f\xb6\xf1\x44\x91\x2b\x71\x37\x8e\x4b\x20\x63\xb4\x12\x97\x94\x6d\x6d\xd1\x57\x32\x5f\x75\x84\xa8\xd8\xdd\x3d\xfc\x5f\xee\xaf\x44\x57\xb9\x50\x90\x2f\xce\x9b\x76\x73\x72\x17\xfd\x79\x81\x6c\xd5\x6b\xd2\xbd\x03\xeb\x54\xca\x77\x00\x00\x00\xff\xff\x77\x40\xd0\x6d\x1e\x01\x00\x00")

func bindataTemplates02collectiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates02collectiontmpl,
		"templates/02_collection.tmpl",
	)
}



func bindataTemplates02collectiontmpl() (*asset, error) {
	bytes, err := bindataTemplates02collectiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/02_collection.tmpl",
		size: 286,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates03collectionstructuretmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x54\x4d\x6f\x1a\x31\x14\xbc\xfb\x57\x4c\x73\x48\x76\x11\x38\x3d\x23\xd1\x43\x68\x8f\xa9\xd4\x56\xea\x25\xca\xc1\x78\x1f\x89\x55\xaf\x97\x1a\x2f\x25\xb5\xfc\xdf\x2b\xdb\xbb\xb0\xac\x08\x6a\x55\xa9\xa7\x72\x30\xf2\xc7\x9b\x99\x37\x6f\xc0\xfb\x8a\xd6\xca\x10\xae\x64\xa3\x35\x49\xa7\x1a\x33\xdb\x3a\xdb\x4a\xd7\x5a\xba\xc2\x2c\x04\xc6\x6e\x6f\xe1\x3d\x5f\x1e\x1e\xf0\xaf\xc2\x2a\xb1\xd2\xf4\x51\xd4\x14\x02\xd4\x16\xee\x99\x70\x44\x40\xbb\xa5\x0a\xae\xc1\xf7\x96\xec\x4b\x2c\xbe\x6f\x2a\xd2\xbc\x7b\x5f\xa7\x0d\xdb\x09\x7b\x19\x77\x72\x7a\x9b\x4f\x19\x73\x2f\x1b\xc2\xb9\x2b\x64\xe1\xf0\x0c\x00\x12\x25\x26\xb5\xd8\x6c\x94\x79\xca\x0a\xbe\xa4\x07\x2c\x30\xb6\x6e\x8d\x84\x32\xca\x29\xa1\xd5\x4f\xba\xa4\xa3\xf0\x5e\xad\xc1\x3f\xec\x1d\x59\x23\xf4\xb2\x31\xce\xc6\xb7\x36\x04\x89\x89\x3c\x6c\xf9\xf1\xc6\x7b\x32\x55\x08\x25\xc8\xda\xc6\x76\x82\xea\xcc\x3e\x8d\x87\x98\x2f\x70\x01\xd6\x7b\xd2\x5b\x0a\x41\x8e\x11\x87\x6d\x14\xd7\x23\x63\x7d\x28\x13\x91\x5a\x27\x8a\x37\x0b\x18\xa5\x3b\xf2\xf8\xb1\xe4\x5a\x6b\xe2\x5d\x3a\x0a\x69\xf5\x1e\xaf\xb5\x8e\x10\xb0\xc0\xf5\x39\xab\x7d\xe2\x9d\xf7\x3d\x65\xa8\x0e\xdf\x28\xcd\x72\x6a\x3e\xa5\xf1\x4b\x4b\xc2\x51\xce\x48\x0e\xc4\xba\xb1\x69\x37\xd2\xcf\xf3\x54\x8a\x53\xc2\xcf\x24\x49\xed\xa2\x2d\xe7\x03\x51\x66\x9a\xa2\x5a\xa1\xb1\x35\x7f\x7f\x37\xcd\x01\xdb\x82\x73\x3e\x19\x51\x94\x63\x8c\x54\x7b\xd7\x2a\x5d\x25\x86\x6c\x56\x4c\x66\x52\x7a\x9f\x81\x1e\x1e\x4f\x52\xd4\x9b\xac\xc9\x14\x99\xaa\xc4\x3b\xbc\x1d\x38\x3d\x2c\x5e\xa0\x16\xdf\xa8\x18\x61\x4c\x87\xd5\xe5\xa1\x30\x3a\xa3\xba\x06\x62\x46\xac\x30\x4f\xd4\xf7\x73\xc4\x1f\x71\x3c\xa8\xc7\x48\x73\xd0\x76\x9c\x6e\x5e\x57\xb9\xbf\x08\x58\xad\x72\xcb\xaf\x9a\xdc\xcb\x1b\xb6\xc0\x39\x2f\x87\x13\xbe\xbe\xe4\xa1\xef\xd8\xe6\x3d\x6d\x18\xa6\x61\xe9\xf6\xbf\x1f\x08\xfc\x50\xee\x19\x1b\xdb\xec\x54\x45\x15\x6e\xa4\xdb\xdf\x20\xfe\x26\x68\xef\xfe\x2a\x2c\x4b\xb7\x2f\x64\x54\xd2\x61\x2d\xf3\xf7\x14\xff\x43\xf4\x27\x21\xea\x6c\x9c\xe2\xdf\x86\xc9\xfb\x19\xd2\xbf\xe1\xaf\x00\x00\x00\xff\xff\xb0\xd8\x98\xb0\xbe\x06\x00\x00")

func bindataTemplates03collectionstructuretmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates03collectionstructuretmpl,
		"templates/03_collection-structure.tmpl",
	)
}



func bindataTemplates03collectionstructuretmpl() (*asset, error) {
	bytes, err := bindataTemplates03collectionstructuretmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/03_collection-structure.tmpl",
		size: 1726,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates04collectionbuildertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x6f\xdb\x38\x12\x7f\xcf\xa7\x98\x0d\xb6\x27\x39\x70\x94\x1e\x70\xb8\x07\x03\x7e\x68\xd2\xdd\xa2\xc0\x6e\x7b\xd7\xf4\xf6\x1e\x82\x60\xc1\x88\x23\x87\x17\x99\xf4\x91\x54\x12\x43\xf0\x77\x3f\x70\x48\xfd\xb3\xe5\x7f\x71\x8a\x26\xb8\x3e\x14\x6d\x25\x6a\x66\xf8\x9b\x99\xdf\x0c\x87\x2e\x4b\x8e\x99\x90\x08\xc7\xa9\xca\x73\x4c\xad\x50\xf2\xf4\xa6\x10\x39\x47\x7d\x0c\xa7\x8b\xc5\x51\x59\xfe\xac\x0a\x0b\xa3\x31\x24\xf4\xff\xb3\x33\x28\xcb\xe4\xa2\x5e\x9d\xfc\xb3\x40\x3d\x3f\xf7\x9f\x2c\x16\x20\x0c\xd8\x5b\x84\xff\xba\xa7\x10\x24\x41\x61\x90\x83\x55\x90\x6a\x64\x16\x81\x49\x0e\xf8\x88\x69\x61\xd1\xc9\x73\x6b\x05\x1a\xc8\x94\xa6\x6f\xcb\x32\xf9\x5d\x71\xcc\x93\x4f\x6c\x8a\x8b\xc5\x94\xfe\x7d\x64\xe7\x33\xdc\xac\xda\x58\x5d\xa4\x16\xca\x23\x00\xa8\x55\x2b\x3d\x4d\xc2\x12\x7a\x8e\x5a\xbb\x3f\x4a\x1f\x2d\x8e\x9c\xf2\xcb\x54\xcd\x10\x34\xda\x42\x4b\x03\x13\x71\x8f\x32\x18\x6f\xdc\x9b\xe4\x28\x2b\x64\x0a\x71\x57\xf1\x17\x4c\x51\xdc\x93\xd2\x93\x4d\x26\x0d\xbc\xf8\x78\x00\x27\x24\x33\xf1\xda\xbc\x85\x5e\x27\x78\x80\xfb\xa5\x27\x61\x17\x49\x10\x13\x6c\xfe\x45\xeb\xda\x62\xda\x8b\xc3\x9c\x59\x50\x69\x5a\x68\x8d\x1c\x78\xa1\x85\x9c\xb4\x9d\xe0\xfe\x3b\xd3\x2a\x45\x63\x0e\xdd\xd2\x2f\x5a\xc7\x03\xaf\x37\xec\x44\x64\xb0\x4e\x58\xe2\xf0\xfe\x69\x0c\x52\xe4\x61\x71\x67\xeb\xeb\x3f\xa2\xb5\x8b\xbd\x81\x22\xe3\x02\x4c\x17\xf6\xb1\x86\xc9\xc5\x55\xaa\xa4\xc5\x47\x0b\x2a\xeb\xf8\xb9\xfa\xf4\x40\x58\x2e\xec\x63\x3c\xa8\x74\x24\x17\x41\xd7\xfe\xae\x26\x39\xd5\x0e\x54\x21\x6d\x67\x0f\xb2\x98\xde\xb8\xa8\xce\x80\xd2\x02\x84\x34\x96\xc9\x34\x64\xcf\x4c\xab\x7b\xc1\x91\xfb\x9d\x1d\xbc\x23\xa7\x3d\x1e\x40\x2c\xa4\xfd\xfb\xdf\x86\xde\xe5\x83\x03\x7d\xfe\x76\xf8\x2d\xdc\x1e\x4c\x0d\xb0\x7d\x94\x06\xb5\x05\x89\x0f\x10\x2d\x91\x49\x54\x23\x16\x9b\x01\x08\x69\x15\xc1\x6a\xac\xd2\x07\xe7\xba\x57\xfb\x72\x73\xa3\xb2\x2f\xa0\xf4\xaf\x19\x77\x64\x5c\xd0\x5f\x15\xf5\xad\xc7\xeb\x60\xde\xf0\xfa\x5e\x47\x3c\x55\xb6\x76\xa0\x7a\x97\xe7\x35\x5a\x2c\xcf\x7b\xb1\x0a\x44\x53\xcb\x7e\x16\xcc\xde\xe5\xf9\x6b\x82\x8d\xcc\x0d\xc8\xfd\x2a\x24\xaf\x09\xcc\x81\xb6\x84\x99\xa7\xb1\x50\xbf\xa6\xcc\xa6\xb7\x68\x5c\xa7\xd0\x22\xe8\x43\x31\x74\x26\x38\xf8\xae\xae\x4f\x96\x94\x3f\x13\x96\x52\xe4\x3b\xa3\x49\x3b\x22\x1b\x0c\x69\x77\x8d\xd5\x4e\xd0\xfa\x5d\x54\x76\x6e\x35\xa7\xab\x35\x80\x3c\x1a\xc3\x94\xdd\xa1\x47\x02\x5a\x50\x80\xc3\x22\x47\x19\xb7\xcc\x1b\x78\x65\xae\xac\x08\xf7\xa5\x66\x72\x82\x6d\xfb\x5b\x9a\xbd\xfc\x2b\x71\x0d\xe3\xf6\x8a\x2b\x71\x9d\xc4\xab\xaa\x06\xab\xd1\x35\x0d\x88\x48\x91\x87\xc0\xf9\x80\x4d\xe1\x33\x42\x4e\xf2\x95\xbe\x30\x54\xc0\x4e\xe4\x74\xc2\xc6\x55\x82\x8c\x12\x32\xd4\x4a\x03\x52\x59\xc8\x54\x21\x39\x3d\x76\x71\xe5\xf0\xee\x36\x53\xae\xb8\xa6\x39\x33\xc6\x47\xd2\x1f\x2c\x2f\xf0\x93\xfa\x82\xa6\xc8\xed\xa1\xb1\xf8\x01\xa9\xa0\xbe\x80\x40\x24\x48\xf6\x0b\x41\x32\xfe\x89\x11\xd8\xf6\x73\x6f\x4c\xb4\x7d\xff\x1e\x73\xb4\x08\x9c\xfe\x32\x2b\x7e\x6f\x7a\x9e\xf5\xbe\x3f\xcc\x4d\xde\x80\xd7\xc1\xb9\x95\xad\x1d\xec\x5c\xa9\xaa\xe0\xeb\x63\xdd\x06\xc2\x50\xb2\x34\xce\x94\x11\x56\x3d\x17\x76\xaf\xa6\x64\xb5\xcc\x75\x08\x86\xa2\x95\x5b\xd4\xc0\x38\xf7\x4d\x77\x94\xd1\x83\x08\x42\xb7\xf8\xac\xc5\xc9\x49\x8e\xbd\x82\xea\x94\xe8\x1f\xfe\x2a\x30\xe7\x81\x2c\x36\x48\x78\x1a\xa8\x5b\xba\xcc\x16\x98\x3b\x56\xa7\xd6\x36\x06\xbb\x3a\x21\x84\xec\xbf\x6f\x51\x63\x98\x0d\x98\x70\x28\x7b\x10\xf6\xb6\x6a\x49\x2b\xf4\x99\xe4\x10\xdd\x3b\x3a\x36\xd1\xa1\xb8\x93\xce\x0a\x76\x63\xdd\x71\x79\x08\x5e\x36\x24\x49\x22\xa4\x45\x9d\xb1\x14\xcb\xc5\xb7\xf2\xc0\x73\xbb\xa0\xbd\xa3\x6a\x2b\x49\x92\xec\xe5\x8c\xb2\xf4\x55\xfe\x67\x8d\x39\xa3\xca\x38\x1a\x57\x44\xfd\x25\x3c\x32\xb0\xa8\x4e\x59\x69\x5e\x70\x2c\xcb\x7a\x75\x45\xe6\x20\xfc\xab\xfa\x50\x51\x2d\xa8\x3b\xe4\x55\x43\x02\x31\x35\xa5\xfb\x9d\x04\x35\x73\xaf\x58\xde\x08\xa0\x9c\x30\x68\x23\xf0\x73\x2b\x9f\x9f\x19\x3d\x75\xd9\x19\xf6\x19\xb4\x04\x33\x5c\x03\x1a\x0c\xac\xa3\x66\x3d\x0e\x2e\x72\x96\xdf\xae\x9e\xf4\x7a\xb7\xbe\x58\xc4\x65\x69\xd5\x6f\xea\x01\xf5\x05\x9b\x62\x0e\xcb\xef\x2b\xfb\x5d\x8c\xf9\xa8\xf3\xe1\xb5\x4d\x61\x2b\xc4\x36\x84\xc2\xe6\x30\xdb\xe0\xfa\x36\x75\x7a\x7b\x37\x74\x06\x7f\x30\x2d\xd8\x4d\x8e\x7e\x47\x4b\xd1\x71\x3e\xff\x28\x39\x3e\xc6\x6d\x68\xe8\x49\xd5\xf6\xad\x6b\x1d\xb6\x6e\x6c\x0c\x61\xd6\x95\x7c\xc2\x87\x2c\x9e\xb2\xd9\x4c\xc8\x49\x72\xe1\x3a\xb5\x8f\x2e\x5d\x25\xcb\x87\x70\xfc\x01\xad\x15\x72\xe2\x0e\x67\xcb\xe0\x47\x70\x33\x07\xe1\x8c\xa1\xae\xd6\x37\x85\x51\x50\xdc\x3d\xc8\x65\x4c\xe4\xc8\x47\xf0\xe6\xfe\x98\x90\x18\x3c\x11\xce\xb3\x33\x48\x6f\x31\xbd\x6b\x85\x29\xda\x7a\xd0\xd9\x84\xa5\x5b\x7b\xcf\x34\x74\xe3\x1c\xae\xae\x4f\xaa\x7d\x5e\xd2\x70\x93\x9e\xd7\x7d\xf9\x9f\x43\x2f\xb3\x69\xcf\x77\x0d\xbf\x06\x77\xd3\xc8\x1d\x82\xba\x23\x51\xd5\x47\x84\x89\x57\x1c\x0f\x12\x5a\x73\x3e\x77\x92\x62\x52\xdb\x80\x22\x32\xf8\x49\xdd\xb5\xa4\xee\xe8\xd1\x0d\x0e\xbd\x67\xb9\xe0\x64\x40\xb0\xed\x98\x74\x8e\x20\x7a\x63\xa2\x6e\x2b\x5f\xc1\xd9\x71\xf9\x39\x33\xf8\x75\x3e\x23\x6f\x92\xa7\x8f\x03\x58\x83\x8e\x91\xbb\xba\xb3\x71\x69\x3b\x4b\x82\x9b\xc6\xc0\x66\x33\x94\x3c\xee\x3e\x1f\xb6\xc1\x1d\xec\xcb\xe7\x81\x63\xe2\x26\x23\xbb\xd2\xf7\xe4\xf6\xb2\x3c\x05\x94\x3c\x70\xf7\x6f\x62\x2a\x2c\x18\xb4\x9e\x40\xa7\xec\x51\x4c\x8b\x69\x6b\xba\xa8\x6e\xfe\x83\xa9\x35\x41\x38\x72\x97\x3a\x6e\x25\x9d\xe7\xc3\x20\x79\xe8\x24\x7d\xe9\x1c\x9d\x44\xd6\x6a\x90\x68\x80\x0e\xb7\xcc\xb5\xa0\x1a\x19\x9f\x03\x17\x59\x86\x1a\xa5\x05\x9a\xe6\xab\x0c\x66\x6c\x22\x24\x7b\x8e\x51\x09\x6d\x29\xce\x69\x63\xd4\x76\xbe\x96\xc2\xdd\x32\x7c\xdf\xce\xe9\x73\x96\xb9\x6c\xae\xfd\xe8\x7b\x27\x4d\x47\xd5\xc8\x80\xa2\xd7\x09\x7c\xb4\x60\xd8\x9c\x0a\xa4\xb9\x13\x33\x60\x06\xa6\x4c\xce\x83\x93\x23\x03\x99\x56\xd3\xa5\x63\x80\x13\x7f\x83\x99\xd2\x08\x37\x38\x11\x52\x3a\x52\x6d\x2a\xac\x5f\x4c\x47\x62\x88\xbc\x19\x11\xbc\xad\x6e\x7f\x8c\xeb\x03\x98\x01\x35\x15\x9e\x8d\x29\x3d\xab\x65\x69\xce\x0a\x83\xc9\x8b\x8a\x1e\x6f\x5b\xec\x11\x7b\x5d\xf1\xd3\x31\x7d\xdf\x08\xba\x44\xf7\xaa\x39\xea\x34\xad\x14\xf9\xd1\xf9\xc0\xc5\x47\xa8\x1b\xbe\x31\xcb\x73\xf5\x80\xbc\xb5\xd4\x90\x90\x91\x7b\x09\xa7\xcd\x59\xf3\x1f\x5a\x4c\x99\x9e\x57\xad\xdd\x59\xcf\x1b\x2c\xb4\x92\xfe\x7d\xd3\x7c\xd6\x35\x2d\xac\x0e\x2c\x1b\x6e\x1f\x49\x83\x5f\xd3\x96\x5c\x3d\xe9\x4a\x44\xc9\xe9\xbb\x03\x2f\xf1\x68\x7f\x71\xd8\xf0\x52\xeb\xf6\x5d\x03\xc4\xf5\x0c\x64\xd6\x25\xda\xfd\xbb\x85\xb0\xa1\x8d\xcd\x40\xd7\x88\xde\xde\x6f\xff\xc6\xe0\x9b\x36\x05\xb4\xa8\xe9\xf0\x46\x34\xa7\x5f\x39\x69\x44\xc7\xc3\x4d\xed\xc0\xce\xad\x40\x8d\x7e\xdd\x04\x54\x4f\x0e\x2b\xff\xed\x98\xbb\x44\xbb\xef\x49\xce\x15\x07\xcd\x51\x9f\xcf\x9b\xdc\x36\x4a\xdb\xca\xe7\x74\xf3\xd5\xbe\xe7\x86\xf3\xb9\x3b\x53\xb1\x22\x0f\x6b\x1c\x9c\xca\x89\x40\x0e\xcc\xa4\x28\xb9\x73\x04\x7c\x94\xfe\x29\xe5\xbd\x13\xc8\xb1\x7a\xe9\x94\x32\xce\x21\x3a\x8d\xaa\xd2\x51\x53\x0a\x48\x57\x12\x44\x82\x09\x44\xa7\x82\x47\x09\x7c\xbd\xc5\x20\x49\x65\x6d\xea\xa1\x2e\x07\x1b\x0a\x12\x13\x29\x32\x91\x32\x99\x62\xb5\xd2\xe9\x75\x55\x85\x3e\x5f\xc7\x49\x4a\x6f\x63\xa4\x9d\x18\xa7\x2c\x45\x16\x16\x24\x97\x4a\x5b\x17\xfd\xeb\xa9\xa8\xa1\x9c\xe7\xe2\x9e\xe0\xc5\x97\x4a\x3e\x0e\xe6\xe6\xb0\x12\x7e\xe4\x50\x3d\xdb\x87\x7a\x44\x46\x17\x10\x3e\x27\x61\x3c\x86\xb7\x4f\x65\x8d\xed\xa4\x91\x32\xe9\x88\x82\x5a\xa7\x76\x28\x91\xad\x4c\x02\x4e\x67\x76\x1e\x2c\xde\xce\x23\x87\x32\x88\x83\xd1\xab\x6f\xe0\x23\xaf\xb7\xb1\x21\x63\xae\xde\x5e\x3b\x64\x5c\x7e\x75\xb1\xf1\x9f\x87\xbb\x97\xe4\x7d\x9d\x91\x5d\x31\x35\x5d\xc1\x38\xc8\xfb\xeb\xe8\xba\xc7\xa0\xff\xaf\x2a\xb0\xf1\x54\xb8\xb3\x13\x5b\x79\x50\x17\x82\xe6\xd9\x10\xfe\xb2\x94\x1a\x65\xab\x42\x8f\xba\x88\x93\xd3\x46\xde\xa7\x8b\x6e\xdd\xd8\xd6\x09\x06\xae\x68\x14\xaf\x96\x8d\x0d\x07\xc4\x5d\x66\x7f\x9e\x12\x4f\x9b\x55\x34\xf2\x1b\x8d\x21\xde\x30\x78\x18\x2c\x7f\xe4\x8b\x9b\xa2\x01\x53\x3c\xd3\x42\xda\x0c\x8e\xff\x7c\x63\x8e\xbb\x72\x07\xd5\xa8\xf1\x1d\xe7\xab\xe3\x1c\x5f\xd8\x7c\xb9\xe0\x61\x9a\xd3\xb7\x4a\xf2\xd5\x8b\xe5\x9e\xa1\xcf\x73\xcd\x06\x7b\x6d\x6d\xcf\xc3\xaa\xcd\x2f\x16\xe0\x8b\x4b\x33\x28\x33\x97\xb9\x48\x9d\x2d\x49\x42\xf5\x63\xb1\x38\xe9\x9f\x69\xf4\xfc\xc6\xe4\x1b\xcc\x05\x57\xae\x55\xbe\xd3\x6c\x30\x98\xba\xcb\xf8\x6f\xb2\x69\xfc\x57\x47\xf6\x81\x73\xc0\x2a\x1d\x45\x46\x54\xb3\xe2\x40\xca\x92\x5d\x31\xae\x92\xf7\x1d\xe7\x75\x9a\xb5\x86\x3e\xbd\x81\x33\x08\x06\x9c\x02\xe6\xa6\x51\xb7\x72\xcd\x5f\xa1\xf4\xbb\xbf\xec\x75\x05\xb6\x5f\x5e\xef\x5d\xff\x9a\x98\xed\xbd\xf5\xef\x5d\x7b\x25\xae\x9f\x78\x2b\xb7\x06\x0c\xaf\xb1\x26\xb5\x66\xa6\xd5\x9e\x6f\xed\x4c\x64\xee\x93\xb3\x13\xf8\xfa\xf9\xfd\xe7\x51\x18\xd3\x86\x09\x44\xfd\xa5\xa0\xeb\x53\x6a\x2d\xad\x82\x1b\x04\x9a\xa7\x9c\x9c\x7d\x27\x1e\xbc\x44\xdb\xc3\x70\x34\xfe\x79\x71\x3c\xd8\x6b\xeb\x0f\x1e\xfc\xc1\x83\x5b\x0f\xbe\xf6\x07\x0f\x6e\x01\xe3\x7b\xf0\xa0\x9f\xc1\x7a\x16\xd4\x38\x55\xf7\xc8\x0f\x63\x42\x3f\xff\x75\x82\x7a\xd8\xca\x6b\x78\x81\xb4\xb6\xce\xe2\x8d\xbf\x76\x79\x22\x27\xd1\x2f\x5e\x5e\x0d\x2d\xbd\x1d\xbe\x34\x66\xda\x27\xd3\xbc\x5f\x57\x93\x6d\xb0\x94\x53\xe1\x5f\xff\x0b\x00\x00\xff\xff\xe7\xca\x0a\x33\x39\x33\x00\x00")

func bindataTemplates04collectionbuildertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates04collectionbuildertmpl,
		"templates/04_collection-builder.tmpl",
	)
}



func bindataTemplates04collectionbuildertmpl() (*asset, error) {
	bytes, err := bindataTemplates04collectionbuildertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/04_collection-builder.tmpl",
		size: 13113,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1594908457, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates05modeltmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\xbd\xae\xc2\x30\x0c\x46\xf7\x3c\xc5\xa7\xec\x4d\xf7\xbb\xde\x32\xb0\xb4\x0c\x7d\x01\x43\xdc\x12\xd1\xfc\x28\x09\x42\x28\xca\xbb\xa3\x14\x06\x24\x36\xcb\xc7\x47\xf2\x29\xa5\x83\xe6\xc5\x38\x86\xb4\x5e\xf3\x26\xd1\xd5\x2a\xfa\x1e\xff\x5e\x33\x56\x76\x1c\x29\xb3\xc6\xf9\x09\xc7\xf7\xe8\x5d\xff\xd9\xf9\xa8\x30\x4c\x18\xa7\x19\x87\xe1\x38\xab\xe6\xcc\x57\x93\xb0\x98\x8d\xf1\xa0\xf4\x25\x53\xfe\x6b\xb8\x14\x64\x63\x39\x65\xb2\x01\xb5\x0a\x11\xe8\x72\xa3\x95\x51\x8a\x3a\xbd\xc7\x91\x2c\x37\xd2\x4e\xd9\x86\x8d\x32\x43\x1a\x1b\x7c\xcc\x49\x42\xe1\x87\xed\x4f\x77\x7b\x82\xc9\xc6\x3b\x09\x55\xab\x68\x59\xec\x74\x6b\x79\x05\x00\x00\xff\xff\xbd\x60\xb8\xfa\xe2\x00\x00\x00")

func bindataTemplates05modeltmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates05modeltmpl,
		"templates/05_model.tmpl",
	)
}



func bindataTemplates05modeltmpl() (*asset, error) {
	bytes, err := bindataTemplates05modeltmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/05_model.tmpl",
		size: 226,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates06primarytmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\xdb\x6e\xdc\x36\x13\xbe\xdf\xa7\x98\x5f\x48\x62\x29\x58\x2b\x7f\x6e\x1d\xf8\x22\x49\xdb\xd4\x28\x12\x04\xb1\xdb\x02\x2d\x8a\x82\x96\x46\x5e\xc2\x12\xa5\x92\xdc\x75\x16\x82\xde\xbd\xe0\x41\x07\xea\xbc\x49\x8d\xc4\x57\x5e\x91\xf3\xcd\x37\x47\x0e\x59\x96\x31\x26\x94\x21\x78\x05\xa7\x19\xe1\x47\x0f\xce\xab\x6a\x53\x96\xe7\xf0\x24\xdf\x4b\xb8\xb8\x84\x50\x7f\x79\xf1\x02\xde\xe6\x59\x41\x53\x04\x49\x33\x84\x68\x87\xd1\x3d\xd0\x04\xca\x32\xfc\x40\x32\xac\x2a\xa0\x59\x91\x62\x86\x4c\x0a\xc8\x48\x51\x50\x76\x17\xbe\xcf\x63\x4c\x81\x32\x89\x3c\x21\x11\x86\x9b\x03\xe1\xf0\x77\x6f\xf9\x12\x9e\x35\x20\x65\xb5\x51\xaa\x3e\xe0\x9e\xe7\xec\x6d\x9e\xa6\x18\x49\x9a\x33\xb5\xb8\x02\x1f\x32\x94\xbb\x3c\x0e\x15\xc4\x27\x94\x7b\xce\x04\xc8\x1d\x02\x53\xe2\x79\xa2\xff\x8f\x1a\x50\x48\x72\xae\x3f\x9d\x35\xea\xcf\xc2\x4d\xb2\x67\x11\xf8\x65\x19\x7e\xc2\x08\xe9\x01\x79\x55\xc1\xf3\x66\x43\x30\x4a\xcd\x0f\x40\x48\x4e\xd9\x1d\x94\x1b\x00\x00\xae\x75\x83\x57\x96\xa1\xbb\xb1\xaa\xbc\x8d\xb1\xf0\x4a\x7c\x34\x0e\xff\x05\x8f\x7f\x20\xcf\x4f\xb1\x6e\x89\x62\x1f\xdb\x0f\xe0\x36\xcf\x53\x97\x5c\x59\x86\x76\x57\x78\x25\xd4\xae\xaa\xb2\xd4\xde\xa1\x6c\xe5\x7f\x23\xe9\xfe\x24\xd7\x2f\x91\x1b\xa2\xfb\x41\x0b\x53\x56\x03\x96\x2d\x4e\xd8\xe1\x6c\xe0\xc6\x18\x5f\xeb\x48\x3c\x2e\xef\x8e\x0e\x3f\x00\xdf\x04\x7f\x0b\xc8\x79\xce\x03\x6b\x41\x59\xd2\x04\x1a\xbe\x46\xe2\x1d\x4a\x89\x5c\x17\x94\x63\xa4\x4d\x1f\xe4\xe0\x0b\x54\xf9\x92\x73\x68\x88\x80\x63\x74\x30\x8e\x59\x55\x5b\x60\x34\xb5\x9a\xcf\x01\x53\x81\xd0\x25\x70\x25\x6e\xf0\xb3\x7c\x4f\xb8\xd8\x91\xb4\xc3\x81\xc6\x9a\xb7\xaa\xf4\x05\x67\x87\x56\x58\xe1\xf8\x81\x11\x4e\xb4\xec\xff\x2e\x95\x6e\x6b\x77\xb7\x00\x3c\xeb\x13\x11\x7e\xc0\x87\xc4\xaf\x63\xf0\x36\x25\x42\xfc\x44\x31\x8d\xb5\x0b\xb7\xe0\x51\x76\x20\x29\x8d\xc1\x76\x21\x48\xd4\x22\x1c\xd4\xea\x05\x3c\x3d\x80\xcc\xa1\x20\x5c\xa0\x75\x54\x08\x3f\x72\xae\x16\xbc\xed\x12\x6b\xcd\xc0\xb0\x75\x9c\x6e\x80\x7c\x1a\x07\x8b\x8e\x33\x7e\x1e\x46\x6d\xde\x5b\x46\xca\x1f\x83\xef\x21\xb9\x6e\x72\xbd\xa4\xd3\xf5\x07\xd5\xa3\xa9\x6a\x22\x5b\xf0\x32\x9d\xc0\x9d\x9e\x05\x3b\x22\xa0\xef\xc0\x7b\xac\x9d\x28\x8f\x05\x0e\xfc\xe7\x05\x2d\x23\x16\x8f\x17\xd2\xeb\x38\xe6\x28\xc4\xa3\x15\x91\xc5\x9f\x2b\xff\x67\x5f\x50\xff\x3f\x13\xb1\x23\xb7\x29\x3e\x6e\x07\x70\xb4\x8c\x9a\xe0\xd6\xff\x95\xf8\x98\xeb\x3d\x6d\xe1\x25\x4b\x29\x04\x97\x13\x75\xb5\xe4\x95\x36\xd9\xcb\x12\x59\xdc\xa8\xec\x53\x7a\x73\x94\x78\x9d\xd2\x68\x90\x91\xb6\x38\x26\x4c\xa8\xaa\xe7\x1a\xb7\xaa\x16\x88\xd4\x49\x36\x96\xf4\x5f\x8b\xdd\x33\x6f\x24\x11\xd4\xa1\xf6\xb8\x49\xd0\x68\x98\x3f\xc2\x54\x97\xfc\xa7\xb5\x55\x1f\xf7\x1e\xa3\xa9\xa7\x8c\x9c\xf0\x82\xdf\x7a\xa1\x5e\xbd\x39\x16\x38\x23\x11\x58\x89\x11\xc9\x77\x28\xcd\x09\x3f\xcb\xa5\x06\xb0\xbe\xbc\xee\x5a\xfa\x5f\xba\xf0\x7a\x38\x01\x1c\x4c\x98\x5a\x17\x06\xa6\x21\xae\x2f\x25\x83\x30\x28\x98\xc5\x0a\x6b\x9a\x73\x27\x62\xf5\xa7\xb1\x12\x52\xaa\xb6\x90\xdf\xab\xf3\x52\xeb\x0c\xfd\x41\x88\x82\x57\x6a\xc3\x29\x24\x0e\x53\x14\xb4\xe5\x84\xc5\xe0\xb3\x5c\x3a\x67\x92\x2a\xdb\x60\xce\x29\x55\x73\x94\xcd\x10\x7e\x43\x04\x7e\x29\xe9\x67\x33\xac\xad\xcb\xca\x92\x13\x76\x87\xf0\xe4\x81\x93\xa2\xc0\x58\xdf\x27\x6a\xa0\xdf\xcd\x37\xa5\x5e\xac\x62\x5d\xa3\x8c\x91\x9d\x4f\x10\xf5\x27\x31\x2b\xcc\x94\x23\x74\xcb\x73\x82\x06\x2f\xab\xca\x3f\x04\x1d\x40\x75\xfd\x59\xf4\x80\xc2\xec\xc8\x38\x7d\x6e\x3d\xcc\x68\x3c\x5c\x36\x6e\x17\xef\xfe\xea\x74\xf6\x14\xc1\x4f\x91\xb5\x96\xbd\x4e\x25\x72\x46\xa4\x86\x14\x01\xbc\xec\x60\x9c\x83\x69\x05\x6b\x25\xd4\x05\x50\xdf\xf9\x48\xbd\x45\x4f\x16\x42\xdf\xa2\xee\xe8\x01\x99\x99\x37\xc2\xe9\x32\xa1\x2c\xc6\xcf\x53\xba\xe0\xff\x13\x61\xd5\x1e\x3c\x2d\xb4\x8e\xc8\xda\xf0\x3a\x42\x93\x21\xee\x4d\x70\xa7\x81\xf5\xbe\x8f\x05\xba\x9e\xc7\xd6\xb5\xa4\xde\x1d\x23\x22\x8c\xf5\x5c\xb3\x76\x58\x8d\x08\x33\x5d\x78\xf4\xcc\xee\x20\xad\x9b\xe7\x0b\x9e\x1f\x68\x8c\x71\x33\x97\xda\x51\xfe\xec\xe9\xcd\x59\x73\xef\x76\x87\x7d\xf5\x55\xcf\xb6\x66\x97\xb7\x6d\x34\x1f\x0c\xa8\x63\x43\x73\x58\x8d\x86\xe5\xb4\x64\x15\x0f\x54\x46\x3b\xa3\x46\x67\x4b\x9b\xb4\x4a\xaa\xbd\xd0\xd9\x66\xd6\x82\x76\xdb\x59\x2f\x9d\x6b\x2a\x11\x11\xa8\x02\xdf\x08\x55\xd5\xc5\x57\x24\xb8\xb3\xb9\xdb\x2d\x6a\xf2\xdf\x6b\x92\x8f\xf1\xeb\x26\x7b\x93\xd3\x31\x26\x64\x9f\xca\x8b\x6f\x92\x78\xed\xad\xca\xdb\x42\xa7\x1e\x9c\xd1\x95\xd1\x74\x66\x54\x7a\xa4\xf7\x87\x29\x1d\x76\x76\x32\x13\xfb\xdc\xd8\x64\x64\xae\xdd\x17\x08\x99\x15\x9d\xeb\xbf\x45\xf9\xa8\x6e\x8a\x1c\x3c\x8d\xec\x4d\x20\xb4\xf3\xd0\xdc\x0b\x00\x72\xde\x3f\xa5\x7c\x75\x8a\x5b\x15\x6e\x93\x1e\x55\x14\x74\xce\xac\x13\x0e\x52\x9b\x76\x32\x2b\x82\xf1\x16\xb1\x8c\x26\x6d\x4d\xb8\x79\x3a\x18\x75\x26\xdf\x5a\x7e\x65\xd9\xf0\xb5\x25\x59\xfb\xd8\xd2\x48\xeb\xe7\x96\x3f\xff\xba\x3d\x4a\x1b\xeb\x20\x78\xb5\xe4\xf3\xef\xf2\xc5\x65\xcc\x65\x6a\xb4\x1d\xbe\xb4\x4c\x0c\xbb\xbd\xe1\x65\xa6\x67\xae\x19\x5e\x95\xa5\xb3\xf4\xd6\x83\xcd\x63\x4d\x1f\x53\x83\x80\x7d\xa3\xb7\x1f\xdb\xcd\xfe\x0d\x00\x00\xff\xff\xb8\x35\x6e\x1c\x0d\x18\x00\x00")

func bindataTemplates06primarytmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates06primarytmpl,
		"templates/06_primary.tmpl",
	)
}



func bindataTemplates06primarytmpl() (*asset, error) {
	bytes, err := bindataTemplates06primarytmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/06_primary.tmpl",
		size: 6157,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1594933119, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates07fieldertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xdd\x6e\xdb\x3a\x12\xbe\xcf\x53\xcc\x1a\x69\x2c\x05\x8e\xd2\xde\xba\xc8\x02\x6d\xb7\xdb\x2d\x16\xfd\xc1\x3a\xbb\x0b\x6c\x10\x14\x8a\x35\x8e\x89\xca\x94\x4b\x32\x6a\xb3\x82\xde\xfd\x80\xa4\x7e\x49\xca\x92\xd3\xf8\xd8\x3d\x27\xbe\x8b\x48\xce\x0c\x67\xbe\xf9\x66\x28\x2a\x59\x16\xe1\x82\x50\x84\xd1\x82\x60\x1c\x21\x1b\xc1\x59\x9e\x1f\x65\xd9\x19\x1c\x27\x77\x02\xa6\x17\x10\xa8\x27\xe7\xe7\xf0\x26\x59\xad\x49\x8c\x20\xc8\x0a\x61\xbe\xc4\xf9\x57\x20\x0b\xc8\xb2\xe0\x63\xb8\xc2\x3c\x07\xb2\x5a\xc7\xb8\x42\x2a\x38\xac\xc2\xf5\x9a\xd0\xdb\xe0\xef\x5a\x28\x10\x2a\x90\x2d\xc2\x39\x06\x47\x69\xc8\xe0\x8b\x35\xe1\x02\x4e\x2a\x41\x59\x7e\x24\xd5\xbd\x43\xa1\x46\xf9\xab\x28\x62\xc8\x39\xdc\xa2\xe0\x20\x96\x08\x61\xf1\x20\x59\xc0\x9a\x25\x29\x89\x30\x82\xb1\xb2\x7f\x1c\x1c\x2d\xee\xe8\x1c\xbc\x2c\x0b\xfe\x85\x73\x24\x29\xb2\x3c\x87\xd3\x4a\xb6\x6f\x89\xf5\xd4\x42\x38\x2d\x2d\x9a\x09\x76\x37\xd7\x53\x7c\xf0\x2a\xc3\xb3\x7c\x02\xc8\x58\xc2\x7c\xc8\x8e\x00\x80\x7f\x27\x62\xbe\x04\xb5\x38\x78\x4f\x23\xfc\x71\xf5\xfc\x5a\x0f\x41\x96\xb1\x90\xde\x22\x1c\x6b\xd1\xd2\x87\x5a\xa5\xf2\xa4\x9c\x31\x0f\x39\x42\x96\x1d\x37\x96\xe7\xf9\x14\xce\xcf\xeb\x87\xda\x5e\x35\x5b\xfe\x18\x8a\x3b\x46\xa5\x97\x64\x5c\x1a\x9b\x0b\x8c\x15\x13\xa0\x24\x2e\xcc\x40\x1a\x49\x95\x5a\x4a\x21\x81\x92\xb8\xd8\x09\x0f\x3e\xe2\xf7\x85\x57\x6e\xfc\x4d\x1c\x72\xfe\x9e\xa6\x61\x4c\xa2\x0f\x49\x84\xb1\xb2\x79\x02\xa3\xca\xc7\x44\x0f\xea\x4d\x4f\x61\xfc\x8c\x8f\x61\x91\x30\xb8\x25\x29\x52\x58\xc9\x35\xd3\x1a\x0f\xe3\xd1\x04\x6a\xc3\x3c\xdf\x3f\x6a\xc7\xf5\x7f\xc8\x92\xff\x84\xf1\x1d\x0e\x03\x0e\x1f\x1c\xd9\x4a\xf0\x03\x43\xbb\xaf\xd8\x66\x19\x59\x00\x7e\x2b\x44\x07\x72\x1b\x30\xa2\x24\x1e\xe5\xb9\x1a\x2a\x25\xf2\xcf\x89\xb2\x3d\xcf\x3d\x15\x62\x39\x5c\x8c\x5d\xde\xaf\xb1\x73\xb6\x5f\xcc\xb6\x56\x49\x4d\xc5\x2a\xb7\xfa\x72\xa5\x03\x5b\xea\xaf\x08\x17\xe1\x5d\x2c\xa6\xe6\x8e\x1e\x0b\x6b\x40\xc3\x15\x6a\xc0\x59\xa0\x92\xea\xf2\x02\x5a\xef\x79\x05\x80\x81\x6c\xd4\x87\xa9\x86\xc4\xcd\x68\xba\x49\x92\xf8\x50\x60\x54\x85\x5e\x07\xb6\x8f\x11\x16\x61\xcc\x71\xe7\x71\xd2\x11\x9a\xed\x2a\xf9\x2d\xc1\x1b\xc3\xa5\xf6\xba\xa7\x30\xf5\x32\x38\x5c\x80\x91\x9a\x5b\xa4\xdc\xef\x92\x6d\xed\x14\xaf\x79\xfd\x1f\x21\x5f\x86\x37\x31\x2a\xf9\x5b\x84\x77\x08\xb5\xdb\xb2\x7f\x15\x7a\x77\xd2\x71\x25\x4f\xfe\x54\x1b\xd5\x8b\x8a\x0b\xe9\xec\xc2\x4e\x3b\xe7\x87\x76\x05\x75\x04\x6d\x50\xd9\xd6\xbe\xbe\x17\x38\x8b\xc9\x1c\x5b\x73\x1a\x9a\xb9\x60\x84\xde\x7a\x1d\x25\xe7\xb4\x2e\x35\x9b\xed\xf3\xdb\x06\xca\xfe\x13\x63\xde\xa9\xf5\x67\xd5\x39\xb4\xc9\x75\x7b\x6c\x9b\xc6\x83\xfb\xa6\x47\xce\xab\x5f\x2f\x9f\xb6\xc7\xfc\x81\x76\xc2\xb3\x1d\x44\x74\x36\x30\xa2\x13\x48\xb5\xd6\x3a\xac\x3e\x78\xc8\xd8\x01\x70\x65\xc2\x6c\xba\xf4\x42\x1a\xd5\x4f\x35\x25\x79\x34\x11\xe5\xb3\x57\x8c\x85\xf7\x33\xf2\x7f\xf4\x7d\x93\x5a\xf5\x46\x9d\xf4\x39\xa4\x16\x37\x99\xc2\x28\x7c\x43\xf8\x54\x1a\x30\x81\xe4\xab\xf4\x8f\xb2\x24\xf0\x8c\x76\xdd\x7f\x29\x87\xb7\x37\x2c\xed\x35\x4b\x79\x53\x3a\xae\xe9\xa9\xc2\x7b\xbe\xed\xe3\x86\xd5\xf2\xb8\x5f\x9e\xf0\x89\x00\xc2\x81\x26\xf4\x6c\x5d\x4c\xd4\xfb\x18\xb4\xc5\xd7\x21\xc7\x9f\xdb\xe6\xc9\x90\x7d\xd6\xf4\x0d\x56\x0d\xb3\xeb\x17\x59\xc0\x2d\x52\x64\x64\x6e\x98\x7d\x75\xdd\xcc\x07\xa7\xc1\x64\x01\x2e\xd8\x59\x95\x4a\xd2\xc1\x97\x09\x10\x81\x2b\xa9\x40\xa7\x4a\xa1\xd5\x12\xda\x51\xed\xc8\x02\x62\xa4\x5e\xb1\xca\x87\xbf\xd6\x79\x53\x29\xce\x73\x43\x1a\x0c\x68\x06\x6b\x8a\x68\xb2\x9a\x48\x12\x58\x85\xf4\x5e\x7b\x83\xab\x2d\x88\x25\x56\x2c\x67\xc4\x66\xe4\xb7\xf4\xda\xdb\x27\x5b\x6c\xbf\x15\x3f\x17\xb0\xa4\xa4\xc1\xb8\xda\x3e\x5c\xf5\x8a\x7e\x44\x86\xeb\x35\xd2\xc8\x1b\x50\x80\x52\xbf\x43\x49\x47\xc0\x07\x5b\x71\x45\xae\x2d\x06\xe8\xf7\xa7\xfc\xcd\x13\x2a\x08\xbd\x43\x6b\xd0\x9e\x9e\x65\xc7\x61\x2c\x90\xd1\x50\x28\x5f\x73\x19\x07\xaf\x7a\xc4\xc1\x88\x85\xef\xdc\x4f\x15\x03\x0f\xbf\x81\x17\x23\x05\xcf\x10\xeb\xfb\xf0\x7c\xc3\xda\x72\x99\xb9\x0a\x5e\x38\xd7\x54\xd4\x55\x4d\x07\xa1\x8c\x2f\xe1\x6c\xb8\x32\x18\x04\x3b\x22\x8b\x97\x69\x02\x3c\x1f\x00\xbf\x8a\x87\xde\xc6\xb8\x72\x75\xff\xcd\x9f\xc0\xd5\x5a\xaa\xb5\x70\x2e\x55\x79\x9d\x70\xda\x2f\xca\x4f\xa4\xd5\x3b\x44\xfa\x85\xd6\xf0\x00\xb0\x0f\x50\xbf\x57\xd7\x39\xe8\xcc\x4b\xfd\x9d\xba\xd2\xad\xf2\xa1\xbe\x7d\x0c\x9a\x79\x58\xb1\x6a\xbf\xb2\x90\x19\x2e\xfb\xf0\xcb\xb1\x59\xb5\x9e\xf1\x51\xd1\xeb\xba\xde\x65\x0c\x76\x70\xd1\x08\xa7\x35\x27\x08\xc5\x78\x76\xe2\x57\x6d\x71\x8b\x2b\xe4\x3a\x93\x3d\x5c\x7a\xca\x96\xb9\x35\x35\xcf\xa7\xbb\xe6\x97\x27\x76\xe9\x54\xf0\xc4\x2e\xc3\x5d\xf9\xf8\xec\xd2\x8d\xf1\xae\xec\x39\x1d\x9a\x3e\x9b\x92\xe1\xf4\x29\x1b\xba\x63\xe2\xa6\xce\x8e\x91\xe2\x40\x6c\xbd\xb0\x6e\xfe\x0e\xa5\x04\xe4\x0d\xd8\xd9\xfb\x71\xbe\x8a\x34\x0e\xa2\xa6\x1f\x9a\xf0\xfd\x2f\x93\x71\x8e\x6c\xf2\x2f\x5b\x56\x8c\xe0\xbb\x9e\xa3\x5b\xd6\xa0\x21\xa6\x28\x2a\xe5\xb8\x2c\x27\x3d\x52\xdd\xc7\xf2\x42\x40\xd7\x79\xbc\xef\x55\x35\xb4\xf2\x86\xab\xa3\x75\xe3\x6d\x06\xbc\xb0\x13\x7e\xd0\x21\xdf\x02\x5d\x96\x39\xb1\xbc\xd5\xed\x49\x37\x09\xd9\xef\x69\xba\x43\x6a\x06\xd4\xf9\xc6\xbc\x75\xc0\x29\xb9\xc1\x38\xaf\x18\x87\x9c\xf6\xe1\xc6\xbd\xe4\x85\x13\x27\xdb\x1f\x6d\x9c\x58\x28\xce\x34\x2e\xcd\x5d\x27\x9b\x83\x02\x48\x07\xdd\x6d\x05\x91\x2e\x78\xb8\xf8\x6c\xe3\x9b\xbf\x7d\x53\x98\xd3\x1d\xcd\xae\xb5\x08\xbb\xd9\xb6\x6e\x68\x57\x9d\xc0\x68\x8a\x1f\xd4\xac\x6e\x0b\x99\x01\xb9\x7b\xb0\x70\x71\xef\xd5\xf4\x58\x6f\x83\xb2\x4d\x63\xb2\xbd\x37\x5c\x45\x6a\x53\x91\xde\x37\xb2\xad\x1c\xeb\xbe\xbb\x2b\x9f\x9c\x9f\xc2\xe5\xa7\xbf\x7d\x9a\x02\x47\xa1\x94\xf1\x79\x48\x29\x32\x08\x79\x99\x13\xd2\x22\x15\x8e\xd3\x73\x83\x95\x37\xde\x3c\xee\x37\xbf\xed\x4b\x4a\xf5\xd7\x0e\x3f\x06\x68\x5c\x6e\x49\x73\xeb\xdb\x4a\x85\xba\xae\xfb\x2d\x68\x7c\x94\x33\x43\xf1\x99\x91\x55\xc8\xee\xff\x89\xf7\x33\x75\x5d\xdc\x79\xe1\xa5\x0c\xaa\xef\xa4\x60\x85\x62\x99\x44\xfd\xb7\x5e\x9f\x43\xc6\xf5\x97\x01\xbc\xa1\x61\xc0\xf5\x97\xbe\xbe\x3e\xa8\xeb\xcd\x26\x87\xe8\xcd\xcc\x50\x98\x94\x59\xdd\x81\x16\x3b\x50\x0e\x60\x30\x52\xbb\x1a\xb9\x96\x1b\x19\xa2\x30\x5e\xdc\x0e\x55\x84\x75\x89\x3f\xc4\xbf\xe9\x2a\x64\x7c\x19\xc6\xc8\xda\x03\x1f\xaa\xc7\x67\x86\xac\x3e\x7e\x4f\x43\x06\x37\x2d\x3f\xd4\x7c\x76\x64\x72\xde\x89\x9c\xb9\xb9\xaa\x35\xe8\x71\x33\xf5\x6d\x60\x09\xd9\x7a\x31\xa6\xa5\x74\xd8\x2f\xd5\x34\xf5\xf7\xaa\xab\xb4\x04\x95\x13\xa5\xe3\xbc\xab\xeb\x9b\x7b\x81\x9e\x8a\x8d\xef\xbf\x54\x8a\xff\xb2\xe1\x6b\x8e\xd1\x68\xc3\xbd\x74\x8b\x67\xda\xf4\x62\x5e\xd0\x8c\x35\xc8\x65\x0a\xa7\x63\x10\x09\xac\x25\x4a\x0a\xc4\x04\xf0\x96\xb1\x29\x3c\x4b\x47\x93\x21\x57\xe9\xc8\x98\x8b\x91\x6f\xc4\x64\x97\x7e\xfc\xd0\xf0\xa2\x6f\xc6\xee\x0f\xe2\x42\xf3\x8d\x82\x3b\x87\x86\x94\xf9\x9e\x2a\xdf\xfe\x62\xe7\x46\xf8\x13\xe7\x27\x37\x03\x49\x41\x73\xcb\x3b\x9b\x9a\x9e\x18\xe1\x4f\xcd\x08\xfd\xed\x7e\x55\xbb\xb4\x5a\x59\xb6\xa4\x63\x3b\xaa\xd6\x80\x0f\xc3\x78\xa3\xa9\xd0\xa7\xce\x52\xb0\xc7\x31\xc6\xb9\x48\x18\xb4\xb6\x03\x8d\xad\xf8\xbd\xc5\x72\xcb\xc4\x6b\xa5\x59\x11\x96\xfe\x8e\xb5\x4c\xbd\xfa\xab\x05\xb5\xde\xe5\xb8\xb4\x43\xa6\xe9\x16\x27\x76\x1c\xd0\xf9\x98\x08\xdd\x3e\x4c\x8a\xff\x02\x71\xc0\x26\x4a\x90\xd3\xb1\x80\x65\x98\x96\x70\x91\xbd\xb5\x40\x16\x8c\x7a\x7b\xd4\xc3\xf9\xea\xaa\x32\xf0\xb7\x00\x00\x00\xff\xff\x52\xcb\xe2\x5b\xf8\x32\x00\x00")

func bindataTemplates07fieldertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates07fieldertmpl,
		"templates/07_fielder.tmpl",
	)
}



func bindataTemplates07fieldertmpl() (*asset, error) {
	bytes, err := bindataTemplates07fieldertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/07_fielder.tmpl",
		size: 13048,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1594939570, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates08singlerelationertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x51\x6b\xdb\x30\x10\x7e\xcf\xaf\x38\x42\xd6\xc4\xc1\x71\xf6\x9c\x91\x97\x05\x36\x02\x5b\x19\x4d\xd9\xcb\x18\x43\xd8\xe7\x54\x54\x96\x8c\x24\x3b\x1b\x42\xff\x7d\x48\xb6\x95\xd8\xc9\xda\xac\xac\x30\x3f\xb5\xa7\xd3\xf7\xdd\x7d\xf7\xe9\x62\x4c\x86\x39\xe5\x08\x63\x45\xf9\x9e\xe1\x42\x22\x23\x9a\x0a\x8e\x72\x0c\x0b\x6b\x47\xc6\x2c\x60\x22\x2a\x0d\xab\x35\x24\x3e\xb2\x5c\xc2\x46\x14\x25\x65\x08\x9a\x16\x08\xe9\x03\xa6\x8f\x40\x73\x30\x26\xb9\x25\x05\x5a\x0b\xb4\x28\x19\x16\xc8\xb5\x82\x82\x94\x25\xe5\xfb\x64\xe7\xe1\xef\x02\x3a\x50\xae\x51\xe6\x24\xc5\x64\x54\x13\x09\x3f\xfe\x9c\xb9\x86\x9b\x00\x6d\xec\xc8\x15\xf0\x11\x75\x97\xf0\x59\x64\xc8\xfe\x96\x31\xaf\x78\x0a\x33\x63\x92\x3b\x4c\x91\xd6\x28\xad\x85\x79\x20\x89\xce\xf0\x67\x9d\x2c\x30\x0f\xf0\x5a\x56\xa9\xfe\x40\x91\x65\x11\xcc\xba\xa8\xcf\x8e\x01\xa5\x14\x32\x02\x33\x02\x00\x50\x07\xaa\xd3\x07\xe8\x20\x92\x2d\xcf\xf0\xe7\xb7\xb7\xdf\xdb\x63\x63\x24\xe1\x7b\x84\x49\xe0\x70\x52\x77\xf4\xca\x69\x6e\x0c\xcd\x81\x0b\x7d\xcc\x49\xb6\x6a\xc7\x68\x8a\x7e\x22\x0e\x25\x25\x0a\xc1\x98\x49\x9f\xc5\xda\x15\x2c\x97\xbd\x78\xd3\xa2\xbf\xe3\x3e\x89\xba\x92\x1c\x2e\x32\x7c\x11\x5e\x32\xc7\x71\x63\x0c\xf2\xcc\x55\xe2\xcc\x70\x22\x5b\x72\x8e\x1d\x03\xa7\xac\x6d\x0d\x79\xd6\x34\xd0\xfe\xe1\xc3\x19\xe6\xa4\x62\x7a\x35\x2c\x82\xd3\x4e\x3a\x95\xdc\xe2\x21\x0f\xaa\x6e\x18\x51\x6a\xcb\x6b\xc2\x68\xd6\x09\xe3\x95\x8f\x61\x5c\x4a\x51\xd3\x0c\x33\xa0\xcd\x79\xd0\x79\x05\xd3\x37\x6a\x0a\xb9\x90\x50\xb8\xa9\xb8\xff\xef\xa7\xe3\x38\x24\xc4\xd0\x33\x40\xe4\xcb\xb1\xa3\xc6\x61\xbb\x57\x76\xd8\x10\xff\x69\x87\xc5\x4d\x0b\xd0\xb3\x59\xd4\x68\xf5\xcf\x5c\xd6\xe6\xbd\x9a\xd5\x68\xde\x76\xb1\x5e\xbb\x51\xb7\x85\x75\xdf\x73\x0e\x1c\x24\x3f\x6f\x43\x58\xf7\x8a\x79\x4f\x14\xde\xff\x2a\x9b\x1d\xd2\xc7\x42\xa6\xf0\xa5\x14\x9d\xd5\x4f\xd0\x4e\x9c\x7e\x6e\xf0\x10\xb6\xe0\x69\xfd\xde\x3c\xf6\xec\x70\xdd\x64\x66\x5a\x7c\x12\x07\x94\x1b\x52\x20\x83\x3e\x6f\xd4\xbc\xa8\xc1\x25\xf7\xee\xc4\xa3\xbb\xeb\x45\x4e\x66\xf3\xcb\xdd\x47\xef\x5c\xda\x50\xfb\x2b\xe5\x7c\x7a\x44\xf3\xe3\x92\x38\x2d\xed\x0a\x2d\x86\x9b\xe0\xda\x25\xf0\x95\xb0\x0a\x2f\x2d\x81\xc6\x68\xb5\x3b\x6e\xde\xbd\xdf\x03\xc1\xfb\xe7\xed\x8d\xdb\x27\x16\xbd\x64\x71\xfd\x07\x3b\xcb\xfd\x4e\x7b\xf1\x7f\x07\x00\x00\xff\xff\x0c\x06\xaf\xb9\xd2\x07\x00\x00")

func bindataTemplates08singlerelationertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates08singlerelationertmpl,
		"templates/08_single-relationer.tmpl",
	)
}



func bindataTemplates08singlerelationertmpl() (*asset, error) {
	bytes, err := bindataTemplates08singlerelationertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/08_single-relationer.tmpl",
		size: 2002,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates09multirelationertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\x5d\x6b\xe3\x38\x14\x7d\xf7\xaf\xb8\x1b\xba\x89\x1d\x1c\xa7\xfb\x1a\xc8\x42\xb7\xec\x0c\x85\xb6\x0c\x6d\x99\x97\x10\x8a\xc7\xbe\x6e\x45\x65\xc9\xc8\x4a\x3a\x45\xe8\xbf\x0f\xb2\x64\x27\xce\x47\x93\x86\x14\xda\x61\xfa\xd4\x58\xd6\xb9\xe7\x1e\xdd\x73\x2c\xa5\x52\xcc\x08\x43\xe8\xe4\x33\x2a\xc9\x40\x20\x8d\x25\xe1\x0c\x45\x07\x06\x5a\x7b\x4a\x0d\xe0\x84\xcf\x24\x8c\xc6\x10\x55\x4f\x86\x43\x38\xe7\x79\x41\x28\x82\x24\x39\x42\xf2\x88\xc9\x13\x64\x5c\x80\x7c\x44\xc8\xe3\xa2\x20\xec\x21\xba\x32\x68\x37\x0d\x18\x10\x26\x51\x64\x71\x82\x40\xf2\x82\x62\x8e\x4c\x56\x4b\x91\x37\x8f\x05\xdc\x6f\xdd\x37\x86\xae\x52\xd1\x75\x9c\xa3\xd6\x4a\x7b\xa6\xfa\x59\x9a\xd6\x2f\x5c\xf1\x14\xe9\x02\xb1\xdc\x5d\x3e\xf2\xb2\x19\x4b\xc0\x57\x2a\xba\xc1\x04\xc9\x1c\x85\xd6\xd0\x6f\x6a\x04\x6b\xf0\x7e\x2d\x09\xf4\x6b\xf4\x5b\x29\x66\x89\xfc\x42\x90\xa6\x21\xe4\x15\x87\xa6\xb0\xf9\x15\x00\x0a\xc1\x05\x28\x0f\x00\xa0\x7c\x26\x32\x79\x84\x1a\x26\xba\x60\x29\xfe\x9c\x9c\x4e\xdd\xb2\x52\x22\x66\x0f\x08\x27\x4d\x1d\x23\x75\x4d\xa1\x34\x9a\x2b\x45\xb2\xc5\x7a\x74\x51\xde\x52\x92\x60\x75\x1a\x06\x21\x89\x4b\x04\xa5\x4e\xda\x15\xb4\x1e\xc1\x70\xd8\x7a\x6e\x5b\xac\xf6\xd8\xca\x0b\x50\xb3\x64\x0a\xfb\x92\x5f\xf2\x67\x14\xe7\x71\x8e\x74\xa9\xe6\x7f\x71\x89\x77\x2f\x05\x06\x96\x4f\x6b\x9f\xd6\x21\xf0\x27\xb3\xbb\xd2\x22\xf2\xfb\xcb\x45\xeb\x9d\x5a\x07\x4d\x65\x92\xc1\x5f\xfc\xc9\x09\x50\xff\x09\x94\x33\xc1\xac\x74\x65\x74\x8d\xcf\x99\x5f\xab\x7a\x4e\xe3\xb2\xbc\x60\xf3\x98\x92\xe6\x70\xbe\xc7\x74\x86\x21\x74\x0a\xc1\xe7\x24\xc5\x14\x88\x5d\x87\xb9\x59\x00\xf9\x52\xe0\x08\x7a\x7f\xdf\xf5\xa0\x19\xce\xcc\x9c\xd8\x08\x7a\xeb\x9a\xf4\x3a\xee\x20\x17\x1c\x97\x75\x5a\x91\xff\x1b\xaf\xe6\xa9\x39\x00\xd7\x92\x52\xc6\x29\x4b\x73\x15\xad\x17\x82\xf1\x18\x18\xa1\x2b\xad\x4b\xcc\x0b\xa3\xdf\xf2\xfb\x56\x33\xa5\x5b\x2f\xee\x57\x02\xba\x06\x70\x63\x27\x80\x2c\x6d\xf1\xde\xda\x9c\xd6\x7d\xa5\x90\xa5\xd5\x71\xef\x53\x34\x2e\x0a\x64\xa9\xbf\x0d\xf0\x6d\x78\xa1\x25\xc6\xb8\x6c\x61\xfd\x4f\x31\xdf\x84\xd7\x1e\xc7\xc0\x19\xcb\xf5\xda\xfc\x53\x3d\x4e\x31\x8b\x67\x54\x8e\xbc\x03\xe7\xce\xd9\x7e\x7d\xee\x6a\x0e\x6e\xea\x9a\x44\xac\xf2\xa1\xd7\x24\xcc\xca\xa8\x59\x52\x8e\x03\x23\xd4\xb3\x21\xf7\x15\x65\x2b\x85\xca\x23\xa7\xdc\x1a\xfe\xeb\x31\x17\x80\x9f\x5b\x1a\x93\x69\x2b\xea\x42\xa3\x9b\xd5\x2e\xf8\xf8\x79\xb7\x02\xbb\x34\x4d\x2d\x4f\x98\xa3\xbb\xaf\x93\x7d\x34\x06\x4b\x78\x2f\x1b\xb4\x7d\xed\x34\x6b\xbc\x61\x7f\xbf\x1a\x35\x03\x40\x5a\xe2\x1a\x1d\xf2\x2e\x3c\xba\xfe\x3e\x60\x13\x32\x0d\xb6\x92\x35\x06\x3c\xc4\x6e\x8c\xd8\xd9\x39\x9e\xe7\x4a\xeb\xb9\xaa\x37\xeb\xc1\x4e\xd8\xbc\x60\xf2\x64\xa9\xcb\x0d\xde\xab\x35\xd9\xee\xc1\x33\xf9\xce\x26\x3c\x93\xbb\x2e\x1b\xc4\x4c\xba\x29\xb1\x30\xe4\xef\x63\xc7\xa3\x7f\x56\x0f\x19\xb5\x8a\x7c\x08\x1d\xab\xb4\xb9\xf9\xf2\x0c\x0a\x5e\x96\xe4\x07\x45\xeb\xc0\x08\xae\xdc\x8c\x39\x6a\x2e\xd8\x43\xa8\x4e\x69\x43\xcf\x9d\xcd\xf6\x59\xfd\x16\x93\xcc\x1d\xf0\xbf\x40\x91\x1d\xe9\x4b\x1a\xc0\x00\xfe\xf9\x54\xc2\x38\x76\xbb\x2f\x00\xdd\x46\x86\x6d\x42\xf9\x6f\x51\x6a\x3b\x4c\xe0\x50\x26\x55\xf3\x53\x1b\x12\x9f\x23\xf4\x56\xda\x7e\x6b\xf0\x5d\x22\x7b\xbf\xd0\xbb\x44\xb6\xf3\xda\x41\x98\x0c\xff\x04\x5a\x7b\x8c\x4e\x17\x03\xb8\x2b\x52\xdc\x8e\x23\xc6\xc9\xc1\xc3\x7f\xfa\x01\xbe\xf7\xda\x73\xad\xfe\x0a\x00\x00\xff\xff\x98\xbf\x73\xcd\xf8\x10\x00\x00")

func bindataTemplates09multirelationertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates09multirelationertmpl,
		"templates/09_multi-relationer.tmpl",
	)
}



func bindataTemplates09multirelationertmpl() (*asset, error) {
	bytes, err := bindataTemplates09multirelationertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/09_multi-relationer.tmpl",
		size: 4344,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates10modeldefinitiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x31\x0e\xc2\x30\x0c\x45\x77\x4e\xf1\x95\xdd\x3d\x06\x1b\x0b\x9c\x20\x52\x7e\x90\x25\x27\xad\x42\x18\x50\xd4\xbb\xa3\x06\x94\x01\xd1\x6e\xb6\xff\xfb\xcf\xad\x09\x02\xa3\x66\xc2\xa5\x39\xd0\xa4\x6f\x5a\x75\xce\x0e\xb2\xae\xa7\xd6\x50\x99\x16\xf3\x95\x70\x4b\xd1\xe4\xcb\xcb\x61\x42\x8f\x34\x62\x3a\x2b\x2d\xb0\xe0\x97\x8d\x9f\xfb\x60\x05\xcc\x61\xb4\x6e\x9a\xef\xc6\x2b\xcd\x6f\xaf\xfe\xd4\x1f\x1d\x90\x32\x88\x1d\xd1\xe5\x69\x55\x0f\x3c\x69\xcb\x8f\x35\xdf\xe9\x1d\x00\x00\xff\xff\xdd\x47\x50\x16\x0c\x01\x00\x00")

func bindataTemplates10modeldefinitiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates10modeldefinitiontmpl,
		"templates/10_model-definition.tmpl",
	)
}



func bindataTemplates10modeldefinitiontmpl() (*asset, error) {
	bytes, err := bindataTemplates10modeldefinitiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/10_model-definition.tmpl",
		size: 268,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates11singlefilemodelstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\xb1\x4e\x04\x21\x18\x84\xfb\x7d\x8a\x09\xb1\x85\xed\x2f\xb1\xf2\x2c\x2c\xbc\xb3\xd8\x17\x40\x99\x5b\x89\x0b\x6c\x00\x63\xcc\x1f\xde\xdd\x80\x97\xdc\x75\x13\x3e\xbe\x3f\x33\x22\x1a\x8e\x17\x1f\x09\x55\x7c\x5c\x37\xea\x8b\xdf\xa8\x43\x72\xdc\x8a\x82\x6e\x6d\x9a\x67\x3c\x25\x47\xac\x8c\xcc\xb6\xd2\xe1\xfd\x17\x91\xdf\x39\xc5\xf9\xfa\x96\xb2\xc1\xf1\x8c\xd3\x79\xc1\xf3\xf1\x65\x31\xdd\x59\x3e\x7d\x41\x3f\x86\x1f\x5b\xee\x64\x5b\x0f\x1d\x8b\xa0\xfa\xc0\x52\x6d\xd8\xd1\xda\x34\xed\xf6\xe3\xcb\xae\x84\x88\x79\xfb\x8f\x27\x1b\xd8\x89\x48\x65\xd8\x37\x5b\x09\xe5\xc3\x9e\x72\x2d\x0a\xa6\xb5\x49\x24\xdb\xb8\x12\x0f\xa3\x2e\x0e\x8f\x30\xaf\xa3\x38\x06\xbc\x59\x83\xeb\x31\xd4\x57\x9f\xa2\xba\x2a\xe3\x9b\x06\xa3\xbb\xa5\xbe\xf9\x2f\x00\x00\xff\xff\xd9\x1d\x25\x08\x17\x01\x00\x00")

func bindataTemplates11singlefilemodelstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates11singlefilemodelstmpl,
		"templates/11_single-file-models.tmpl",
	)
}



func bindataTemplates11singlefilemodelstmpl() (*asset, error) {
	bytes, err := bindataTemplates11singlefilemodelstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/11_single-file-models.tmpl",
		size: 279,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates12singlefilecollectionstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\xb1\x6a\xf4\x30\x10\x84\x7b\x3f\xc5\x20\xfe\xe2\x4f\x21\x5d\x7f\x90\xea\x2e\x45\x9a\xbb\x14\x7e\x01\xc5\x5e\x3b\x4b\x64\xc9\x48\x3a\x42\xb2\xe8\xdd\x83\xec\x03\xbb\x09\x04\xd2\x2d\x3b\x9a\x4f\xb3\x8c\x88\x46\x4f\x03\x7b\x82\x4a\xec\x47\x47\x7a\x60\x47\xba\x0b\xce\x51\x97\x39\xf8\xa4\xa0\x4b\x69\x0e\x07\x9c\x42\x4f\x18\xc9\x53\xb4\x99\x7a\xbc\x7e\xc2\xd3\x2d\x06\x7f\xb8\xef\x42\x34\x38\x5f\x71\xb9\xb6\x78\x3a\x3f\xb7\xa6\x7a\xda\x37\x4e\xa8\x44\x7c\xd8\xb4\x33\xdb\x7c\xac\xb2\x08\x32\x4f\x94\xb2\x9d\x66\x94\xd2\x34\xb3\xed\xde\xed\x48\x10\x31\x2f\xeb\x78\xb1\x13\x55\x45\x24\xd3\x34\x3b\x9b\x09\x8a\xa7\x39\xc4\x9c\x14\x4c\x55\x86\x9b\xef\xc0\x9e\xf3\xff\x07\x48\x23\x12\xad\x1f\x09\xff\xb6\x13\x70\x7c\x84\x39\x6d\x17\xd5\x9f\xf6\xb8\xed\xa5\xae\x18\xb6\x8e\xbf\x28\xaa\x3d\x62\x71\x68\x90\xef\x4b\x69\x7e\xe3\xd6\x35\x55\x5d\x2a\x18\xac\xf9\xff\x92\x6b\xe9\x88\x57\xde\x4f\xb1\xee\xd3\x52\xd7\x77\x00\x00\x00\xff\xff\x4c\xb2\xbc\xf2\xd8\x01\x00\x00")

func bindataTemplates12singlefilecollectionstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates12singlefilecollectionstmpl,
		"templates/12_single-file-collections.tmpl",
	)
}



func bindataTemplates12singlefilecollectionstmpl() (*asset, error) {
	bytes, err := bindataTemplates12singlefilecollectionstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/12_single-file-collections.tmpl",
		size: 472,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates13collectiondefinitiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xca\xb1\x0a\x85\x30\x0c\x46\xe1\xbd\x4f\x11\xba\xf7\xbe\xd3\xb5\xfd\x85\x40\x6c\xa5\x26\x53\xc8\xbb\x8b\xe2\xe2\xe0\x76\x38\x7c\xee\x0d\x2b\x77\x50\xae\x43\x04\x55\x79\xf4\x72\x2f\xbe\x32\x53\x89\x48\xee\x8a\x6d\x97\xbf\xbe\xd9\xa1\xd3\xaa\xda\x44\xa6\x1f\x45\xa4\x2f\xb7\x18\x4b\xc3\x7c\x94\x7b\x21\xf4\x16\x71\x06\x00\x00\xff\xff\xd1\xbc\x4d\x93\x7b\x00\x00\x00")

func bindataTemplates13collectiondefinitiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates13collectiondefinitiontmpl,
		"templates/13_collection-definition.tmpl",
	)
}



func bindataTemplates13collectiondefinitiontmpl() (*asset, error) {
	bytes, err := bindataTemplates13collectiondefinitiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/13_collection-definition.tmpl",
		size: 123,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates14collectioninitializertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\x55\x48\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xce\xcf\xc9\x49\x4d\x2e\xc9\xcc\xcf\xd3\xcd\xcc\xcb\x2c\xc9\x4c\xcc\xc9\xac\x4a\x2d\x52\x52\xa8\xad\x55\x50\x50\x50\x88\x47\x48\x7b\x22\x64\x8b\x15\x6c\x15\x12\x0b\x0a\x52\xf3\x52\x34\x70\x28\xd0\x51\x40\x18\x56\x5d\xad\xe7\x0c\x57\xa4\x17\x96\x58\x94\x99\x98\x94\x93\xea\x97\x98\x9b\x5a\x5b\xab\xc9\x05\x72\x4b\x6a\x5e\x4a\x6d\x2d\x17\x20\x00\x00\xff\xff\x70\x57\x17\x2e\x96\x00\x00\x00")

func bindataTemplates14collectioninitializertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates14collectioninitializertmpl,
		"templates/14_collection-initializer.tmpl",
	)
}



func bindataTemplates14collectioninitializertmpl() (*asset, error) {
	bytes, err := bindataTemplates14collectioninitializertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/14_collection-initializer.tmpl",
		size: 150,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147826, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates15collectioninitializerfunctiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x50\xb1\x6e\xeb\x30\x0c\xdc\xf9\x15\xf7\x32\x25\x0f\x75\xb2\xb7\xf0\x14\x74\xe8\xd2\x1f\x28\x0a\xc3\xb0\xe9\x82\x80\x40\x05\xb4\x1c\xb4\x15\xf4\xef\x85\xdc\xd4\xd6\xd0\x64\x29\x07\x41\xe2\x1d\x4f\x77\x8c\xb1\xe7\x41\x94\xb1\xe9\xbc\x73\xdc\x05\xf1\x5a\x89\x4a\x90\xd6\xc9\x27\x5b\x35\x4c\x3a\x37\x37\xa8\x52\xa2\xf0\x71\x62\x34\x2b\xf5\x69\x65\x22\x33\xb7\x31\xca\x80\xfd\xe3\x7b\x60\xd3\xd6\x1d\xbd\x06\xcb\x64\x4b\xa9\xc3\xff\x6e\x79\xee\x57\x24\x46\xd6\x3e\xa5\x1d\xd8\xcc\x1b\xd1\xb9\xb5\x2b\x3f\x8c\x78\x79\xfd\x1d\x21\x3a\x1c\xf0\xcc\x93\x79\x6d\xd6\xf6\x71\xa1\x8e\xe8\x8a\xfb\xe0\x0d\x27\xf3\x67\xe9\xb9\x47\xe1\x89\x72\x82\x9b\x32\x7f\x89\xb7\x65\xb3\xef\x8c\x3b\x44\x02\x30\xfb\x68\xee\x50\x6c\x1b\xf7\x35\xac\xd5\xb7\x6b\x3b\x1e\x2f\x93\xb9\x64\xc8\x6a\xa8\xcb\xf9\x5b\xfe\x7e\x8c\x3c\xcc\x63\xff\x6a\xa8\xb8\x42\x2e\x97\x71\x98\x4c\x33\xbe\xb4\x13\xad\xe7\x05\x56\x71\x94\x28\xc6\x0a\xb3\xe0\x57\x00\x00\x00\xff\xff\xb5\xb5\x43\x14\x42\x02\x00\x00")

func bindataTemplates15collectioninitializerfunctiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates15collectioninitializerfunctiontmpl,
		"templates/15_collection-initializer-function.tmpl",
	)
}



func bindataTemplates15collectioninitializerfunctiontmpl() (*asset, error) {
	bytes, err := bindataTemplates15collectioninitializerfunctiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/15_collection-initializer-function.tmpl",
		size: 578,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1591147825, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"templates/00_imports.tmpl":                         bindataTemplates00importstmpl,
	"templates/01_initialize_collections.tmpl":          bindataTemplates01initializecollectionstmpl,
	"templates/02_collection.tmpl":                      bindataTemplates02collectiontmpl,
	"templates/03_collection-structure.tmpl":            bindataTemplates03collectionstructuretmpl,
	"templates/04_collection-builder.tmpl":              bindataTemplates04collectionbuildertmpl,
	"templates/05_model.tmpl":                           bindataTemplates05modeltmpl,
	"templates/06_primary.tmpl":                         bindataTemplates06primarytmpl,
	"templates/07_fielder.tmpl":                         bindataTemplates07fieldertmpl,
	"templates/08_single-relationer.tmpl":               bindataTemplates08singlerelationertmpl,
	"templates/09_multi-relationer.tmpl":                bindataTemplates09multirelationertmpl,
	"templates/10_model-definition.tmpl":                bindataTemplates10modeldefinitiontmpl,
	"templates/11_single-file-models.tmpl":              bindataTemplates11singlefilemodelstmpl,
	"templates/12_single-file-collections.tmpl":         bindataTemplates12singlefilecollectionstmpl,
	"templates/13_collection-definition.tmpl":           bindataTemplates13collectiondefinitiontmpl,
	"templates/14_collection-initializer.tmpl":          bindataTemplates14collectioninitializertmpl,
	"templates/15_collection-initializer-function.tmpl": bindataTemplates15collectioninitializerfunctiontmpl,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"templates": {Func: nil, Children: map[string]*bintree{
		"00_imports.tmpl": {Func: bindataTemplates00importstmpl, Children: map[string]*bintree{}},
		"01_initialize_collections.tmpl": {Func: bindataTemplates01initializecollectionstmpl, Children: map[string]*bintree{}},
		"02_collection.tmpl": {Func: bindataTemplates02collectiontmpl, Children: map[string]*bintree{}},
		"03_collection-structure.tmpl": {Func: bindataTemplates03collectionstructuretmpl, Children: map[string]*bintree{}},
		"04_collection-builder.tmpl": {Func: bindataTemplates04collectionbuildertmpl, Children: map[string]*bintree{}},
		"05_model.tmpl": {Func: bindataTemplates05modeltmpl, Children: map[string]*bintree{}},
		"06_primary.tmpl": {Func: bindataTemplates06primarytmpl, Children: map[string]*bintree{}},
		"07_fielder.tmpl": {Func: bindataTemplates07fieldertmpl, Children: map[string]*bintree{}},
		"08_single-relationer.tmpl": {Func: bindataTemplates08singlerelationertmpl, Children: map[string]*bintree{}},
		"09_multi-relationer.tmpl": {Func: bindataTemplates09multirelationertmpl, Children: map[string]*bintree{}},
		"10_model-definition.tmpl": {Func: bindataTemplates10modeldefinitiontmpl, Children: map[string]*bintree{}},
		"11_single-file-models.tmpl": {Func: bindataTemplates11singlefilemodelstmpl, Children: map[string]*bintree{}},
		"12_single-file-collections.tmpl": {Func: bindataTemplates12singlefilecollectionstmpl, Children: map[string]*bintree{}},
		"13_collection-definition.tmpl": {Func: bindataTemplates13collectiondefinitiontmpl, Children: map[string]*bintree{}},
		"14_collection-initializer.tmpl": {Func: bindataTemplates14collectioninitializertmpl, Children: map[string]*bintree{}},
		"15_collection-initializer-function.tmpl": {Func: bindataTemplates15collectioninitializerfunctiontmpl, Children: map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
